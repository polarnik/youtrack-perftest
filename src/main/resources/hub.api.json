{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Hub REST API",
    "description" : "JetBrains Teamware Connector",
    "license" : {
      "name" : "Hub license",
      "url" : "https://www.jetbrains.com/hub/download/license.html"
    },
    "version" : "2024.2.38971"
  },
  "servers" : [ {
    "url" : "http://localhost:8080/hub/api/rest"
  } ],
  "security" : [ {
    "bearer" : [ ]
  } ],
  "paths" : {
    "/authmodules" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,ordinal,accountsSize,disabled",
            "default" : "id,name,ordinal,accountsSize,disabled"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "AuthmodulesPage of 'authmodule' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthmodulesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,ordinal,accountsSize,disabled",
            "default" : "id,name,ordinal,accountsSize,disabled"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/authmodule"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single authmodule",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/authmodule"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,name,ordinal,accountsSize,disabled",
          "default" : "id,name,ordinal,accountsSize,disabled"
        }
      } ]
    },
    "/authmodules/{authmoduleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,ordinal,accountsSize,disabled",
            "default" : "id,name,ordinal,accountsSize,disabled"
          }
        }, {
          "name" : "authmoduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single authmodule",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/authmodule"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,ordinal,accountsSize,disabled",
            "default" : "id,name,ordinal,accountsSize,disabled"
          }
        }, {
          "name" : "authmoduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/authmodule"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single authmodule",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/authmodule"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "successor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,ordinal,accountsSize,disabled",
            "default" : "id,name,ordinal,accountsSize,disabled"
          }
        }, {
          "name" : "authmoduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,name,ordinal,accountsSize,disabled",
          "default" : "id,name,ordinal,accountsSize,disabled"
        }
      } ]
    },
    "/authmodules/{authmoduleId}/password/strength" : {
      "post" : {
        "parameters" : [ {
          "name" : "user",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "username",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "authmoduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "referenceScore,score,maxScore,referenceEntropy,entropy,maxEntropy,feedbackMessage",
            "default" : "referenceScore,score,maxScore,referenceEntropy,entropy,maxEntropy,feedbackMessage"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/plainpassword"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Array of passwordStrength",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/passwordStrength"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "authmoduleId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/authmodules/{authmoduleId}/extension/{operation}" : {
      "post" : {
        "parameters" : [ {
          "name" : "authmoduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "operation",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "authmoduleId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "operation",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/authmodules/{authmoduleId}/resolve" : {
      "post" : {
        "parameters" : [ {
          "name" : "authmoduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent",
            "default" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/credentials"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/details"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "authmoduleId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/authmodules/{authmoduleId}/synchronization/schedule" : {
      "post" : {
        "parameters" : [ {
          "name" : "authmoduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "authmoduleId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/authmodules/{authmoduleId}/autojoingroups" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "authmoduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "AutojoingroupsPage of 'userGroup' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AutojoingroupsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "authmoduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/userGroup"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single userGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/userGroup"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
          "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
        }
      } ]
    },
    "/authmodules/{authmoduleId}/autojoingroups/{userGroupId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "authmoduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single userGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/userGroup"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "authmoduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
          "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
        }
      } ]
    },
    "/authmodules/{authmoduleId}/groupmappings" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "externalGroupName",
            "default" : "externalGroupName"
          }
        }, {
          "name" : "authmoduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "GroupmappingsPage of 'authModuleGroupMapping' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupmappingsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "externalGroupName",
            "default" : "externalGroupName"
          }
        }, {
          "name" : "authmoduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/authModuleGroupMapping"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single authModuleGroupMapping",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/authModuleGroupMapping"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "externalGroupName",
          "default" : "externalGroupName"
        }
      } ]
    },
    "/authmodules/{authmoduleId}/groupmappings/{authModuleGroupMappingId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "externalGroupName",
            "default" : "externalGroupName"
          }
        }, {
          "name" : "authmoduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authModuleGroupMappingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single authModuleGroupMapping",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/authModuleGroupMapping"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "externalGroupName",
            "default" : "externalGroupName"
          }
        }, {
          "name" : "authmoduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authModuleGroupMappingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "externalGroupName",
          "default" : "externalGroupName"
        }
      } ]
    },
    "/authmodules/{authmoduleId}/customattributemappings" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "mapping",
            "default" : "mapping"
          }
        }, {
          "name" : "authmoduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomattributemappingsPage of 'authModuleCustomAttributeMapping' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomattributemappingsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "mapping",
            "default" : "mapping"
          }
        }, {
          "name" : "authmoduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/authModuleCustomAttributeMapping"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single authModuleCustomAttributeMapping",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/authModuleCustomAttributeMapping"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "mapping",
          "default" : "mapping"
        }
      } ]
    },
    "/authmodules/{authmoduleId}/customattributemappings/{authModuleCustomAttributeMappingId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "mapping",
            "default" : "mapping"
          }
        }, {
          "name" : "authmoduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authModuleCustomAttributeMappingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single authModuleCustomAttributeMapping",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/authModuleCustomAttributeMapping"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "mapping",
            "default" : "mapping"
          }
        }, {
          "name" : "authmoduleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authModuleCustomAttributeMappingId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "mapping",
          "default" : "mapping"
        }
      } ]
    },
    "/certificates" : {
      "get" : {
        "parameters" : [ {
          "name" : "disabled",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,disabled,name,data,certificateType,version,serialNumber,issuedBy,issuedTo,validFrom,validTo,algorithm",
            "default" : "id,disabled,name,data,certificateType,version,serialNumber,issuedBy,issuedTo,validFrom,validTo,algorithm"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CertificatesPage of 'certificate' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificatesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,disabled,name,data,certificateType,version,serialNumber,issuedBy,issuedTo,validFrom,validTo,algorithm",
            "default" : "id,disabled,name,data,certificateType,version,serialNumber,issuedBy,issuedTo,validFrom,validTo,algorithm"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/certificate"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single certificate",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/certificate"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,disabled,name,data,certificateType,version,serialNumber,issuedBy,issuedTo,validFrom,validTo,algorithm",
          "default" : "id,disabled,name,data,certificateType,version,serialNumber,issuedBy,issuedTo,validFrom,validTo,algorithm"
        }
      } ]
    },
    "/certificates/{certificateId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,disabled,name,data,certificateType,version,serialNumber,issuedBy,issuedTo,validFrom,validTo,algorithm",
            "default" : "id,disabled,name,data,certificateType,version,serialNumber,issuedBy,issuedTo,validFrom,validTo,algorithm"
          }
        }, {
          "name" : "certificateId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single certificate",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/certificate"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,disabled,name,data,certificateType,version,serialNumber,issuedBy,issuedTo,validFrom,validTo,algorithm",
            "default" : "id,disabled,name,data,certificateType,version,serialNumber,issuedBy,issuedTo,validFrom,validTo,algorithm"
          }
        }, {
          "name" : "certificateId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/certificate"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single certificate",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/certificate"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "successor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,disabled,name,data,certificateType,version,serialNumber,issuedBy,issuedTo,validFrom,validTo,algorithm",
            "default" : "id,disabled,name,data,certificateType,version,serialNumber,issuedBy,issuedTo,validFrom,validTo,algorithm"
          }
        }, {
          "name" : "certificateId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,disabled,name,data,certificateType,version,serialNumber,issuedBy,issuedTo,validFrom,validTo,algorithm",
          "default" : "id,disabled,name,data,certificateType,version,serialNumber,issuedBy,issuedTo,validFrom,validTo,algorithm"
        }
      } ]
    },
    "/dashboards" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "name,data,permission,access,favorite,ordinal",
            "default" : "name,data,permission,access,favorite,ordinal"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ItemsPage of 'dashboard' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ItemsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "name,data,permission,access,favorite,ordinal",
            "default" : "name,data,permission,access,favorite,ordinal"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/dashboard"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single dashboard",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dashboard"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "name,data,permission,access,favorite,ordinal",
          "default" : "name,data,permission,access,favorite,ordinal"
        }
      } ]
    },
    "/dashboards/{dashboardId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "name,data,permission,access,favorite,ordinal",
            "default" : "name,data,permission,access,favorite,ordinal"
          }
        }, {
          "name" : "dashboardId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single dashboard",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dashboard"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "name,data,permission,access,favorite,ordinal",
            "default" : "name,data,permission,access,favorite,ordinal"
          }
        }, {
          "name" : "dashboardId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/dashboard"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single dashboard",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dashboard"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "successor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "name,data,permission,access,favorite,ordinal",
            "default" : "name,data,permission,access,favorite,ordinal"
          }
        }, {
          "name" : "dashboardId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "name,data,permission,access,favorite,ordinal",
          "default" : "name,data,permission,access,favorite,ordinal"
        }
      } ]
    },
    "/dashboards/{dashboardId}/order" : {
      "post" : {
        "parameters" : [ {
          "name" : "dashboardId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/dashboard"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "dashboardId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/dashboards/{dashboardId}/permissions" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "permission",
            "default" : "permission"
          }
        }, {
          "name" : "dashboardId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ItemsPage of 'dashboardPermission' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ItemsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "permission",
            "default" : "permission"
          }
        }, {
          "name" : "dashboardId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/dashboardPermission"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single dashboardPermission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dashboardPermission"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "permission",
          "default" : "permission"
        }
      } ]
    },
    "/dashboards/{dashboardId}/permissions/{dashboardPermissionId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "permission",
            "default" : "permission"
          }
        }, {
          "name" : "dashboardId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dashboardPermissionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single dashboardPermission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/dashboardPermission"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "permission",
            "default" : "permission"
          }
        }, {
          "name" : "dashboardId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dashboardPermissionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "permission",
          "default" : "permission"
        }
      } ]
    },
    "/events" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,targetId,targetType,targetPresentation,author,authorPresentation,authorType,type,timestamp,eraseTimestamp",
            "default" : "id,targetId,targetType,targetPresentation,author,authorPresentation,authorType,type,timestamp,eraseTimestamp"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "EventsPage of 'event' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,targetId,targetType,targetPresentation,author,authorPresentation,authorType,type,timestamp,eraseTimestamp",
          "default" : "id,targetId,targetType,targetPresentation,author,authorPresentation,authorType,type,timestamp,eraseTimestamp"
        }
      } ]
    },
    "/events/{eventId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,targetId,targetType,targetPresentation,author,authorPresentation,authorType,type,timestamp,eraseTimestamp",
            "default" : "id,targetId,targetType,targetPresentation,author,authorPresentation,authorType,type,timestamp,eraseTimestamp"
          }
        }, {
          "name" : "eventId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single event",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/event"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,targetId,targetType,targetPresentation,author,authorPresentation,authorType,type,timestamp,eraseTimestamp",
          "default" : "id,targetId,targetType,targetPresentation,author,authorPresentation,authorType,type,timestamp,eraseTimestamp"
        }
      } ]
    },
    "/helpdesksettings" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "HelpdesksettingsPage of 'projectHelpdeskSettings' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HelpdesksettingsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id",
          "default" : "id"
        }
      } ]
    },
    "/helpdesksettings/{projectHelpdeskSettingsId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "projectHelpdeskSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single projectHelpdeskSettings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/projectHelpdeskSettings"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "projectHelpdeskSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/projectHelpdeskSettings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single projectHelpdeskSettings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/projectHelpdeskSettings"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id",
          "default" : "id"
        }
      } ]
    },
    "/helpdesksettings/{projectHelpdeskSettingsId}/reporters" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "projectHelpdeskSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ReportersPage of 'user' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReportersPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "projectHelpdeskSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/user"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
          "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
        }
      } ]
    },
    "/helpdesksettings/{projectHelpdeskSettingsId}/reporters/{userId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "projectHelpdeskSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "projectHelpdeskSettingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
          "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
        }
      } ]
    },
    "/hubfeatures" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "key,name,description,restartRequired,enabled",
            "default" : "key,name,description,restartRequired,enabled"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "HubfeaturesPage of 'hubFeature' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HubfeaturesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "key,name,description,restartRequired,enabled",
          "default" : "key,name,description,restartRequired,enabled"
        }
      } ]
    },
    "/hubfeatures/{hubFeatureId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "key,name,description,restartRequired,enabled",
            "default" : "key,name,description,restartRequired,enabled"
          }
        }, {
          "name" : "hubFeatureId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single hubFeature",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/hubFeature"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "key,name,description,restartRequired,enabled",
            "default" : "key,name,description,restartRequired,enabled"
          }
        }, {
          "name" : "hubFeatureId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/hubFeature"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single hubFeature",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/hubFeature"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "key,name,description,restartRequired,enabled",
          "default" : "key,name,description,restartRequired,enabled"
        }
      } ]
    },
    "/hubfeatures/{hubFeatureId}/enabled" : {
      "get" : {
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "hubFeatureId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of enabledFeatures",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/enabledFeatures"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "hubFeatureId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/keystores" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,certificateData",
            "default" : "id,name,certificateData"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "KeystoresPage of 'keyStore' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KeystoresPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,certificateData",
            "default" : "id,name,certificateData"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/keyStore"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single keyStore",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/keyStore"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,name,certificateData",
          "default" : "id,name,certificateData"
        }
      } ]
    },
    "/keystores/{keyStoreId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,certificateData",
            "default" : "id,name,certificateData"
          }
        }, {
          "name" : "keyStoreId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single keyStore",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/keyStore"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,certificateData",
            "default" : "id,name,certificateData"
          }
        }, {
          "name" : "keyStoreId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/keyStore"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single keyStore",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/keyStore"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "successor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,certificateData",
            "default" : "id,name,certificateData"
          }
        }, {
          "name" : "keyStoreId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,name,certificateData",
          "default" : "id,name,certificateData"
        }
      } ]
    },
    "/metrics" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,availableProcessors,serverStartTime,logsFolder",
            "default" : "id,availableProcessors,serverStartTime,logsFolder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "MetricsPage of 'metrics' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,availableProcessors,serverStartTime,logsFolder",
          "default" : "id,availableProcessors,serverStartTime,logsFolder"
        }
      } ]
    },
    "/metrics/{metricsId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,availableProcessors,serverStartTime,logsFolder",
            "default" : "id,availableProcessors,serverStartTime,logsFolder"
          }
        }, {
          "name" : "metricsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single metrics",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/metrics"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,availableProcessors,serverStartTime,logsFolder",
          "default" : "id,availableProcessors,serverStartTime,logsFolder"
        }
      } ]
    },
    "/metrics/{metricsId}/dumpDiagnostics" : {
      "post" : {
        "parameters" : [ {
          "name" : "metricsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "metricsId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/migrations" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,applied",
            "default" : "id,applied"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "MigrationsPage of 'migrations' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MigrationsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,applied",
          "default" : "id,applied"
        }
      } ]
    },
    "/migrations/{migrationsId}" : {
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,applied",
            "default" : "id,applied"
          }
        }, {
          "name" : "migrationsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/migrations"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single migrations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/migrations"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "successor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,applied",
            "default" : "id,applied"
          }
        }, {
          "name" : "migrationsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,applied",
          "default" : "id,applied"
        }
      } ]
    },
    "/organizationroles" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OrganizationrolesPage of 'organizationRole' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationrolesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id",
          "default" : "id"
        }
      } ]
    },
    "/organizationroles/{organizationRoleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "organizationRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single organizationRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/organizationRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id",
          "default" : "id"
        }
      } ]
    },
    "/organizations" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,emailDomain,creationTime,allUsers,projectsCount,iconUrl,icon,defaultIcon",
            "default" : "id,key,name,description,emailDomain,creationTime,allUsers,projectsCount,iconUrl,icon,defaultIcon"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OrganizationsPage of 'organization' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,emailDomain,creationTime,allUsers,projectsCount,iconUrl,icon,defaultIcon",
            "default" : "id,key,name,description,emailDomain,creationTime,allUsers,projectsCount,iconUrl,icon,defaultIcon"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/organization"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single organization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/organization"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,description,emailDomain,creationTime,allUsers,projectsCount,iconUrl,icon,defaultIcon",
          "default" : "id,key,name,description,emailDomain,creationTime,allUsers,projectsCount,iconUrl,icon,defaultIcon"
        }
      } ]
    },
    "/organizations/{organizationId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,emailDomain,creationTime,allUsers,projectsCount,iconUrl,icon,defaultIcon",
            "default" : "id,key,name,description,emailDomain,creationTime,allUsers,projectsCount,iconUrl,icon,defaultIcon"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single organization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/organization"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,emailDomain,creationTime,allUsers,projectsCount,iconUrl,icon,defaultIcon",
            "default" : "id,key,name,description,emailDomain,creationTime,allUsers,projectsCount,iconUrl,icon,defaultIcon"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/organization"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single organization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/organization"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "successor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,emailDomain,creationTime,allUsers,projectsCount,iconUrl,icon,defaultIcon",
            "default" : "id,key,name,description,emailDomain,creationTime,allUsers,projectsCount,iconUrl,icon,defaultIcon"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,description,emailDomain,creationTime,allUsers,projectsCount,iconUrl,icon,defaultIcon",
          "default" : "id,key,name,description,emailDomain,creationTime,allUsers,projectsCount,iconUrl,icon,defaultIcon"
        }
      } ]
    },
    "/organizations/{organizationId}/icon" : {
      "get" : {
        "parameters" : [ {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "dpr",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "default",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "binary data",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "organizationId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/organizations/{organizationId}/projects" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard",
            "default" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ProjectsPage of 'project' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard",
            "default" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/project"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single project",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/project"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard",
          "default" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard"
        }
      } ]
    },
    "/organizations/{organizationId}/projects/{projectId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard",
            "default" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single project",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/project"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard",
            "default" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard",
          "default" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard"
        }
      } ]
    },
    "/organizations/{organizationId}/ownUsers" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OwnUsersPage of 'user' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OwnUsersPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/user"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
          "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
        }
      } ]
    },
    "/organizations/{organizationId}/ownUsers/{userId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
          "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
        }
      } ]
    },
    "/organizations/{organizationId}/users" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "UsersPage of 'user' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/user"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
          "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
        }
      } ]
    },
    "/organizations/{organizationId}/users/{userId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
          "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
        }
      } ]
    },
    "/organizations/{organizationId}/groups" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "GroupsPage of 'userGroup' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/userGroup"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single userGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/userGroup"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
          "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
        }
      } ]
    },
    "/organizations/{organizationId}/groups/{userGroupId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single userGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/userGroup"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
          "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
        }
      } ]
    },
    "/organizations/{organizationId}/teams" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "userCount",
            "default" : "userCount"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "TeamsPage of 'projectTeam' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeamsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "userCount",
            "default" : "userCount"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/projectTeam"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single projectTeam",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/projectTeam"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "userCount",
          "default" : "userCount"
        }
      } ]
    },
    "/organizations/{organizationId}/teams/{projectTeamId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "userCount",
            "default" : "userCount"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectTeamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single projectTeam",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/projectTeam"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "userCount",
            "default" : "userCount"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectTeamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "userCount",
          "default" : "userCount"
        }
      } ]
    },
    "/organizations/{organizationId}/organizationroles" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OrganizationrolesPage of 'organizationRole' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationrolesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id",
          "default" : "id"
        }
      } ]
    },
    "/organizations/{organizationId}/organizationroles/{organizationRoleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "organizationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single organizationRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/organizationRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id",
          "default" : "id"
        }
      } ]
    },
    "/permissions" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,global,entityType,operation",
            "default" : "id,key,name,description,global,entityType,operation"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "PermissionsPage of 'permission' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PermissionsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,global,entityType,operation",
            "default" : "id,key,name,description,global,entityType,operation"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/permission"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single permission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/permission"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,description,global,entityType,operation",
          "default" : "id,key,name,description,global,entityType,operation"
        }
      } ]
    },
    "/permissions/{permissionId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,global,entityType,operation",
            "default" : "id,key,name,description,global,entityType,operation"
          }
        }, {
          "name" : "permissionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single permission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/permission"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,global,entityType,operation",
            "default" : "id,key,name,description,global,entityType,operation"
          }
        }, {
          "name" : "permissionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/permission"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single permission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/permission"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "successor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,global,entityType,operation",
            "default" : "id,key,name,description,global,entityType,operation"
          }
        }, {
          "name" : "permissionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,description,global,entityType,operation",
          "default" : "id,key,name,description,global,entityType,operation"
        }
      } ]
    },
    "/permissions/{permissionId}/cache" : {
      "get" : {
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "principal",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "permissionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "global",
            "default" : "global"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of cachedPermission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/cachedPermission"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "permissionId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/profileattributeprototypes" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,type,showOnUserList",
            "default" : "id,name,type,showOnUserList"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ProfileattributeprototypesPage of 'profileAttributePrototype' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileattributeprototypesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,type,showOnUserList",
            "default" : "id,name,type,showOnUserList"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/profileAttributePrototype"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single profileAttributePrototype",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/profileAttributePrototype"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,name,type,showOnUserList",
          "default" : "id,name,type,showOnUserList"
        }
      } ]
    },
    "/profileattributeprototypes/{profileAttributePrototypeId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,type,showOnUserList",
            "default" : "id,name,type,showOnUserList"
          }
        }, {
          "name" : "profileAttributePrototypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single profileAttributePrototype",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/profileAttributePrototype"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,type,showOnUserList",
            "default" : "id,name,type,showOnUserList"
          }
        }, {
          "name" : "profileAttributePrototypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/profileAttributePrototype"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single profileAttributePrototype",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/profileAttributePrototype"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "successor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,type,showOnUserList",
            "default" : "id,name,type,showOnUserList"
          }
        }, {
          "name" : "profileAttributePrototypeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,name,type,showOnUserList",
          "default" : "id,name,type,showOnUserList"
        }
      } ]
    },
    "/projectroles" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ProjectrolesPage of 'projectRole' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectrolesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,teamMember",
          "default" : "id,teamMember"
        }
      } ]
    },
    "/projectroles/{projectRoleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "projectRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single projectRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/projectRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,teamMember",
          "default" : "id,teamMember"
        }
      } ]
    },
    "/projects" : {
      "get" : {
        "parameters" : [ {
          "name" : "archived",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard",
            "default" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ProjectsPage of 'project' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard",
            "default" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/project"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single project",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/project"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard",
          "default" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard"
        }
      } ]
    },
    "/projects/{projectId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard",
            "default" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single project",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/project"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard",
            "default" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/project"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single project",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/project"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "successor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard",
            "default" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard",
          "default" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard"
        }
      } ]
    },
    "/projects/{projectId}/global" : {
      "get" : {
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard",
            "default" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of project",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/project"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "projectId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/projects/{projectId}/icon" : {
      "get" : {
        "parameters" : [ {
          "name" : "size",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "dpr",
          "in" : "query",
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        }, {
          "name" : "default",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "binary data",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "projectId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/projects/{projectId}/merge" : {
      "post" : {
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "description",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "owner",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organization",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard",
            "default" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/project"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Array of project",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/project"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "projectId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/projects/{projectId}/resources" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,homeUrl,type",
            "default" : "id,key,name,homeUrl,type"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ResourcesPage of 'resource' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourcesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,homeUrl,type",
            "default" : "id,key,name,homeUrl,type"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/resource"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/resource"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,homeUrl,type",
          "default" : "id,key,name,homeUrl,type"
        }
      } ]
    },
    "/projects/{projectId}/resources/{resourceId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,homeUrl,type",
            "default" : "id,key,name,homeUrl,type"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/resource"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,homeUrl,type",
            "default" : "id,key,name,homeUrl,type"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,homeUrl,type",
          "default" : "id,key,name,homeUrl,type"
        }
      } ]
    },
    "/projects/{projectId}/teams" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "usersTotal,groupsTotal",
            "default" : "usersTotal,groupsTotal"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "TeamsPage of 'team' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TeamsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "usersTotal,groupsTotal",
            "default" : "usersTotal,groupsTotal"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/team"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single team",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/team"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "usersTotal,groupsTotal",
          "default" : "usersTotal,groupsTotal"
        }
      } ]
    },
    "/projects/{projectId}/teams/{teamId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "usersTotal,groupsTotal",
            "default" : "usersTotal,groupsTotal"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "teamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single team",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/team"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "usersTotal,groupsTotal",
          "default" : "usersTotal,groupsTotal"
        }
      } ]
    },
    "/projects/{projectId}/teams/{teamId}/whole" : {
      "get" : {
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "teamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "usersTotal,groupsTotal",
            "default" : "usersTotal,groupsTotal"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of team",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/team"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "projectId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "teamId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/projects/{projectId}/transitiveprojectroles" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "TransitiveprojectrolesPage of 'projectRole' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransitiveprojectrolesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,teamMember",
          "default" : "id,teamMember"
        }
      } ]
    },
    "/projects/{projectId}/transitiveprojectroles/{projectRoleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single projectRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/projectRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,teamMember",
          "default" : "id,teamMember"
        }
      } ]
    },
    "/projectteams" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "userCount",
            "default" : "userCount"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ProjectteamsPage of 'projectTeam' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectteamsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "userCount",
          "default" : "userCount"
        }
      } ]
    },
    "/projectteams/{projectTeamId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "userCount",
            "default" : "userCount"
          }
        }, {
          "name" : "projectTeamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single projectTeam",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/projectTeam"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "userCount",
            "default" : "userCount"
          }
        }, {
          "name" : "projectTeamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/projectTeam"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single projectTeam",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/projectTeam"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "userCount",
          "default" : "userCount"
        }
      } ]
    },
    "/projectteams/{projectTeamId}/absorb" : {
      "post" : {
        "parameters" : [ {
          "name" : "absorbMembers",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "projectTeamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "userCount",
            "default" : "userCount"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/userGroup"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single projectTeam",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/projectTeam"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "projectTeamId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/projectteams/{projectTeamId}/groups" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "projectTeamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "GroupsPage of 'userGroup' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "projectTeamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/userGroup"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single userGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/userGroup"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
          "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
        }
      } ]
    },
    "/projectteams/{projectTeamId}/groups/{userGroupId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "projectTeamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single userGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/userGroup"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "keepUsers",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "projectTeamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
          "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
        }
      } ]
    },
    "/projectteams/{projectTeamId}/users" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "projectTeamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "UsersPage of 'user' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "projectTeamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/user"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
          "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
        }
      } ]
    },
    "/projectteams/{projectTeamId}/users/{userId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "projectTeamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "projectTeamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
          "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
        }
      } ]
    },
    "/projectteams/{projectTeamId}/ownUsers" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "projectTeamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OwnUsersPage of 'user' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OwnUsersPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "projectTeamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/user"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
          "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
        }
      } ]
    },
    "/projectteams/{projectTeamId}/ownUsers/{userId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "projectTeamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "projectTeamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
          "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
        }
      } ]
    },
    "/projectteams/{projectTeamId}/projectroles" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "projectTeamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ProjectrolesPage of 'projectRole' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectrolesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "projectTeamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/projectRole"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single projectRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/projectRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,teamMember",
          "default" : "id,teamMember"
        }
      } ]
    },
    "/projectteams/{projectTeamId}/projectroles/{projectRoleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "projectTeamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single projectRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/projectRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "projectTeamId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,teamMember",
          "default" : "id,teamMember"
        }
      } ]
    },
    "/resources" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,homeUrl,type",
            "default" : "id,key,name,homeUrl,type"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ResourcesPage of 'resource' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourcesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,homeUrl,type",
            "default" : "id,key,name,homeUrl,type"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/resource"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/resource"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,homeUrl,type",
          "default" : "id,key,name,homeUrl,type"
        }
      } ]
    },
    "/resources/{resourceId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,homeUrl,type",
            "default" : "id,key,name,homeUrl,type"
          }
        }, {
          "name" : "resourceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/resource"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,homeUrl,type",
            "default" : "id,key,name,homeUrl,type"
          }
        }, {
          "name" : "resourceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/resource"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/resource"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "successor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,homeUrl,type",
            "default" : "id,key,name,homeUrl,type"
          }
        }, {
          "name" : "resourceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,homeUrl,type",
          "default" : "id,key,name,homeUrl,type"
        }
      } ]
    },
    "/roles" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,immutable",
            "default" : "id,key,name,description,immutable"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "RolesPage of 'role' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RolesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,immutable",
            "default" : "id,key,name,description,immutable"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/role"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/role"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,description,immutable",
          "default" : "id,key,name,description,immutable"
        }
      } ]
    },
    "/roles/{roleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,immutable",
            "default" : "id,key,name,description,immutable"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/role"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,immutable",
            "default" : "id,key,name,description,immutable"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/role"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/role"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "successor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,immutable",
            "default" : "id,key,name,description,immutable"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,description,immutable",
          "default" : "id,key,name,description,immutable"
        }
      } ]
    },
    "/roles/{roleId}/merge" : {
      "post" : {
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "description",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,immutable",
            "default" : "id,key,name,description,immutable"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/role"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Array of role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/role"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "roleId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/roles/{roleId}/servicepermissions" : {
      "post" : {
        "parameters" : [ {
          "name" : "add",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "remove",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,immutable",
            "default" : "id,key,name,description,immutable"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/service"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/role"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "roleId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/roles/{roleId}/reset" : {
      "post" : {
        "parameters" : [ {
          "name" : "roleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,immutable",
            "default" : "id,key,name,description,immutable"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/service"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/role"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "roleId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/roles/{roleId}/permissions" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,global,entityType,operation",
            "default" : "id,key,name,description,global,entityType,operation"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "PermissionsPage of 'permission' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PermissionsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,global,entityType,operation",
            "default" : "id,key,name,description,global,entityType,operation"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/permission"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single permission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/permission"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,description,global,entityType,operation",
          "default" : "id,key,name,description,global,entityType,operation"
        }
      } ]
    },
    "/roles/{roleId}/permissions/{permissionId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,global,entityType,operation",
            "default" : "id,key,name,description,global,entityType,operation"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "permissionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single permission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/permission"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,global,entityType,operation",
            "default" : "id,key,name,description,global,entityType,operation"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "permissionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,description,global,entityType,operation",
          "default" : "id,key,name,description,global,entityType,operation"
        }
      } ]
    },
    "/saml2/serviceproviders" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,assertionConsumerUrl,logoutResponseSupported,loginAttributeName,fullNameAttributeName,emailAttributeName,groupsAttributeName,externalIdAttributeName",
            "default" : "description,assertionConsumerUrl,logoutResponseSupported,loginAttributeName,fullNameAttributeName,emailAttributeName,groupsAttributeName,externalIdAttributeName"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ItemsPage of 'serviceProviderMetadata' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ItemsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,assertionConsumerUrl,logoutResponseSupported,loginAttributeName,fullNameAttributeName,emailAttributeName,groupsAttributeName,externalIdAttributeName",
            "default" : "description,assertionConsumerUrl,logoutResponseSupported,loginAttributeName,fullNameAttributeName,emailAttributeName,groupsAttributeName,externalIdAttributeName"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/serviceProviderMetadata"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single serviceProviderMetadata",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/serviceProviderMetadata"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "description,assertionConsumerUrl,logoutResponseSupported,loginAttributeName,fullNameAttributeName,emailAttributeName,groupsAttributeName,externalIdAttributeName",
          "default" : "description,assertionConsumerUrl,logoutResponseSupported,loginAttributeName,fullNameAttributeName,emailAttributeName,groupsAttributeName,externalIdAttributeName"
        }
      } ]
    },
    "/saml2/serviceproviders/{serviceProviderMetadataId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,assertionConsumerUrl,logoutResponseSupported,loginAttributeName,fullNameAttributeName,emailAttributeName,groupsAttributeName,externalIdAttributeName",
            "default" : "description,assertionConsumerUrl,logoutResponseSupported,loginAttributeName,fullNameAttributeName,emailAttributeName,groupsAttributeName,externalIdAttributeName"
          }
        }, {
          "name" : "serviceProviderMetadataId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single serviceProviderMetadata",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/serviceProviderMetadata"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,assertionConsumerUrl,logoutResponseSupported,loginAttributeName,fullNameAttributeName,emailAttributeName,groupsAttributeName,externalIdAttributeName",
            "default" : "description,assertionConsumerUrl,logoutResponseSupported,loginAttributeName,fullNameAttributeName,emailAttributeName,groupsAttributeName,externalIdAttributeName"
          }
        }, {
          "name" : "serviceProviderMetadataId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/serviceProviderMetadata"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single serviceProviderMetadata",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/serviceProviderMetadata"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "successor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,assertionConsumerUrl,logoutResponseSupported,loginAttributeName,fullNameAttributeName,emailAttributeName,groupsAttributeName,externalIdAttributeName",
            "default" : "description,assertionConsumerUrl,logoutResponseSupported,loginAttributeName,fullNameAttributeName,emailAttributeName,groupsAttributeName,externalIdAttributeName"
          }
        }, {
          "name" : "serviceProviderMetadataId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "description,assertionConsumerUrl,logoutResponseSupported,loginAttributeName,fullNameAttributeName,emailAttributeName,groupsAttributeName,externalIdAttributeName",
          "default" : "description,assertionConsumerUrl,logoutResponseSupported,loginAttributeName,fullNameAttributeName,emailAttributeName,groupsAttributeName,externalIdAttributeName"
        }
      } ]
    },
    "/services" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "key,homeUrl,userUriPattern,groupUriPattern,applicationName,vendor,releaseDate,version,iconUrl,trusted,secret,apiVersion",
            "default" : "key,homeUrl,userUriPattern,groupUriPattern,applicationName,vendor,releaseDate,version,iconUrl,trusted,secret,apiVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ServicesPage of 'service' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServicesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "key,homeUrl,userUriPattern,groupUriPattern,applicationName,vendor,releaseDate,version,iconUrl,trusted,secret,apiVersion",
            "default" : "key,homeUrl,userUriPattern,groupUriPattern,applicationName,vendor,releaseDate,version,iconUrl,trusted,secret,apiVersion"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/service"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single service",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/service"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "key,homeUrl,userUriPattern,groupUriPattern,applicationName,vendor,releaseDate,version,iconUrl,trusted,secret,apiVersion",
          "default" : "key,homeUrl,userUriPattern,groupUriPattern,applicationName,vendor,releaseDate,version,iconUrl,trusted,secret,apiVersion"
        }
      } ]
    },
    "/services/{serviceId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "key,homeUrl,userUriPattern,groupUriPattern,applicationName,vendor,releaseDate,version,iconUrl,trusted,secret,apiVersion",
            "default" : "key,homeUrl,userUriPattern,groupUriPattern,applicationName,vendor,releaseDate,version,iconUrl,trusted,secret,apiVersion"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single service",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/service"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "key,homeUrl,userUriPattern,groupUriPattern,applicationName,vendor,releaseDate,version,iconUrl,trusted,secret,apiVersion",
            "default" : "key,homeUrl,userUriPattern,groupUriPattern,applicationName,vendor,releaseDate,version,iconUrl,trusted,secret,apiVersion"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/service"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single service",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/service"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "successor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "key,homeUrl,userUriPattern,groupUriPattern,applicationName,vendor,releaseDate,version,iconUrl,trusted,secret,apiVersion",
            "default" : "key,homeUrl,userUriPattern,groupUriPattern,applicationName,vendor,releaseDate,version,iconUrl,trusted,secret,apiVersion"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "key,homeUrl,userUriPattern,groupUriPattern,applicationName,vendor,releaseDate,version,iconUrl,trusted,secret,apiVersion",
          "default" : "key,homeUrl,userUriPattern,groupUriPattern,applicationName,vendor,releaseDate,version,iconUrl,trusted,secret,apiVersion"
        }
      } ]
    },
    "/services/{serviceId}/header" : {
      "get" : {
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,homeUrl,iconUrl,applicationName,vendor",
            "default" : "id,name,homeUrl,iconUrl,applicationName,vendor"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of headerItem",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/headerItem"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "serviceId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/services/{serviceId}/projectroles" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ProjectrolesPage of 'projectRole' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectrolesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/projectRole"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single projectRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/projectRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,teamMember",
          "default" : "id,teamMember"
        }
      } ]
    },
    "/services/{serviceId}/projectroles/{projectRoleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single projectRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/projectRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,teamMember",
          "default" : "id,teamMember"
        }
      } ]
    },
    "/services/{serviceId}/organizationroles" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OrganizationrolesPage of 'organizationRole' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationrolesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/organizationRole"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single organizationRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/organizationRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id",
          "default" : "id"
        }
      } ]
    },
    "/services/{serviceId}/organizationroles/{organizationRoleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single organizationRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/organizationRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id",
          "default" : "id"
        }
      } ]
    },
    "/services/{serviceId}/resources" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,homeUrl,type",
            "default" : "id,key,name,homeUrl,type"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ResourcesPage of 'resource' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourcesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,homeUrl,type",
            "default" : "id,key,name,homeUrl,type"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/resource"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/resource"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,homeUrl,type",
          "default" : "id,key,name,homeUrl,type"
        }
      } ]
    },
    "/services/{serviceId}/resources/{resourceId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,homeUrl,type",
            "default" : "id,key,name,homeUrl,type"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/resource"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,homeUrl,type",
            "default" : "id,key,name,homeUrl,type"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,homeUrl,type",
          "default" : "id,key,name,homeUrl,type"
        }
      } ]
    },
    "/services/{serviceId}/permissions" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,global,entityType,operation",
            "default" : "id,key,name,description,global,entityType,operation"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "PermissionsPage of 'permission' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PermissionsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,global,entityType,operation",
            "default" : "id,key,name,description,global,entityType,operation"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/permission"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single permission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/permission"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,description,global,entityType,operation",
          "default" : "id,key,name,description,global,entityType,operation"
        }
      } ]
    },
    "/services/{serviceId}/permissions/{permissionId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,global,entityType,operation",
            "default" : "id,key,name,description,global,entityType,operation"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "permissionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single permission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/permission"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,global,entityType,operation",
            "default" : "id,key,name,description,global,entityType,operation"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "permissionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,description,global,entityType,operation",
          "default" : "id,key,name,description,global,entityType,operation"
        }
      } ]
    },
    "/services/{serviceId}/defaultroles" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,immutable",
            "default" : "id,key,name,description,immutable"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "DefaultrolesPage of 'role' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DefaultrolesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,immutable",
            "default" : "id,key,name,description,immutable"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/role"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/role"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,description,immutable",
          "default" : "id,key,name,description,immutable"
        }
      } ]
    },
    "/services/{serviceId}/defaultroles/{roleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,immutable",
            "default" : "id,key,name,description,immutable"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/role"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,description,immutable",
            "default" : "id,key,name,description,immutable"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,description,immutable",
          "default" : "id,key,name,description,immutable"
        }
      } ]
    },
    "/services/{serviceId}/viewers" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name",
            "default" : "id,name"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ViewersPage of 'authorityHolder' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ViewersPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name",
            "default" : "id,name"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/authorityHolder"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single authorityHolder",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/authorityHolder"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,name",
          "default" : "id,name"
        }
      } ]
    },
    "/services/{serviceId}/viewers/{authorityHolderId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name",
            "default" : "id,name"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorityHolderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single authorityHolder",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/authorityHolder"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name",
            "default" : "id,name"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorityHolderId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,name",
          "default" : "id,name"
        }
      } ]
    },
    "/services/{serviceId}/untrustedredirecturis" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "redirectURI,triedFrom,triedAt",
            "default" : "redirectURI,triedFrom,triedAt"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "UntrustedredirecturisPage of 'untrustedRedirectURI' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UntrustedredirecturisPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "redirectURI,triedFrom,triedAt",
            "default" : "redirectURI,triedFrom,triedAt"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/untrustedRedirectURI"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single untrustedRedirectURI",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/untrustedRedirectURI"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "redirectURI,triedFrom,triedAt",
          "default" : "redirectURI,triedFrom,triedAt"
        }
      } ]
    },
    "/services/{serviceId}/untrustedredirecturis/{untrustedRedirectURIId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "redirectURI,triedFrom,triedAt",
            "default" : "redirectURI,triedFrom,triedAt"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "untrustedRedirectURIId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single untrustedRedirectURI",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/untrustedRedirectURI"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "redirectURI,triedFrom,triedAt",
            "default" : "redirectURI,triedFrom,triedAt"
          }
        }, {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "untrustedRedirectURIId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "redirectURI,triedFrom,triedAt",
          "default" : "redirectURI,triedFrom,triedAt"
        }
      } ]
    },
    "/services/{serviceId}/untrustedredirecturis/{untrustedRedirectURIId}/{redirectURI}/accept" : {
      "post" : {
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "untrustedRedirectURIId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "redirectURI",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "serviceId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "untrustedRedirectURIId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "redirectURI",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/services/{serviceId}/untrustedredirecturis/{untrustedRedirectURIId}/{redirectURI}/reject" : {
      "delete" : {
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "untrustedRedirectURIId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "redirectURI",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "serviceId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "untrustedRedirectURIId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "redirectURI",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/settings" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SettingsPage of 'settings' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/settings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single settings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/settings"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id",
          "default" : "id"
        }
      } ]
    },
    "/settings/{settingsId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "settingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single settings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/settings"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "settingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/settings"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single settings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/settings"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "successor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "settingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id",
          "default" : "id"
        }
      } ]
    },
    "/settings/{settingsId}/backupData" : {
      "post" : {
        "parameters" : [ {
          "name" : "targetVersion",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "settingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "inProgress",
            "default" : "inProgress"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of backupStatus",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/backupStatus"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "settingsId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/settings/{settingsId}/locales" : {
      "get" : {
        "parameters" : [ {
          "name" : "settingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "name,label,language,region,community",
            "default" : "name,label,language,region,community"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of locale",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/locale"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "settingsId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/settings/{settingsId}/translation" : {
      "get" : {
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "settingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "binary data",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "settingsId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/settings/{settingsId}/smtp/message" : {
      "post" : {
        "parameters" : [ {
          "name" : "requireEmailVerification",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "settingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/smtpMessage"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "settingsId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/settings/{settingsId}/reset" : {
      "post" : {
        "parameters" : [ {
          "name" : "settingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single settings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/settings"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "settingsId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/settings/{settingsId}/test" : {
      "post" : {
        "parameters" : [ {
          "name" : "contact",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "settingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single settings",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/settings"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "settingsId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/settings/{settingsId}/users" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "settingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "UsersPage of 'user' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "settingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/user"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
          "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
        }
      } ]
    },
    "/settings/{settingsId}/users/{userId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "settingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "settingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
          "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
        }
      } ]
    },
    "/settings/{settingsId}/autojoingroups" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "settingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "AutojoingroupsPage of 'userGroup' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AutojoingroupsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "settingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/userGroup"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single userGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/userGroup"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
          "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
        }
      } ]
    },
    "/settings/{settingsId}/autojoingroups/{userGroupId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "settingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single userGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/userGroup"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "keepUsers",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "settingsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
          "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
        }
      } ]
    },
    "/userdetails" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent",
            "default" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "UserdetailsPage of 'details' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserdetailsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent",
            "default" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/details"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/details"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent",
          "default" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent"
        }
      } ]
    },
    "/userdetails/{detailsId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent",
            "default" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent"
          }
        }, {
          "name" : "detailsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/details"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent",
            "default" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent"
          }
        }, {
          "name" : "detailsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/details"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/details"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "successor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent",
            "default" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent"
          }
        }, {
          "name" : "detailsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent",
          "default" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent"
        }
      } ]
    },
    "/userdetails/{detailsId}/revoke" : {
      "post" : {
        "parameters" : [ {
          "name" : "detailsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "detailsId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/usergroups" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "UsergroupsPage of 'userGroup' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsergroupsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/userGroup"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single userGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/userGroup"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
          "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
        }
      } ]
    },
    "/usergroups/{userGroupId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single userGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/userGroup"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/userGroup"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single userGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/userGroup"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "successor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
          "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
        }
      } ]
    },
    "/usergroups/{userGroupId}/forest" : {
      "get" : {
        "parameters" : [ {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of userGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/userGroup"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "userGroupId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/usergroups/{userGroupId}/mixed" : {
      "get" : {
        "parameters" : [ {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "binary data",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "userGroupId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/usergroups/{userGroupId}/root" : {
      "get" : {
        "parameters" : [ {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of userGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/userGroup"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "userGroupId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/usergroups/{userGroupId}/merge" : {
      "post" : {
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "description",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "autoJoin",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "requiredTwoFactorAuthentication",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "project",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentGroup",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/userGroup"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Array of userGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/userGroup"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "userGroupId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/usergroups/{userGroupId}/mixed/queryAssist" : {
      "get" : {
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "caret",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "query,caret",
            "default" : "query,caret"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of queryAssist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/queryAssist"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "userGroupId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/usergroups/{userGroupId}/projectroles" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ProjectrolesPage of 'projectRole' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectrolesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/projectRole"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single projectRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/projectRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,teamMember",
          "default" : "id,teamMember"
        }
      } ]
    },
    "/usergroups/{userGroupId}/projectroles/{projectRoleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single projectRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/projectRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,teamMember",
          "default" : "id,teamMember"
        }
      } ]
    },
    "/usergroups/{userGroupId}/transitiveprojectroles" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "TransitiveprojectrolesPage of 'projectRole' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransitiveprojectrolesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,teamMember",
          "default" : "id,teamMember"
        }
      } ]
    },
    "/usergroups/{userGroupId}/transitiveprojectroles/{projectRoleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single projectRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/projectRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,teamMember",
          "default" : "id,teamMember"
        }
      } ]
    },
    "/usergroups/{userGroupId}/sourcedprojectroles" : {
      "get" : {
        "parameters" : [ {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SourcedprojectrolesPage of 'sourcedProjectRole' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SourcedprojectrolesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      }
    },
    "/usergroups/{userGroupId}/sourcedprojectroles/{sourcedProjectRoleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourcedProjectRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single sourcedProjectRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/sourcedProjectRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      }
    },
    "/usergroups/{userGroupId}/organizationroles" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OrganizationrolesPage of 'organizationRole' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationrolesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/organizationRole"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single organizationRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/organizationRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id",
          "default" : "id"
        }
      } ]
    },
    "/usergroups/{userGroupId}/organizationroles/{organizationRoleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single organizationRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/organizationRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id",
          "default" : "id"
        }
      } ]
    },
    "/usergroups/{userGroupId}/transitiveorganizationroles" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "TransitiveorganizationrolesPage of 'organizationRole' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransitiveorganizationrolesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id",
          "default" : "id"
        }
      } ]
    },
    "/usergroups/{userGroupId}/transitiveorganizationroles/{organizationRoleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single organizationRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/organizationRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id",
          "default" : "id"
        }
      } ]
    },
    "/usergroups/{userGroupId}/sourcedorganizationroles" : {
      "get" : {
        "parameters" : [ {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SourcedorganizationrolesPage of 'sourcedOrganizationRole' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SourcedorganizationrolesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      }
    },
    "/usergroups/{userGroupId}/sourcedorganizationroles/{sourcedOrganizationRoleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourcedOrganizationRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single sourcedOrganizationRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/sourcedOrganizationRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      }
    },
    "/usergroups/{userGroupId}/subgroups" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SubgroupsPage of 'userGroup' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubgroupsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/userGroup"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single userGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/userGroup"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
          "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
        }
      } ]
    },
    "/usergroups/{userGroupId}/subgroups/{userGroup1Id}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userGroup1Id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single userGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/userGroup"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userGroup1Id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
          "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
        }
      } ]
    },
    "/usergroups/{userGroupId}/users" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "UsersPage of 'user' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/user"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
          "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
        }
      } ]
    },
    "/usergroups/{userGroupId}/users/{userId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
          "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
        }
      } ]
    },
    "/users" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "UsersPage of 'user' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/user"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
          "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
        }
      } ]
    },
    "/users/{userId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/user"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "successor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
          "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
        }
      } ]
    },
    "/users/{userId}/endUserAgreementConsent" : {
      "delete" : {
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "userId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/users/{userId}/createBypassToken" : {
      "post" : {
        "parameters" : [ {
          "name" : "userId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "redirectUrl",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "token",
            "default" : "token"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of inviteToken",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/inviteToken"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "userId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/users/{userId}/guest" : {
      "get" : {
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/user"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "userId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/users/{userId}/invite" : {
      "post" : {
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "group",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "baseUrl",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "redirectUrl",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userType",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/user"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "userId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/users/{userId}/createToken" : {
      "post" : {
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "group",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "baseUrl",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "redirectUrl",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "token",
            "default" : "token"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of inviteToken",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/inviteToken"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "userId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/users/{userId}/inviteUsers" : {
      "post" : {
        "parameters" : [ {
          "name" : "baseUrl",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "redirectUrl",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "successful,errorMessage,email",
            "default" : "successful,errorMessage,email"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/invitedUser"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Array of invitedUser",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/invitedUser"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "userId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/users/{userId}/merge" : {
      "post" : {
        "parameters" : [ {
          "name" : "login",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "banned",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "banBadge",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "twoFactorAuthentication",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/user"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Array of user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/user"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "userId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/users/{userId}/twoFactorAuthentication/confirm" : {
      "post" : {
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/confirm2FA"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "userId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/users/{userId}/webauthn/registration" : {
      "post" : {
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "userId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/users/{userId}/data/erase" : {
      "post" : {
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication",
            "default" : "login,banned,banReason,banBadge,guest,creationTime,lastAccessTime,eraseTimestamp,requiredTwoFactorAuthentication"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single user",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/user"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "userId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/users/{userId}/data" : {
      "get" : {
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "binary data",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "userId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/users/{userId}/twoFactorAuthentication" : {
      "post" : {
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "secretKey,qrCodeUri,failedAttemptsCounter",
            "default" : "secretKey,qrCodeUri,failedAttemptsCounter"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/setup2FA"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single twoFactorAuthenticationSecret",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/twoFactorAuthenticationSecret"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "userId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/users/{userId}/removeLocale" : {
      "post" : {
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "parameters" : [ {
        "name" : "userId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/users/{userId}/verifyContact" : {
      "post" : {
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/profile"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single profile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/profile"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "userId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/users/{userId}/userdetails" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent",
            "default" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "UserdetailsPage of 'details' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserdetailsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent",
            "default" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/details"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/details"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent",
          "default" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent"
        }
      } ]
    },
    "/users/{userId}/userdetails/{detailsId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent",
            "default" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "detailsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/details"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent",
            "default" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "detailsId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent",
          "default" : "id,authModuleName,lastAccessTime,lastAccessAddress,lastAccessUserAgent"
        }
      } ]
    },
    "/users/{userId}/projectroles" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ProjectrolesPage of 'projectRole' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectrolesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/projectRole"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single projectRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/projectRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,teamMember",
          "default" : "id,teamMember"
        }
      } ]
    },
    "/users/{userId}/projectroles/{projectRoleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single projectRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/projectRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,teamMember",
          "default" : "id,teamMember"
        }
      } ]
    },
    "/users/{userId}/transitiveprojectroles" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "TransitiveprojectrolesPage of 'projectRole' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransitiveprojectrolesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,teamMember",
          "default" : "id,teamMember"
        }
      } ]
    },
    "/users/{userId}/transitiveprojectroles/{projectRoleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,teamMember",
            "default" : "id,teamMember"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single projectRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/projectRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,teamMember",
          "default" : "id,teamMember"
        }
      } ]
    },
    "/users/{userId}/sourcedprojectroles" : {
      "get" : {
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SourcedprojectrolesPage of 'sourcedProjectRole' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SourcedprojectrolesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      }
    },
    "/users/{userId}/sourcedprojectroles/{sourcedProjectRoleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourcedProjectRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single sourcedProjectRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/sourcedProjectRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      }
    },
    "/users/{userId}/organizationroles" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OrganizationrolesPage of 'organizationRole' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrganizationrolesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/organizationRole"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single organizationRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/organizationRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id",
          "default" : "id"
        }
      } ]
    },
    "/users/{userId}/organizationroles/{organizationRoleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single organizationRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/organizationRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id",
          "default" : "id"
        }
      } ]
    },
    "/users/{userId}/transitiveorganizationroles" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "TransitiveorganizationrolesPage of 'organizationRole' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransitiveorganizationrolesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id",
          "default" : "id"
        }
      } ]
    },
    "/users/{userId}/transitiveorganizationroles/{organizationRoleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id",
            "default" : "id"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "organizationRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single organizationRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/organizationRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id",
          "default" : "id"
        }
      } ]
    },
    "/users/{userId}/sourcedorganizationroles" : {
      "get" : {
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SourcedorganizationrolesPage of 'sourcedOrganizationRole' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SourcedorganizationrolesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      }
    },
    "/users/{userId}/sourcedorganizationroles/{sourcedOrganizationRoleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourcedOrganizationRoleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single sourcedOrganizationRole",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/sourcedOrganizationRole"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      }
    },
    "/users/{userId}/groups" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "GroupsPage of 'userGroup' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/userGroup"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single userGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/userGroup"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
          "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
        }
      } ]
    },
    "/users/{userId}/groups/{userGroupId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single userGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/userGroup"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
          "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
        }
      } ]
    },
    "/users/{userId}/transitivegroups" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "TransitivegroupsPage of 'userGroup' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransitivegroupsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
          "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
        }
      } ]
    },
    "/users/{userId}/transitivegroups/{userGroupId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
            "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userGroupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single userGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/userGroup"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable",
          "default" : "description,iconUrl,autoJoin,autoJoinDomain,requiredTwoFactorAuthentication,parentsRequireTwoFactorAuthentication,userCount,allUsers,registeredUsers,implicit,queriedSingleton,removable,immutable"
        }
      } ]
    },
    "/users/{userId}/sshpublickeys" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "fingerPrint,data,openSshKey,comment",
            "default" : "fingerPrint,data,openSshKey,comment"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SshpublickeysPage of 'sshPublicKey' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SshpublickeysPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "fingerPrint,data,openSshKey,comment",
            "default" : "fingerPrint,data,openSshKey,comment"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/sshPublicKey"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single sshPublicKey",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/sshPublicKey"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "fingerPrint,data,openSshKey,comment",
          "default" : "fingerPrint,data,openSshKey,comment"
        }
      } ]
    },
    "/users/{userId}/sshpublickeys/{sshPublicKeyId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "fingerPrint,data,openSshKey,comment",
            "default" : "fingerPrint,data,openSshKey,comment"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sshPublicKeyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single sshPublicKey",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/sshPublicKey"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "fingerPrint,data,openSshKey,comment",
            "default" : "fingerPrint,data,openSshKey,comment"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sshPublicKeyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "fingerPrint,data,openSshKey,comment",
          "default" : "fingerPrint,data,openSshKey,comment"
        }
      } ]
    },
    "/users/{userId}/licenses" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "licenseKey,licenseName,availableLicenses,availableAgentLicenses,availableReporterLicenses",
            "default" : "licenseKey,licenseName,availableLicenses,availableAgentLicenses,availableReporterLicenses"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "LicensesPage of 'license' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LicensesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "licenseKey,licenseName,availableLicenses,availableAgentLicenses,availableReporterLicenses",
            "default" : "licenseKey,licenseName,availableLicenses,availableAgentLicenses,availableReporterLicenses"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/license"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single license",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/license"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "licenseKey,licenseName,availableLicenses,availableAgentLicenses,availableReporterLicenses",
          "default" : "licenseKey,licenseName,availableLicenses,availableAgentLicenses,availableReporterLicenses"
        }
      } ]
    },
    "/users/{userId}/licenses/{licenseId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "licenseKey,licenseName,availableLicenses,availableAgentLicenses,availableReporterLicenses",
            "default" : "licenseKey,licenseName,availableLicenses,availableAgentLicenses,availableReporterLicenses"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "licenseId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single license",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/license"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "licenseKey,licenseName,availableLicenses,availableAgentLicenses,availableReporterLicenses",
            "default" : "licenseKey,licenseName,availableLicenses,availableAgentLicenses,availableReporterLicenses"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "licenseId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "licenseKey,licenseName,availableLicenses,availableAgentLicenses,availableReporterLicenses",
          "default" : "licenseKey,licenseName,availableLicenses,availableAgentLicenses,availableReporterLicenses"
        }
      } ]
    },
    "/users/{userId}/refreshtokens" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,creationTime,lastAccessTime,expires",
            "default" : "id,creationTime,lastAccessTime,expires"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "RefreshtokensPage of 'refreshToken' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RefreshtokensPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,creationTime,lastAccessTime,expires",
          "default" : "id,creationTime,lastAccessTime,expires"
        }
      } ]
    },
    "/users/{userId}/refreshtokens/{refreshTokenId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,creationTime,lastAccessTime,expires",
            "default" : "id,creationTime,lastAccessTime,expires"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refreshTokenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single refreshToken",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/refreshToken"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,creationTime,lastAccessTime,expires",
            "default" : "id,creationTime,lastAccessTime,expires"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refreshTokenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,creationTime,lastAccessTime,expires",
          "default" : "id,creationTime,lastAccessTime,expires"
        }
      } ]
    },
    "/users/{userId}/permanenttokens" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,token,creationTime,lastAccessTime",
            "default" : "id,name,token,creationTime,lastAccessTime"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "PermanenttokensPage of 'permanentToken' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PermanenttokensPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,token,creationTime,lastAccessTime",
            "default" : "id,name,token,creationTime,lastAccessTime"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/permanentToken"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single permanentToken",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/permanentToken"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,name,token,creationTime,lastAccessTime",
          "default" : "id,name,token,creationTime,lastAccessTime"
        }
      } ]
    },
    "/users/{userId}/permanenttokens/{permanentTokenId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,token,creationTime,lastAccessTime",
            "default" : "id,name,token,creationTime,lastAccessTime"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "permanentTokenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single permanentToken",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/permanentToken"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,token,creationTime,lastAccessTime",
            "default" : "id,name,token,creationTime,lastAccessTime"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "permanentTokenId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,name,token,creationTime,lastAccessTime",
          "default" : "id,name,token,creationTime,lastAccessTime"
        }
      } ]
    },
    "/users/{userId}/applicationPasswords" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,password,creationTime,lastAccessTime,lastAccessAddress,lastAccessUserAgent",
            "default" : "id,name,password,creationTime,lastAccessTime,lastAccessAddress,lastAccessUserAgent"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ApplicationPasswordsPage of 'applicationPassword' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationPasswordsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,password,creationTime,lastAccessTime,lastAccessAddress,lastAccessUserAgent",
            "default" : "id,name,password,creationTime,lastAccessTime,lastAccessAddress,lastAccessUserAgent"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/applicationPassword"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single applicationPassword",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/applicationPassword"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,name,password,creationTime,lastAccessTime,lastAccessAddress,lastAccessUserAgent",
          "default" : "id,name,password,creationTime,lastAccessTime,lastAccessAddress,lastAccessUserAgent"
        }
      } ]
    },
    "/users/{userId}/applicationPasswords/{applicationPasswordId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,password,creationTime,lastAccessTime,lastAccessAddress,lastAccessUserAgent",
            "default" : "id,name,password,creationTime,lastAccessTime,lastAccessAddress,lastAccessUserAgent"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "applicationPasswordId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single applicationPassword",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/applicationPassword"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,name,password,creationTime,lastAccessTime,lastAccessAddress,lastAccessUserAgent",
            "default" : "id,name,password,creationTime,lastAccessTime,lastAccessAddress,lastAccessUserAgent"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "applicationPasswordId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,name,password,creationTime,lastAccessTime,lastAccessAddress,lastAccessUserAgent",
          "default" : "id,name,password,creationTime,lastAccessTime,lastAccessAddress,lastAccessUserAgent"
        }
      } ]
    },
    "/users/{userId}/approvedscopes" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,expiresOn",
            "default" : "id,expiresOn"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ApprovedscopesPage of 'approvedScope' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApprovedscopesPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,expiresOn",
          "default" : "id,expiresOn"
        }
      } ]
    },
    "/users/{userId}/approvedscopes/{approvedScopeId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,expiresOn",
            "default" : "id,expiresOn"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "approvedScopeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single approvedScope",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/approvedScope"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,expiresOn",
            "default" : "id,expiresOn"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "approvedScopeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,expiresOn",
          "default" : "id,expiresOn"
        }
      } ]
    },
    "/users/{userId}/favoriteprojects" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard",
            "default" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "FavoriteprojectsPage of 'project' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FavoriteprojectsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard",
            "default" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/project"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single project",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/project"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard",
          "default" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard"
        }
      } ]
    },
    "/users/{userId}/favoriteprojects/{projectId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard",
            "default" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single project",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/project"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard",
            "default" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard",
          "default" : "id,key,name,archived,description,creationTime,iconUrl,icon,defaultIcon,myFavorite,global,restricted,dashboard"
        }
      } ]
    },
    "/widgets" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "key,version,installedVersion,latestVersion,installedFromRepository,archiveId,manifest,disabled,repositoryUrl,repositoryIconUrl",
            "default" : "key,version,installedVersion,latestVersion,installedFromRepository,archiveId,manifest,disabled,repositoryUrl,repositoryIconUrl"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "WidgetsPage of 'widget' instances",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WidgetsPage"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "key,version,installedVersion,latestVersion,installedFromRepository,archiveId,manifest,disabled,repositoryUrl,repositoryIconUrl",
            "default" : "key,version,installedVersion,latestVersion,installedFromRepository,archiveId,manifest,disabled,repositoryUrl,repositoryIconUrl"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/widget"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single widget",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/widget"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "key,version,installedVersion,latestVersion,installedFromRepository,archiveId,manifest,disabled,repositoryUrl,repositoryIconUrl",
          "default" : "key,version,installedVersion,latestVersion,installedFromRepository,archiveId,manifest,disabled,repositoryUrl,repositoryIconUrl"
        }
      } ]
    },
    "/widgets/{widgetId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "key,version,installedVersion,latestVersion,installedFromRepository,archiveId,manifest,disabled,repositoryUrl,repositoryIconUrl",
            "default" : "key,version,installedVersion,latestVersion,installedFromRepository,archiveId,manifest,disabled,repositoryUrl,repositoryIconUrl"
          }
        }, {
          "name" : "widgetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Single widget",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/widget"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "key,version,installedVersion,latestVersion,installedFromRepository,archiveId,manifest,disabled,repositoryUrl,repositoryIconUrl",
            "default" : "key,version,installedVersion,latestVersion,installedFromRepository,archiveId,manifest,disabled,repositoryUrl,repositoryIconUrl"
          }
        }, {
          "name" : "widgetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/widget"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Single widget",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/widget"
                }
              }
            }
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "delete" : {
        "parameters" : [ {
          "name" : "successor",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "key,version,installedVersion,latestVersion,installedFromRepository,archiveId,manifest,disabled,repositoryUrl,repositoryIconUrl",
            "default" : "key,version,installedVersion,latestVersion,installedFromRepository,archiveId,manifest,disabled,repositoryUrl,repositoryIconUrl"
          }
        }, {
          "name" : "widgetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "bearer" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "fields",
        "in" : "query",
        "schema" : {
          "type" : "string",
          "example" : "key,version,installedVersion,latestVersion,installedFromRepository,archiveId,manifest,disabled,repositoryUrl,repositoryIconUrl",
          "default" : "key,version,installedVersion,latestVersion,installedFromRepository,archiveId,manifest,disabled,repositoryUrl,repositoryIconUrl"
        }
      } ]
    },
    "/widgets/{widgetId}/repository" : {
      "get" : {
        "parameters" : [ {
          "name" : "key",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "latestOnly",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "widgetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "binary data",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "widgetId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/widgets/{widgetId}/preview" : {
      "post" : {
        "parameters" : [ {
          "name" : "widgetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "example" : "key,version,installedVersion,latestVersion,installedFromRepository,archiveId,manifest,disabled,repositoryUrl,repositoryIconUrl",
            "default" : "key,version,installedVersion,latestVersion,installedFromRepository,archiveId,manifest,disabled,repositoryUrl,repositoryIconUrl"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "base64"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Array of widget",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/widget"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "widgetId",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ]
    }
  },
  "components" : {
    "schemas" : {
      "accessGrantOption" : {
        "type" : "object",
        "properties" : { }
      },
      "accessGrantOptionList" : {
        "type" : "object",
        "properties" : {
          "hasAlready" : {
            "type" : "boolean"
          },
          "options" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/accessGrantOption"
            }
          }
        }
      },
      "accessToken" : {
        "type" : "object",
        "properties" : {
          "id_token" : {
            "type" : "string"
          },
          "access_token" : {
            "type" : "string"
          },
          "token_type" : {
            "type" : "string"
          },
          "expires_in" : {
            "type" : "integer",
            "format" : "int32"
          },
          "refresh_token" : {
            "type" : "string"
          },
          "scope" : {
            "type" : "string"
          }
        }
      },
      "addGroupOption" : {
        "type" : "object",
        "properties" : {
          "group" : {
            "$ref" : "#/components/schemas/userGroup"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/accessGrantOption"
        } ]
      },
      "addNewGroupOption" : {
        "type" : "object",
        "properties" : {
          "groupName" : {
            "type" : "string"
          },
          "project" : {
            "$ref" : "#/components/schemas/project"
          },
          "role" : {
            "$ref" : "#/components/schemas/role"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/accessGrantOption"
        } ]
      },
      "aggregationChange" : {
        "type" : "object",
        "properties" : {
          "childChanges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/change"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/change"
        } ]
      },
      "alias" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "action" : {
            "type" : "string"
          }
        }
      },
      "applicationPassword" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/user"
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastAccessTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastAccessAddress" : {
            "type" : "string"
          },
          "lastAccessUserAgent" : {
            "type" : "string"
          }
        }
      },
      "approvedScope" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "client" : {
            "$ref" : "#/components/schemas/service"
          },
          "scope" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/service"
            }
          },
          "user" : {
            "$ref" : "#/components/schemas/user"
          },
          "expiresOn" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "authAttempt" : {
        "type" : "object",
        "properties" : {
          "externalUserDetails" : {
            "$ref" : "#/components/schemas/details"
          },
          "persistedUserDetails" : {
            "$ref" : "#/components/schemas/details"
          },
          "similarUser" : {
            "$ref" : "#/components/schemas/user"
          },
          "authModule" : {
            "$ref" : "#/components/schemas/authmodule"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/uuid"
        } ]
      },
      "authFoundUser" : {
        "type" : "object",
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/user"
          },
          "attempts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/authAttempt"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/uuid"
        } ]
      },
      "authModuleCustomAttributeMapping" : {
        "type" : "object",
        "properties" : {
          "mapping" : {
            "type" : "string"
          },
          "attributePrototype" : {
            "$ref" : "#/components/schemas/profileAttributePrototype"
          }
        }
      },
      "authModuleGroupMapping" : {
        "type" : "object",
        "properties" : {
          "externalGroupName" : {
            "type" : "string"
          },
          "group" : {
            "$ref" : "#/components/schemas/userGroup"
          }
        }
      },
      "authRequest" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "string"
          },
          "credentials" : {
            "$ref" : "#/components/schemas/credentials"
          }
        }
      },
      "authResults" : {
        "type" : "object",
        "properties" : {
          "foundUsers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/authFoundUser"
            }
          },
          "noUserAttempts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/authAttempt"
            }
          },
          "createHubDetails" : {
            "$ref" : "#/components/schemas/createHubDetails"
          }
        }
      },
      "authmodule" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alias"
            }
          },
          "name" : {
            "type" : "string"
          },
          "ordinal" : {
            "type" : "integer",
            "format" : "int32"
          },
          "accountsSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "disabled" : {
            "type" : "boolean"
          },
          "autoJoinGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/userGroup"
            }
          },
          "type" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "azureauthmodule" : "azureauthmodule",
            "coreauthmodule" : "coreauthmodule",
            "externalauthmodule" : "externalauthmodule",
            "externaloauth2module" : "externaloauth2module",
            "externalpasswordauthmodule" : "externalpasswordauthmodule",
            "githubauthmodule" : "githubauthmodule",
            "googleauthmodule" : "googleauthmodule",
            "jbaauthmodule" : "jbaauthmodule",
            "jbaoauthauthmodule" : "jbaoauthauthmodule",
            "jiraauthmodule" : "jiraauthmodule",
            "ldapauthmodule" : "ldapauthmodule",
            "oauth2authmodule" : "oauth2authmodule",
            "oktaAuthmodule" : "oktaAuthmodule",
            "openidauthmodule" : "openidauthmodule",
            "samlAuthModule" : "samlAuthModule",
            "userCreationAuthModule" : "userCreationAuthModule"
          }
        }
      },
      "authorityHolder" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alias"
            }
          },
          "name" : {
            "type" : "string"
          },
          "projectRoles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/projectRole"
            }
          },
          "transitiveProjectRoles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/projectRole"
            }
          },
          "sourcedProjectRoles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/sourcedProjectRole"
            }
          },
          "organizationRoles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/organizationRole"
            }
          },
          "transitiveOrganizationRoles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/organizationRole"
            }
          },
          "sourcedOrganizationRoles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/sourcedOrganizationRole"
            }
          },
          "type" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "invitedUser" : "invitedUser",
            "organizationMember" : "organizationMember",
            "projectTeam" : "projectTeam",
            "projectTeamMember" : "projectTeamMember",
            "service" : "service",
            "user" : "user",
            "userGroup" : "userGroup"
          }
        }
      },
      "avatar" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string"
          },
          "pictureUrl" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "defaultavatar" : "defaultavatar",
            "gravatar" : "gravatar",
            "urlavatar" : "urlavatar"
          }
        }
      },
      "azureauthmodule" : {
        "type" : "object",
        "properties" : {
          "tenant" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/externaloauth2module"
        } ]
      },
      "azuredetails" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "fullName" : {
            "type" : "string"
          },
          "avatar" : {
            "type" : "string"
          },
          "groupNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/details"
        } ]
      },
      "backupData" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "backupSettings" : {
        "type" : "object",
        "properties" : {
          "namePrefix" : {
            "type" : "string"
          },
          "backupFolder" : {
            "type" : "string"
          },
          "resolvedBackupFolder" : {
            "type" : "string"
          },
          "archiveType" : {
            "type" : "string"
          },
          "status" : {
            "$ref" : "#/components/schemas/backupStatus"
          },
          "databaseReadonly" : {
            "type" : "boolean"
          },
          "cronExpression" : {
            "type" : "string"
          },
          "countToKeep" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/settings"
        } ]
      },
      "backupStatus" : {
        "type" : "object",
        "properties" : {
          "inProgress" : {
            "type" : "boolean"
          },
          "savedData" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/backupData"
            }
          }
        }
      },
      "bcryptpassword" : {
        "type" : "object",
        "properties" : {
          "hashedValue" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/password"
        } ]
      },
      "blockedKey" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "blockedKeys" : {
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/blockedKey"
            }
          },
          "timeUntilNextCooldown" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "cachedPermission" : {
        "type" : "object",
        "properties" : {
          "permission" : {
            "$ref" : "#/components/schemas/permission"
          },
          "global" : {
            "type" : "boolean"
          },
          "projects" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/project"
            }
          },
          "resources" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/resource"
            }
          }
        }
      },
      "certificate" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alias"
            }
          },
          "disabled" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "data" : {
            "type" : "string"
          },
          "certificateType" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serialNumber" : {
            "type" : "string"
          },
          "issuedBy" : {
            "type" : "string"
          },
          "issuedTo" : {
            "type" : "string"
          },
          "validFrom" : {
            "type" : "integer",
            "format" : "int64"
          },
          "validTo" : {
            "type" : "integer",
            "format" : "int64"
          },
          "algorithm" : {
            "type" : "string"
          },
          "fingerprint" : {
            "$ref" : "#/components/schemas/fingerprint"
          }
        }
      },
      "certificateInfo" : {
        "type" : "object",
        "properties" : {
          "certificateType" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serialNumber" : {
            "type" : "string"
          },
          "issuedBy" : {
            "type" : "string"
          },
          "issuedTo" : {
            "type" : "string"
          },
          "validFrom" : {
            "type" : "integer",
            "format" : "int64"
          },
          "validTo" : {
            "type" : "integer",
            "format" : "int64"
          },
          "algorithm" : {
            "type" : "string"
          },
          "fingerprint" : {
            "$ref" : "#/components/schemas/fingerprint"
          }
        }
      },
      "change" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "fieldName" : {
            "type" : "string"
          },
          "fieldType" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "aggregationChange" : "aggregationChange",
            "linkChange" : "linkChange",
            "primitiveChange" : "primitiveChange"
          }
        }
      },
      "confirm2FA" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "conflict" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "local" : {
            "$ref" : "#/components/schemas/info"
          },
          "remote" : {
            "$ref" : "#/components/schemas/info"
          },
          "resolution" : {
            "$ref" : "#/components/schemas/resolution"
          },
          "matches" : {
            "$ref" : "#/components/schemas/info"
          }
        }
      },
      "contact" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "verified" : {
            "type" : "boolean"
          },
          "type" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "email" : "email"
          }
        }
      },
      "coreauthmodule" : {
        "type" : "object",
        "properties" : {
          "registrationEnabled" : {
            "type" : "boolean"
          },
          "passwordRestoreEnabled" : {
            "type" : "boolean"
          },
          "captchaEnabled" : {
            "type" : "boolean"
          },
          "passwordStrengthPolicy" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/authmodule"
        } ]
      },
      "coreuserdetails" : {
        "type" : "object",
        "properties" : {
          "password" : {
            "$ref" : "#/components/schemas/password"
          },
          "originService" : {
            "$ref" : "#/components/schemas/service"
          },
          "passwordChangeRequired" : {
            "type" : "boolean"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "emailuserdetails" : "emailuserdetails",
            "loginuserdetails" : "loginuserdetails"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/details"
        } ]
      },
      "counters" : {
        "type" : "object",
        "properties" : {
          "users" : {
            "type" : "integer",
            "format" : "int32"
          },
          "groups" : {
            "type" : "integer",
            "format" : "int32"
          },
          "roles" : {
            "type" : "integer",
            "format" : "int32"
          },
          "projects" : {
            "type" : "integer",
            "format" : "int32"
          },
          "services" : {
            "type" : "integer",
            "format" : "int32"
          },
          "authModules" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "createHubDetails" : {
        "type" : "object",
        "properties" : {
          "isAllowed" : {
            "type" : "boolean"
          },
          "errorId" : {
            "type" : "string"
          }
        }
      },
      "credentials" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        }
      },
      "dashboard" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "owner" : {
            "$ref" : "#/components/schemas/user"
          },
          "data" : {
            "type" : "string",
            "format" : "base64"
          },
          "permission" : {
            "type" : "string"
          },
          "access" : {
            "type" : "string"
          },
          "permissions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dashboardPermission"
            }
          },
          "favorite" : {
            "type" : "boolean"
          },
          "ordinal" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/uuid"
        } ]
      },
      "dashboardImport" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "owner" : {
            "type" : "string"
          },
          "json" : {
            "type" : "string"
          },
          "permissions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dashboardPermissionImport"
            }
          },
          "userDashboards" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/userDashboardImport"
            }
          }
        }
      },
      "dashboardImportEvent" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string"
          },
          "severity" : {
            "type" : "string"
          }
        }
      },
      "dashboardImportList" : {
        "type" : "object",
        "properties" : {
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dashboardImport"
            }
          }
        }
      },
      "dashboardImportMissingEntity" : {
        "type" : "object",
        "properties" : {
          "entityType" : {
            "type" : "string"
          },
          "entityId" : {
            "type" : "string"
          }
        }
      },
      "dashboardImportResult" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean"
          },
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dashboardImportEvent"
            }
          },
          "missing" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dashboardImportMissingEntity"
            }
          }
        }
      },
      "dashboardPermission" : {
        "type" : "object",
        "properties" : {
          "permission" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "projectTeamDashboardPermission" : "projectTeamDashboardPermission",
            "userDashboardPermission" : "userDashboardPermission",
            "userGroupDashboardPermission" : "userGroupDashboardPermission"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/uuid"
        } ]
      },
      "dashboardPermissionImport" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "principal" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "permission" : {
            "type" : "string"
          }
        }
      },
      "database" : {
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string"
          },
          "dataSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "textIndexSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "blobsSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "backgroundThreadsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pendingJobsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "entityIterableCacheSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "entityIterableCacheHitRate" : {
            "type" : "number",
            "format" : "double"
          },
          "transactionsCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "transactionsPerSecond" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "defaultavatar" : {
        "type" : "object",
        "properties" : { },
        "allOf" : [ {
          "$ref" : "#/components/schemas/avatar"
        } ]
      },
      "details" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alias"
            }
          },
          "email" : {
            "$ref" : "#/components/schemas/email"
          },
          "authModule" : {
            "$ref" : "#/components/schemas/authmodule"
          },
          "authModuleName" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/user"
          },
          "lastAccessTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastAccessAddress" : {
            "type" : "string"
          },
          "lastAccessUserAgent" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "azuredetails" : "azuredetails",
            "coreuserdetails" : "coreuserdetails",
            "emailuserdetails" : "emailuserdetails",
            "githubdetails" : "githubdetails",
            "googledetails" : "googledetails",
            "jbadetails" : "jbadetails",
            "jbaoauthdetails" : "jbaoauthdetails",
            "jiradetails" : "jiradetails",
            "ldapdetails" : "ldapdetails",
            "loginuserdetails" : "loginuserdetails",
            "oauth2details" : "oauth2details",
            "oktadetails" : "oktadetails",
            "openiddetails" : "openiddetails",
            "samlUserDetails" : "samlUserDetails"
          }
        }
      },
      "duplicateSearchProgress" : {
        "type" : "object",
        "properties" : {
          "phase" : {
            "type" : "string"
          },
          "progress" : {
            "type" : "integer",
            "format" : "int32"
          },
          "total" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "duplicateUser" : {
        "type" : "object",
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/user"
          },
          "reasonFields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "duplicateUserCluster" : {
        "type" : "object",
        "properties" : {
          "login" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "banned" : {
            "type" : "boolean"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/duplicateUser"
            }
          }
        }
      },
      "duplicateUserMergeRequest" : {
        "type" : "object",
        "properties" : {
          "all" : {
            "type" : "boolean"
          },
          "clusters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/duplicateUserCluster"
            }
          }
        }
      },
      "duplicateUserReliablity" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          }
        }
      },
      "duplicateUserSearchResult" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "progress" : {
            "$ref" : "#/components/schemas/duplicateSearchProgress"
          },
          "clusterCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "clusters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/duplicateUserCluster"
            }
          }
        }
      },
      "email" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/contact"
        } ]
      },
      "emailuserdetails" : {
        "type" : "object",
        "properties" : { },
        "allOf" : [ {
          "$ref" : "#/components/schemas/coreuserdetails"
        } ]
      },
      "enabledFeatures" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "endUserAgreement" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "text" : {
            "type" : "string"
          },
          "majorVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minorVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "updateTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "requiredForREST" : {
            "type" : "boolean"
          }
        }
      },
      "endUserAgreementConsent" : {
        "type" : "object",
        "properties" : {
          "accepted" : {
            "type" : "boolean"
          },
          "majorVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minorVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "time" : {
            "type" : "integer",
            "format" : "int64"
          },
          "revocationTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "address" : {
            "type" : "string"
          }
        }
      },
      "error" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "string"
          },
          "error_code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "error_description" : {
            "type" : "string"
          },
          "error_developer_message" : {
            "type" : "string"
          },
          "error_uri" : {
            "type" : "string"
          },
          "error_field" : {
            "type" : "string"
          },
          "error_params" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/nameValue"
            }
          }
        }
      },
      "event" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alias"
            }
          },
          "targetId" : {
            "type" : "string"
          },
          "targetType" : {
            "type" : "string"
          },
          "targetPresentation" : {
            "type" : "string"
          },
          "author" : {
            "type" : "string"
          },
          "authorPresentation" : {
            "type" : "string"
          },
          "authorType" : {
            "type" : "string"
          },
          "changes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/change"
            }
          },
          "type" : {
            "type" : "string"
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "eraseTimestamp" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "externalauthmodule" : {
        "type" : "object",
        "properties" : {
          "serverUrl" : {
            "type" : "string"
          },
          "connectionTimeout" : {
            "type" : "integer",
            "format" : "int32"
          },
          "readTimeout" : {
            "type" : "integer",
            "format" : "int32"
          },
          "groupMappings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/authModuleGroupMapping"
            }
          },
          "attributeMappings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/authModuleCustomAttributeMapping"
            }
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "azureauthmodule" : "azureauthmodule",
            "externaloauth2module" : "externaloauth2module",
            "externalpasswordauthmodule" : "externalpasswordauthmodule",
            "githubauthmodule" : "githubauthmodule",
            "googleauthmodule" : "googleauthmodule",
            "jbaauthmodule" : "jbaauthmodule",
            "jbaoauthauthmodule" : "jbaoauthauthmodule",
            "jiraauthmodule" : "jiraauthmodule",
            "ldapauthmodule" : "ldapauthmodule",
            "oauth2authmodule" : "oauth2authmodule",
            "oktaAuthmodule" : "oktaAuthmodule",
            "openidauthmodule" : "openidauthmodule",
            "samlAuthModule" : "samlAuthModule"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/userCreationAuthModule"
        } ]
      },
      "externaloauth2module" : {
        "type" : "object",
        "properties" : {
          "clientId" : {
            "type" : "string"
          },
          "clientSecret" : {
            "type" : "string"
          },
          "redirectUri" : {
            "type" : "string"
          },
          "iconUrl" : {
            "type" : "string"
          },
          "extensionGrantType" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "azureauthmodule" : "azureauthmodule",
            "githubauthmodule" : "githubauthmodule",
            "googleauthmodule" : "googleauthmodule",
            "jbaoauthauthmodule" : "jbaoauthauthmodule",
            "oauth2authmodule" : "oauth2authmodule",
            "oktaAuthmodule" : "oktaAuthmodule"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/externalauthmodule"
        } ]
      },
      "externalpasswordauthmodule" : {
        "type" : "object",
        "properties" : {
          "allowedToSavePassword" : {
            "type" : "boolean"
          },
          "changePasswordUri" : {
            "type" : "string"
          },
          "keyStore" : {
            "$ref" : "#/components/schemas/keyStore"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "jbaauthmodule" : "jbaauthmodule",
            "jiraauthmodule" : "jiraauthmodule",
            "ldapauthmodule" : "ldapauthmodule"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/externalauthmodule"
        } ]
      },
      "fingerprint" : {
        "type" : "object",
        "properties" : {
          "md5" : {
            "type" : "string"
          },
          "sha1" : {
            "type" : "string"
          },
          "sha256" : {
            "type" : "string"
          },
          "sha384" : {
            "type" : "string"
          },
          "sha512" : {
            "type" : "string"
          }
        }
      },
      "githubauthmodule" : {
        "type" : "object",
        "properties" : {
          "scope" : {
            "type" : "string"
          },
          "allowedOrganizations" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/externaloauth2module"
        } ]
      },
      "githubdetails" : {
        "type" : "object",
        "properties" : {
          "login" : {
            "type" : "string"
          },
          "fullName" : {
            "type" : "string"
          },
          "avatar" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/details"
        } ]
      },
      "googleauthmodule" : {
        "type" : "object",
        "properties" : {
          "newUserRestrictDomain" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/externaloauth2module"
        } ]
      },
      "googledetails" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "fullName" : {
            "type" : "string"
          },
          "avatar" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/details"
        } ]
      },
      "grantRoleOption" : {
        "type" : "object",
        "properties" : {
          "project" : {
            "$ref" : "#/components/schemas/project"
          },
          "role" : {
            "$ref" : "#/components/schemas/role"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/accessGrantOption"
        } ]
      },
      "gravatar" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/avatar"
        } ]
      },
      "groupProjectRoleSource" : {
        "type" : "object",
        "properties" : { },
        "allOf" : [ {
          "$ref" : "#/components/schemas/groupRoleSource"
        } ]
      },
      "groupRoleSource" : {
        "type" : "object",
        "properties" : {
          "group" : {
            "$ref" : "#/components/schemas/userGroup"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "groupProjectRoleSource" : "groupProjectRoleSource"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/roleSource"
        } ]
      },
      "headerItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alias"
            }
          },
          "name" : {
            "type" : "string"
          },
          "homeUrl" : {
            "type" : "string"
          },
          "iconUrl" : {
            "type" : "string"
          },
          "applicationName" : {
            "type" : "string"
          },
          "vendor" : {
            "type" : "string"
          }
        }
      },
      "hubFeature" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "restartRequired" : {
            "type" : "boolean"
          },
          "enabled" : {
            "type" : "boolean"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "scopedFeature" : "scopedFeature",
            "systemFeature" : "systemFeature"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/uuid"
        } ]
      },
      "identityProviderMetadata" : {
        "type" : "object",
        "properties" : {
          "defaultNameIdType" : {
            "type" : "string"
          },
          "service" : {
            "$ref" : "#/components/schemas/service"
          },
          "keyStore" : {
            "$ref" : "#/components/schemas/keyStore"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/providerMetadata"
        } ]
      },
      "import" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "adminConsoleUrl" : {
            "type" : "string"
          },
          "remoteUrl" : {
            "type" : "string"
          },
          "localUrl" : {
            "type" : "string"
          },
          "phase" : {
            "$ref" : "#/components/schemas/importPhase"
          },
          "conflicts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/conflict"
            }
          }
        }
      },
      "importPhase" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "progress" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "importSettings" : {
        "type" : "object",
        "properties" : {
          "importFolder" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/settings"
        } ]
      },
      "info" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "login" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "banned" : {
            "type" : "boolean"
          },
          "banBadge" : {
            "type" : "string"
          },
          "banReason" : {
            "type" : "string"
          }
        }
      },
      "internalSettings" : {
        "type" : "object",
        "properties" : {
          "tokenInterval" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sessionInterval" : {
            "type" : "integer",
            "format" : "int32"
          },
          "rememberMeInterval" : {
            "type" : "integer",
            "format" : "int32"
          },
          "hashAnonymization" : {
            "type" : "boolean"
          },
          "captchaPublicKey" : {
            "type" : "string"
          },
          "captchaPrivateKey" : {
            "type" : "string"
          },
          "debugCategories" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/settings"
        } ]
      },
      "inviteToken" : {
        "type" : "object",
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/user"
          },
          "token" : {
            "type" : "string"
          }
        }
      },
      "invitedUser" : {
        "type" : "object",
        "properties" : {
          "successful" : {
            "type" : "boolean"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/user"
        } ]
      },
      "jbaauthmodule" : {
        "type" : "object",
        "properties" : {
          "registrationEnabled" : {
            "type" : "boolean"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/externalpasswordauthmodule"
        } ]
      },
      "jbadetails" : {
        "type" : "object",
        "properties" : {
          "login" : {
            "type" : "string"
          },
          "fullName" : {
            "type" : "string"
          },
          "changePasswordUrl" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/details"
        } ]
      },
      "jbaoauthauthmodule" : {
        "type" : "object",
        "properties" : {
          "newUserRestrictDomain" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/externaloauth2module"
        } ]
      },
      "jbaoauthdetails" : {
        "type" : "object",
        "properties" : {
          "login" : {
            "type" : "string"
          },
          "fullName" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/details"
        } ]
      },
      "jiraauthmodule" : {
        "type" : "object",
        "properties" : { },
        "allOf" : [ {
          "$ref" : "#/components/schemas/externalpasswordauthmodule"
        } ]
      },
      "jiradetails" : {
        "type" : "object",
        "properties" : {
          "login" : {
            "type" : "string"
          },
          "fullName" : {
            "type" : "string"
          },
          "changePasswordUrl" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/details"
        } ]
      },
      "keyStore" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alias"
            }
          },
          "name" : {
            "type" : "string"
          },
          "data" : {
            "$ref" : "#/components/schemas/keyStoreData"
          },
          "certificate" : {
            "$ref" : "#/components/schemas/certificateInfo"
          },
          "certificateData" : {
            "type" : "string"
          }
        }
      },
      "keyStoreData" : {
        "type" : "object",
        "properties" : {
          "bytes" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        }
      },
      "ldapauthmodule" : {
        "type" : "object",
        "properties" : {
          "filter" : {
            "type" : "string"
          },
          "formatDN" : {
            "type" : "string"
          },
          "emailAttributeName" : {
            "type" : "string"
          },
          "fullNameAttributeName" : {
            "type" : "string"
          },
          "userIdAttributeName" : {
            "type" : "string"
          },
          "VCSNameAttributeName" : {
            "type" : "string"
          },
          "groupsAttributeName" : {
            "type" : "string"
          },
          "accountExpiresAttributeName" : {
            "type" : "string"
          },
          "userAccountControlAttributeName" : {
            "type" : "string"
          },
          "lockoutThresholdAttributeName" : {
            "type" : "string"
          },
          "lockoutTimeAttributeName" : {
            "type" : "string"
          },
          "lockoutDurationAttributeName" : {
            "type" : "string"
          },
          "bindUserLogin" : {
            "type" : "string"
          },
          "bindUserPassword" : {
            "type" : "string"
          },
          "useBindUser" : {
            "type" : "boolean"
          },
          "referralIgnored" : {
            "type" : "boolean"
          },
          "userStatusIgnored" : {
            "type" : "boolean"
          },
          "syncInterval" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/externalpasswordauthmodule"
        } ]
      },
      "ldapdetails" : {
        "type" : "object",
        "properties" : {
          "userid" : {
            "type" : "string"
          },
          "fullName" : {
            "type" : "string"
          },
          "changePasswordUrl" : {
            "type" : "string"
          },
          "VCSName" : {
            "type" : "string"
          },
          "ldapGroupNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "userStatus" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/details"
        } ]
      },
      "license" : {
        "type" : "object",
        "properties" : {
          "licenseKey" : {
            "type" : "string"
          },
          "licenseName" : {
            "type" : "string"
          },
          "service" : {
            "$ref" : "#/components/schemas/service"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/user"
            }
          },
          "autoJoinGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/userGroup"
            }
          },
          "licenseInfo" : {
            "$ref" : "#/components/schemas/licenseInfo"
          },
          "availableLicenses" : {
            "type" : "integer",
            "format" : "int32"
          },
          "availableAgentLicenses" : {
            "type" : "integer",
            "format" : "int32"
          },
          "availableReporterLicenses" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/settings"
        } ]
      },
      "licenseInfo" : {
        "type" : "object",
        "properties" : {
          "product" : {
            "type" : "integer",
            "format" : "int32"
          },
          "licenseType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "majorVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minorVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "buildNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "userCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "agentCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "reporterCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "expirationDate" : {
            "type" : "integer",
            "format" : "int64"
          },
          "freeUpdateEnd" : {
            "type" : "integer",
            "format" : "int64"
          },
          "hosted" : {
            "type" : "boolean"
          },
          "changeYouTrackLogoForbidden" : {
            "type" : "boolean"
          },
          "guestBanForbidden" : {
            "type" : "boolean"
          },
          "invalidityReason" : {
            "type" : "string"
          }
        }
      },
      "linkChange" : {
        "type" : "object",
        "properties" : {
          "removed" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/linkData"
            }
          },
          "added" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/linkData"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/change"
        } ]
      },
      "linkData" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "presentation" : {
            "type" : "string"
          }
        }
      },
      "locale" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "language" : {
            "type" : "string"
          },
          "region" : {
            "type" : "string"
          },
          "community" : {
            "type" : "boolean"
          }
        }
      },
      "loginuserdetails" : {
        "type" : "object",
        "properties" : {
          "login" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/coreuserdetails"
        } ]
      },
      "md5password" : {
        "type" : "object",
        "properties" : {
          "hashedValue" : {
            "type" : "string"
          },
          "salt" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/password"
        } ]
      },
      "memory" : {
        "type" : "object",
        "properties" : {
          "available" : {
            "type" : "integer",
            "format" : "int64"
          },
          "allocated" : {
            "type" : "integer",
            "format" : "int64"
          },
          "used" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "mergeTokens" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "string"
          },
          "foundUsers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "noUserAttempts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "createHubDetails" : {
            "type" : "boolean"
          }
        }
      },
      "metrics" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alias"
            }
          },
          "availableProcessors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "memory" : {
            "$ref" : "#/components/schemas/memory"
          },
          "database" : {
            "$ref" : "#/components/schemas/database"
          },
          "serverStartTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "logsFolder" : {
            "type" : "string"
          }
        }
      },
      "migrations" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alias"
            }
          },
          "applied" : {
            "type" : "boolean"
          }
        }
      },
      "nameValue" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "oauth2authmodule" : {
        "type" : "object",
        "properties" : {
          "scope" : {
            "type" : "string"
          },
          "tokenUrl" : {
            "type" : "string"
          },
          "formClientAuth" : {
            "type" : "boolean"
          },
          "userInfoUrl" : {
            "type" : "string"
          },
          "userIdPath" : {
            "type" : "string"
          },
          "userEmailUrl" : {
            "type" : "string"
          },
          "userAvatarUrl" : {
            "type" : "string"
          },
          "userEmailPath" : {
            "type" : "string"
          },
          "userEmailVerifiedPath" : {
            "type" : "string"
          },
          "userNamePath" : {
            "type" : "string"
          },
          "fullNamePath" : {
            "type" : "string"
          },
          "userPictureIdPath" : {
            "type" : "string"
          },
          "userPictureUrlPattern" : {
            "type" : "string"
          },
          "emailVerifiedByDefault" : {
            "type" : "boolean"
          },
          "userGroupsPath" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/externaloauth2module"
        } ]
      },
      "oauth2details" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "userName" : {
            "type" : "string"
          },
          "fullName" : {
            "type" : "string"
          },
          "avatar" : {
            "type" : "string"
          },
          "groupNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/details"
        } ]
      },
      "oktaAuthmodule" : {
        "type" : "object",
        "properties" : {
          "authUrl" : {
            "type" : "string"
          },
          "oktaDomain" : {
            "type" : "string"
          },
          "apiToken" : {
            "type" : "string"
          },
          "syncInterval" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/externaloauth2module"
        } ]
      },
      "oktadetails" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "userName" : {
            "type" : "string"
          },
          "fullName" : {
            "type" : "string"
          },
          "groupNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/details"
        } ]
      },
      "openidauthmodule" : {
        "type" : "object",
        "properties" : {
          "emailSchema" : {
            "type" : "string"
          },
          "firstNameSchema" : {
            "type" : "string"
          },
          "lastNameSchema" : {
            "type" : "string"
          },
          "fullNameSchema" : {
            "type" : "string"
          },
          "avatarSchema" : {
            "type" : "string"
          },
          "urlPattern" : {
            "type" : "string"
          },
          "iconUrl" : {
            "type" : "string"
          },
          "emailVerified" : {
            "type" : "boolean"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/externalauthmodule"
        } ]
      },
      "openiddetails" : {
        "type" : "object",
        "properties" : {
          "identifier" : {
            "type" : "string"
          },
          "fullName" : {
            "type" : "string"
          },
          "avatar" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/details"
        } ]
      },
      "organization" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alias"
            }
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "emailDomain" : {
            "type" : "string"
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "projects" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/project"
            }
          },
          "ownUsers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/user"
            }
          },
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/user"
            }
          },
          "allUsers" : {
            "type" : "boolean"
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/userGroup"
            }
          },
          "teams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/projectTeam"
            }
          },
          "projectsCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "iconUrl" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "string"
          },
          "defaultIcon" : {
            "type" : "boolean"
          },
          "organizationRoles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/organizationRole"
            }
          }
        }
      },
      "organizationMember" : {
        "type" : "object",
        "properties" : {
          "organizationOwnUser" : {
            "type" : "boolean"
          },
          "organizationGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/userGroup"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/user"
        } ]
      },
      "organizationRole" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alias"
            }
          },
          "role" : {
            "$ref" : "#/components/schemas/role"
          },
          "organization" : {
            "$ref" : "#/components/schemas/organization"
          },
          "owner" : {
            "$ref" : "#/components/schemas/authorityHolder"
          },
          "type" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "sourcedOrganizationRole" : "sourcedOrganizationRole"
          }
        }
      },
      "ownProjectRoleSource" : {
        "type" : "object",
        "properties" : { },
        "allOf" : [ {
          "$ref" : "#/components/schemas/ownRoleSource"
        } ]
      },
      "ownRoleSource" : {
        "type" : "object",
        "properties" : { },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "ownRoleSource" : "ownProjectRoleSource"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/roleSource"
        } ]
      },
      "password" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "oldValue" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "bcryptpassword" : "bcryptpassword",
            "md5password" : "md5password",
            "plainpassword" : "plainpassword",
            "shapassword" : "shapassword"
          }
        }
      },
      "passwordStrength" : {
        "type" : "object",
        "properties" : {
          "referenceScore" : {
            "type" : "integer",
            "format" : "int32"
          },
          "score" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxScore" : {
            "type" : "integer",
            "format" : "int32"
          },
          "referenceEntropy" : {
            "type" : "integer",
            "format" : "int32"
          },
          "entropy" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxEntropy" : {
            "type" : "integer",
            "format" : "int32"
          },
          "feedbackMessage" : {
            "type" : "string"
          }
        }
      },
      "permanentToken" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "token" : {
            "type" : "string"
          },
          "scope" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/service"
            }
          },
          "user" : {
            "$ref" : "#/components/schemas/user"
          },
          "author" : {
            "$ref" : "#/components/schemas/authorityHolder"
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastAccessTime" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "permission" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alias"
            }
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "service" : {
            "$ref" : "#/components/schemas/service"
          },
          "description" : {
            "type" : "string"
          },
          "global" : {
            "type" : "boolean"
          },
          "entityType" : {
            "type" : "string"
          },
          "operation" : {
            "type" : "string"
          },
          "impliedPermissions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/permission"
            }
          },
          "dependentPermissions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/permission"
            }
          }
        }
      },
      "plainpassword" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/password"
        } ]
      },
      "primitiveChange" : {
        "type" : "object",
        "properties" : {
          "oldValue" : {
            "type" : "string"
          },
          "newValue" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/change"
        } ]
      },
      "profile" : {
        "type" : "object",
        "properties" : {
          "avatar" : {
            "$ref" : "#/components/schemas/avatar"
          },
          "email" : {
            "$ref" : "#/components/schemas/email"
          },
          "unverifiedEmail" : {
            "$ref" : "#/components/schemas/email"
          },
          "locale" : {
            "$ref" : "#/components/schemas/locale"
          },
          "attributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/profileAttribute"
            }
          }
        }
      },
      "profileAttribute" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alias"
            }
          },
          "value" : {
            "type" : "string"
          },
          "prototype" : {
            "$ref" : "#/components/schemas/profileAttributePrototype"
          }
        }
      },
      "profileAttributePrototype" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alias"
            }
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "showOnUserList" : {
            "type" : "boolean"
          }
        }
      },
      "project" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alias"
            }
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "archived" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "iconUrl" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "string"
          },
          "defaultIcon" : {
            "type" : "boolean"
          },
          "resources" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/resource"
            }
          },
          "projectRoles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/projectRole"
            }
          },
          "transitiveProjectRoles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/projectRole"
            }
          },
          "myFavorite" : {
            "type" : "boolean"
          },
          "team" : {
            "$ref" : "#/components/schemas/projectTeam"
          },
          "owner" : {
            "$ref" : "#/components/schemas/user"
          },
          "global" : {
            "type" : "boolean"
          },
          "restricted" : {
            "type" : "boolean"
          },
          "dashboard" : {
            "type" : "string",
            "format" : "base64"
          },
          "organization" : {
            "$ref" : "#/components/schemas/organization"
          },
          "projectType" : {
            "$ref" : "#/components/schemas/projectType"
          },
          "helpdeskSettings" : {
            "$ref" : "#/components/schemas/projectHelpdeskSettings"
          }
        }
      },
      "projectHelpdeskSettings" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alias"
            }
          },
          "parent" : {
            "$ref" : "#/components/schemas/project"
          },
          "reporters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/user"
            }
          }
        }
      },
      "projectRole" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alias"
            }
          },
          "role" : {
            "$ref" : "#/components/schemas/role"
          },
          "project" : {
            "$ref" : "#/components/schemas/project"
          },
          "owner" : {
            "$ref" : "#/components/schemas/authorityHolder"
          },
          "teamMember" : {
            "type" : "boolean"
          },
          "type" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "sourcedProjectRole" : "sourcedProjectRole"
          }
        }
      },
      "projectTeam" : {
        "type" : "object",
        "properties" : {
          "groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/userGroup"
            }
          },
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/user"
            }
          },
          "ownUsers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/user"
            }
          },
          "project" : {
            "$ref" : "#/components/schemas/project"
          },
          "userCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "organizations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/organization"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/authorityHolder"
        } ]
      },
      "projectTeamDashboardPermission" : {
        "type" : "object",
        "properties" : {
          "projectTeam" : {
            "$ref" : "#/components/schemas/projectTeam"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/dashboardPermission"
        } ]
      },
      "projectTeamMember" : {
        "type" : "object",
        "properties" : {
          "teamOwnUser" : {
            "type" : "boolean"
          },
          "teamGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/userGroup"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/user"
        } ]
      },
      "projectType" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "providerMetadata" : {
        "type" : "object",
        "properties" : {
          "entityId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "identityProviderMetadata" : "identityProviderMetadata",
            "serviceProviderMetadata" : "serviceProviderMetadata"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/uuid"
        } ]
      },
      "publicSettings" : {
        "type" : "object",
        "properties" : {
          "locale" : {
            "$ref" : "#/components/schemas/locale"
          },
          "hubMottoHidden" : {
            "type" : "boolean"
          },
          "companyLogo" : {
            "type" : "string"
          },
          "loginMessage" : {
            "type" : "string"
          },
          "loginFieldPlaceholder" : {
            "type" : "string"
          },
          "systemMessage" : {
            "type" : "string"
          },
          "endUserAgreement" : {
            "$ref" : "#/components/schemas/endUserAgreement"
          },
          "installationType" : {
            "type" : "string"
          },
          "emailVerificationRequired" : {
            "type" : "boolean"
          },
          "hostServiceName" : {
            "type" : "string"
          },
          "hostServiceApplicationName" : {
            "type" : "string"
          },
          "helpdeskEnabled" : {
            "type" : "boolean"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/settings"
        } ]
      },
      "queryAssist" : {
        "type" : "object",
        "properties" : {
          "query" : {
            "type" : "string"
          },
          "caret" : {
            "type" : "integer",
            "format" : "int32"
          },
          "styleRanges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/queryStyleRange"
            }
          },
          "suggestions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/querySuggestItem"
            }
          }
        }
      },
      "queryStyleRange" : {
        "type" : "object",
        "properties" : {
          "start" : {
            "type" : "integer",
            "format" : "int32"
          },
          "length" : {
            "type" : "integer",
            "format" : "int32"
          },
          "style" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          }
        }
      },
      "querySuggestItem" : {
        "type" : "object",
        "properties" : {
          "prefix" : {
            "type" : "string"
          },
          "option" : {
            "type" : "string"
          },
          "suffix" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "matchingStart" : {
            "type" : "integer",
            "format" : "int32"
          },
          "matchingEnd" : {
            "type" : "integer",
            "format" : "int32"
          },
          "caret" : {
            "type" : "integer",
            "format" : "int32"
          },
          "completionStart" : {
            "type" : "integer",
            "format" : "int32"
          },
          "completionEnd" : {
            "type" : "integer",
            "format" : "int32"
          },
          "group" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "string"
          }
        }
      },
      "refreshToken" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "client" : {
            "$ref" : "#/components/schemas/service"
          },
          "scope" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/service"
            }
          },
          "user" : {
            "$ref" : "#/components/schemas/user"
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastAccessTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "expires" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "resolution" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "propertyOverrides" : {
            "$ref" : "#/components/schemas/info"
          }
        }
      },
      "resource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alias"
            }
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "homeUrl" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "service" : {
            "$ref" : "#/components/schemas/service"
          },
          "project" : {
            "$ref" : "#/components/schemas/project"
          }
        }
      },
      "role" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alias"
            }
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "permissions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/permission"
            }
          },
          "immutable" : {
            "type" : "boolean"
          }
        }
      },
      "roleSource" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "groupProjectRoleSource" : "groupProjectRoleSource",
            "groupRoleSource" : "groupRoleSource",
            "ownRoleSource" : "ownRoleSource",
            "teamProjectRoleSource" : "teamProjectRoleSource",
            "teamRoleSource" : "teamRoleSource"
          }
        }
      },
      "samlAuthModule" : {
        "type" : "object",
        "properties" : {
          "spEntityId" : {
            "type" : "string"
          },
          "ascUrl" : {
            "type" : "string"
          },
          "keyStore" : {
            "$ref" : "#/components/schemas/keyStore"
          },
          "spMetadataUrl" : {
            "type" : "string"
          },
          "idpEntityId" : {
            "type" : "string"
          },
          "certificateFingerprint" : {
            "type" : "string"
          },
          "certificateFingerprintAlgorithm" : {
            "type" : "string"
          },
          "contactUser" : {
            "$ref" : "#/components/schemas/user"
          },
          "loginAttributeName" : {
            "type" : "string"
          },
          "firstNameAttributeName" : {
            "type" : "string"
          },
          "lastNameAttributeName" : {
            "type" : "string"
          },
          "fullNameAttributeName" : {
            "type" : "string"
          },
          "emailAttributeName" : {
            "type" : "string"
          },
          "emailVerified" : {
            "type" : "boolean"
          },
          "groupsAttributeName" : {
            "type" : "string"
          },
          "iconUrl" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/externalauthmodule"
        } ]
      },
      "samlUserDetails" : {
        "type" : "object",
        "properties" : {
          "nameId" : {
            "type" : "string"
          },
          "login" : {
            "type" : "string"
          },
          "fullName" : {
            "type" : "string"
          },
          "groupNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/details"
        } ]
      },
      "scopedFeature" : {
        "type" : "object",
        "properties" : {
          "scopes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/authorityHolder"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/hubFeature"
        } ]
      },
      "service" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "homeUrl" : {
            "type" : "string"
          },
          "baseUrls" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "userUriPattern" : {
            "type" : "string"
          },
          "groupUriPattern" : {
            "type" : "string"
          },
          "redirectUris" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "untrustedRedirectUris" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/untrustedRedirectURI"
            }
          },
          "applicationName" : {
            "type" : "string"
          },
          "vendor" : {
            "type" : "string"
          },
          "releaseDate" : {
            "type" : "integer",
            "format" : "int64"
          },
          "version" : {
            "type" : "string"
          },
          "iconUrl" : {
            "type" : "string"
          },
          "resources" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/resource"
            }
          },
          "permissions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/permission"
            }
          },
          "defaultRoles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/role"
            }
          },
          "viewers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/authorityHolder"
            }
          },
          "licenseSettings" : {
            "$ref" : "#/components/schemas/license"
          },
          "trusted" : {
            "type" : "boolean"
          },
          "secret" : {
            "type" : "string"
          },
          "apiVersion" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/authorityHolder"
        } ]
      },
      "serviceProviderMetadata" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "assertionConsumerUrl" : {
            "type" : "string"
          },
          "logoutResponseSupported" : {
            "type" : "boolean"
          },
          "loginAttributeName" : {
            "type" : "string"
          },
          "fullNameAttributeName" : {
            "type" : "string"
          },
          "emailAttributeName" : {
            "type" : "string"
          },
          "groupsAttributeName" : {
            "type" : "string"
          },
          "externalIdAttributeName" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/providerMetadata"
        } ]
      },
      "settings" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alias"
            }
          },
          "type" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "backupSettings" : "backupSettings",
            "importSettings" : "importSettings",
            "internal" : "internalSettings",
            "license" : "license",
            "public" : "publicSettings",
            "smtp" : "smtpSettings",
            "throttlingSettings" : "throttlingSettings"
          }
        }
      },
      "setup2FA" : {
        "type" : "object",
        "properties" : {
          "confirm" : {
            "type" : "boolean"
          }
        }
      },
      "shapassword" : {
        "type" : "object",
        "properties" : {
          "hashedValue" : {
            "type" : "string"
          },
          "salt" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/password"
        } ]
      },
      "smtpMessage" : {
        "type" : "object",
        "properties" : {
          "to" : {
            "$ref" : "#/components/schemas/user"
          },
          "subject" : {
            "type" : "string"
          },
          "htmlText" : {
            "type" : "string"
          },
          "unsubscribeURL" : {
            "type" : "string"
          }
        }
      },
      "smtpSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "host" : {
            "type" : "string"
          },
          "port" : {
            "type" : "integer",
            "format" : "int32"
          },
          "protocol" : {
            "type" : "string"
          },
          "from" : {
            "type" : "string"
          },
          "envelopeFrom" : {
            "type" : "string"
          },
          "login" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "passwordDefined" : {
            "type" : "boolean"
          },
          "keyStore" : {
            "$ref" : "#/components/schemas/keyStore"
          },
          "smtpAnonymous" : {
            "type" : "boolean"
          },
          "useDefault" : {
            "type" : "boolean"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/settings"
        } ]
      },
      "sourcedOrganizationRole" : {
        "type" : "object",
        "properties" : {
          "sources" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/roleSource"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/organizationRole"
        } ]
      },
      "sourcedProjectRole" : {
        "type" : "object",
        "properties" : {
          "sources" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/roleSource"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/projectRole"
        } ]
      },
      "sshPublicKey" : {
        "type" : "object",
        "properties" : {
          "fingerPrint" : {
            "type" : "string"
          },
          "data" : {
            "type" : "string"
          },
          "openSshKey" : {
            "type" : "string"
          },
          "comment" : {
            "type" : "string"
          }
        }
      },
      "systemFeature" : {
        "type" : "object",
        "properties" : { },
        "allOf" : [ {
          "$ref" : "#/components/schemas/hubFeature"
        } ]
      },
      "team" : {
        "type" : "object",
        "properties" : {
          "role" : {
            "$ref" : "#/components/schemas/role"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/user"
            }
          },
          "usersTotal" : {
            "type" : "integer",
            "format" : "int32"
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/userGroup"
            }
          },
          "groupsTotal" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "teamProjectRoleSource" : {
        "type" : "object",
        "properties" : { },
        "allOf" : [ {
          "$ref" : "#/components/schemas/teamRoleSource"
        } ]
      },
      "teamRoleSource" : {
        "type" : "object",
        "properties" : {
          "team" : {
            "$ref" : "#/components/schemas/projectTeam"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "teamProjectRoleSource" : "teamProjectRoleSource"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/roleSource"
        } ]
      },
      "throttlingSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "whiteList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "maxTrackingKeys" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxFailuresPerKey" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cooldownValue" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cooldownPeriodSec" : {
            "type" : "integer",
            "format" : "int64"
          },
          "blockedKeys" : {
            "$ref" : "#/components/schemas/blockedKeys"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/settings"
        } ]
      },
      "tokenInfo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "client" : {
            "type" : "string"
          },
          "user" : {
            "type" : "string"
          },
          "scope" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "twoFactorAuthentication" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/twoFactorAuthenticationSecret"
        } ]
      },
      "twoFactorAuthenticationSecret" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "secretKey" : {
            "type" : "string"
          },
          "qrCodeUri" : {
            "type" : "string"
          },
          "scratchCodes" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "failedAttemptsCounter" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "twoFactorAuthentication" : "twoFactorAuthentication"
          }
        }
      },
      "untrustedRedirectURI" : {
        "type" : "object",
        "properties" : {
          "redirectURI" : {
            "type" : "string"
          },
          "triedFrom" : {
            "type" : "string"
          },
          "triedAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "urlavatar" : {
        "type" : "object",
        "properties" : {
          "avatarUrl" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/avatar"
        } ]
      },
      "user" : {
        "type" : "object",
        "properties" : {
          "login" : {
            "type" : "string"
          },
          "banned" : {
            "type" : "boolean"
          },
          "banReason" : {
            "type" : "string"
          },
          "banBadge" : {
            "type" : "string"
          },
          "guest" : {
            "type" : "boolean"
          },
          "avatar" : {
            "$ref" : "#/components/schemas/avatar"
          },
          "profile" : {
            "$ref" : "#/components/schemas/profile"
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/userGroup"
            }
          },
          "organizations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/organization"
            }
          },
          "transitiveOrganizations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/organization"
            }
          },
          "transitiveGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/userGroup"
            }
          },
          "teams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/projectTeam"
            }
          },
          "transitiveTeams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/projectTeam"
            }
          },
          "details" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/details"
            }
          },
          "VCSUserNames" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/vcsUserName"
            }
          },
          "sshPublicKeys" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/sshPublicKey"
            }
          },
          "licenses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/license"
            }
          },
          "helpdeskProjectSettings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/projectHelpdeskSettings"
            }
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "lastAccessTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "refreshTokens" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/refreshToken"
            }
          },
          "permanentTokens" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/permanentToken"
            }
          },
          "approvedScopes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/approvedScope"
            }
          },
          "applicationPasswords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/applicationPassword"
            }
          },
          "favoriteProjects" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/project"
            }
          },
          "endUserAgreementConsent" : {
            "$ref" : "#/components/schemas/endUserAgreementConsent"
          },
          "eraseTimestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "twoFactorAuthentication" : {
            "$ref" : "#/components/schemas/twoFactorAuthentication"
          },
          "requiredTwoFactorAuthentication" : {
            "type" : "boolean"
          },
          "pendingTwoFactorAuthentication" : {
            "$ref" : "#/components/schemas/twoFactorAuthenticationSecret"
          },
          "webauthnDevice" : {
            "$ref" : "#/components/schemas/webauthnDevice"
          },
          "userType" : {
            "$ref" : "#/components/schemas/userType"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "invitedUser" : "invitedUser",
            "organizationMember" : "organizationMember",
            "projectTeamMember" : "projectTeamMember"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/authorityHolder"
        } ]
      },
      "userCreationAuthModule" : {
        "type" : "object",
        "properties" : {
          "allowedCreateNewUsers" : {
            "type" : "boolean"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "azureauthmodule" : "azureauthmodule",
            "externalauthmodule" : "externalauthmodule",
            "externaloauth2module" : "externaloauth2module",
            "externalpasswordauthmodule" : "externalpasswordauthmodule",
            "githubauthmodule" : "githubauthmodule",
            "googleauthmodule" : "googleauthmodule",
            "jbaauthmodule" : "jbaauthmodule",
            "jbaoauthauthmodule" : "jbaoauthauthmodule",
            "jiraauthmodule" : "jiraauthmodule",
            "ldapauthmodule" : "ldapauthmodule",
            "oauth2authmodule" : "oauth2authmodule",
            "oktaAuthmodule" : "oktaAuthmodule",
            "openidauthmodule" : "openidauthmodule",
            "samlAuthModule" : "samlAuthModule"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/authmodule"
        } ]
      },
      "userDashboardImport" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "user" : {
            "type" : "string"
          },
          "favorite" : {
            "type" : "boolean"
          },
          "ordinal" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "userDashboardPermission" : {
        "type" : "object",
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/user"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/dashboardPermission"
        } ]
      },
      "userGroup" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "iconUrl" : {
            "type" : "string"
          },
          "autoJoin" : {
            "type" : "boolean"
          },
          "autoJoinDomain" : {
            "type" : "string"
          },
          "requiredTwoFactorAuthentication" : {
            "type" : "boolean"
          },
          "parentsRequireTwoFactorAuthentication" : {
            "type" : "boolean"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/user"
            }
          },
          "ownUsers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/user"
            }
          },
          "userCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parent" : {
            "$ref" : "#/components/schemas/userGroup"
          },
          "subgroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/userGroup"
            }
          },
          "teams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/projectTeam"
            }
          },
          "organizations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/organization"
            }
          },
          "project" : {
            "$ref" : "#/components/schemas/project"
          },
          "allUsers" : {
            "type" : "boolean"
          },
          "registeredUsers" : {
            "type" : "boolean"
          },
          "implicit" : {
            "type" : "boolean"
          },
          "queriedSingleton" : {
            "type" : "boolean"
          },
          "removable" : {
            "type" : "boolean"
          },
          "immutable" : {
            "type" : "boolean"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/authorityHolder"
        } ]
      },
      "userGroupDashboardPermission" : {
        "type" : "object",
        "properties" : {
          "userGroup" : {
            "$ref" : "#/components/schemas/userGroup"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/dashboardPermission"
        } ]
      },
      "userType" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "uuid" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "aliases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/alias"
            }
          },
          "type" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "authAttempt" : "authAttempt",
            "authFoundUser" : "authFoundUser",
            "dashboard" : "dashboard",
            "dashboardPermission" : "dashboardPermission",
            "hubFeature" : "hubFeature",
            "identityProviderMetadata" : "identityProviderMetadata",
            "projectTeamDashboardPermission" : "projectTeamDashboardPermission",
            "providerMetadata" : "providerMetadata",
            "scopedFeature" : "scopedFeature",
            "serviceProviderMetadata" : "serviceProviderMetadata",
            "systemFeature" : "systemFeature",
            "userDashboardPermission" : "userDashboardPermission",
            "userGroupDashboardPermission" : "userGroupDashboardPermission",
            "widget" : "widget"
          }
        }
      },
      "vcsUserName" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "webauthnDevice" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "vendor" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "iconUrl" : {
            "type" : "string"
          }
        }
      },
      "widget" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "installedVersion" : {
            "type" : "string"
          },
          "latestVersion" : {
            "type" : "string"
          },
          "installedFromRepository" : {
            "type" : "boolean"
          },
          "archiveId" : {
            "type" : "string"
          },
          "manifest" : {
            "type" : "string",
            "format" : "base64"
          },
          "disabled" : {
            "type" : "boolean"
          },
          "applicationNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "accessibleServices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/service"
            }
          },
          "capabilities" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "repositoryUrl" : {
            "type" : "string"
          },
          "repositoryIconUrl" : {
            "type" : "string"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/uuid"
        } ]
      },
      "BasePage" : {
        "required" : [ "type" ],
        "properties" : {
          "skip" : {
            "type" : "integer",
            "format" : "int32"
          },
          "total" : {
            "type" : "integer",
            "format" : "int32"
          },
          "top" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "AuthmodulesPage" : {
        "properties" : {
          "authmodules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/authmodule"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "AutojoingroupsPage" : {
        "properties" : {
          "autojoingroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/userGroup"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "ReportersPage" : {
        "properties" : {
          "reporters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/user"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "ProjectsPage" : {
        "properties" : {
          "projects" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/project"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "SshpublickeysPage" : {
        "properties" : {
          "sshpublickeys" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/sshPublicKey"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "KeystoresPage" : {
        "properties" : {
          "keystores" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/keyStore"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "RolesPage" : {
        "properties" : {
          "roles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/role"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "RefreshtokensPage" : {
        "properties" : {
          "refreshtokens" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/refreshToken"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "TransitiveorganizationrolesPage" : {
        "properties" : {
          "transitiveorganizationroles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/organizationRole"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "ProfileattributeprototypesPage" : {
        "properties" : {
          "profileattributeprototypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/profileAttributePrototype"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "HelpdesksettingsPage" : {
        "properties" : {
          "helpdesksettings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/projectHelpdeskSettings"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "TransitivegroupsPage" : {
        "properties" : {
          "transitivegroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/userGroup"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "WidgetsPage" : {
        "properties" : {
          "widgets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/widget"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "ProjectrolesPage" : {
        "properties" : {
          "projectroles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/projectRole"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "PermanenttokensPage" : {
        "properties" : {
          "permanenttokens" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/permanentToken"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "SubgroupsPage" : {
        "properties" : {
          "subgroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/userGroup"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "PermissionsPage" : {
        "properties" : {
          "permissions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/permission"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "SourcedprojectrolesPage" : {
        "properties" : {
          "sourcedprojectroles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/sourcedProjectRole"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "DefaultrolesPage" : {
        "properties" : {
          "defaultroles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/role"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "ProjectteamsPage" : {
        "properties" : {
          "projectteams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/projectTeam"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "EventsPage" : {
        "properties" : {
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/event"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "SettingsPage" : {
        "properties" : {
          "settings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/settings"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "OrganizationrolesPage" : {
        "properties" : {
          "organizationroles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/organizationRole"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "OwnUsersPage" : {
        "properties" : {
          "ownUsers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/user"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "SourcedorganizationrolesPage" : {
        "properties" : {
          "sourcedorganizationroles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/sourcedOrganizationRole"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "FavoriteprojectsPage" : {
        "properties" : {
          "favoriteprojects" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/project"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "TeamsPage" : {
        "properties" : {
          "teams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/projectTeam"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "GroupsPage" : {
        "properties" : {
          "groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/userGroup"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "ResourcesPage" : {
        "properties" : {
          "resources" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/resource"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "TransitiveprojectrolesPage" : {
        "properties" : {
          "transitiveprojectroles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/projectRole"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "HubfeaturesPage" : {
        "properties" : {
          "hubfeatures" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/hubFeature"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "ServicesPage" : {
        "properties" : {
          "services" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/service"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "ApplicationPasswordsPage" : {
        "properties" : {
          "applicationPasswords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/applicationPassword"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "CustomattributemappingsPage" : {
        "properties" : {
          "customattributemappings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/authModuleCustomAttributeMapping"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "UsersPage" : {
        "properties" : {
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/user"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "ApprovedscopesPage" : {
        "properties" : {
          "approvedscopes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/approvedScope"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "GroupmappingsPage" : {
        "properties" : {
          "groupmappings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/authModuleGroupMapping"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "ViewersPage" : {
        "properties" : {
          "viewers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/authorityHolder"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "LicensesPage" : {
        "properties" : {
          "licenses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/license"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "CertificatesPage" : {
        "properties" : {
          "certificates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/certificate"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "MigrationsPage" : {
        "properties" : {
          "migrations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/migrations"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "UserdetailsPage" : {
        "properties" : {
          "userdetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/details"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "UsergroupsPage" : {
        "properties" : {
          "usergroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/userGroup"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "OrganizationsPage" : {
        "properties" : {
          "organizations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/organization"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "MetricsPage" : {
        "properties" : {
          "metrics" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/metrics"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "ItemsPage" : {
        "properties" : {
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/dashboard"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      },
      "UntrustedredirecturisPage" : {
        "properties" : {
          "untrustedredirecturis" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/untrustedRedirectURI"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/BasePage"
        } ]
      }
    },
    "securitySchemes" : {
      "bearer" : {
        "type" : "http",
        "description" : "Hub OAuth token, permanent token or application password",
        "scheme" : "bearer"
      }
    }
  }
}