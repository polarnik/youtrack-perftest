/*
 * Hub REST API
 * JetBrains Teamware Connector
 *
 * OpenAPI spec version: 2024.2.38971
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.hub;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Permission
 */


public class Permission {
    @SerializedName("id")
    private String id = null;

    @SerializedName("aliases")
    private List<Alias> aliases = null;

    @SerializedName("key")
    private String key = null;

    @SerializedName("name")
    private String name = null;

    @SerializedName("service")
    private Service service = null;

    @SerializedName("description")
    private String description = null;

    @SerializedName("global")
    private Boolean global = null;

    @SerializedName("entityType")
    private String entityType = null;

    @SerializedName("operation")
    private String operation = null;

    @SerializedName("impliedPermissions")
    private List<Permission> impliedPermissions = null;

    @SerializedName("dependentPermissions")
    private List<Permission> dependentPermissions = null;

    public Permission id(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public Permission aliases(List<Alias> aliases) {
        this.aliases = aliases;
        return this;
    }

    public Permission addAliasesItem(Alias aliasesItem) {
        if (this.aliases == null) {
            this.aliases = new ArrayList<Alias>();
        }
        this.aliases.add(aliasesItem);
        return this;
    }

    /**
     * Get aliases
     *
     * @return aliases
     **/
    @Schema(description = "")
    public List<Alias> getAliases() {
        return aliases;
    }

    public void setAliases(List<Alias> aliases) {
        this.aliases = aliases;
    }

    public Permission key(String key) {
        this.key = key;
        return this;
    }

    /**
     * Get key
     *
     * @return key
     **/
    @Schema(description = "")
    public String getKey() {
        return key;
    }

    public void setKey(String key) {
        this.key = key;
    }

    public Permission name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @Schema(description = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Permission service(Service service) {
        this.service = service;
        return this;
    }

    /**
     * Get service
     *
     * @return service
     **/
    @Schema(description = "")
    public Service getService() {
        return service;
    }

    public void setService(Service service) {
        this.service = service;
    }

    public Permission description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     *
     * @return description
     **/
    @Schema(description = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Permission global(Boolean global) {
        this.global = global;
        return this;
    }

    /**
     * Get global
     *
     * @return global
     **/
    @Schema(description = "")
    public Boolean isGlobal() {
        return global;
    }

    public void setGlobal(Boolean global) {
        this.global = global;
    }

    public Permission entityType(String entityType) {
        this.entityType = entityType;
        return this;
    }

    /**
     * Get entityType
     *
     * @return entityType
     **/
    @Schema(description = "")
    public String getEntityType() {
        return entityType;
    }

    public void setEntityType(String entityType) {
        this.entityType = entityType;
    }

    public Permission operation(String operation) {
        this.operation = operation;
        return this;
    }

    /**
     * Get operation
     *
     * @return operation
     **/
    @Schema(description = "")
    public String getOperation() {
        return operation;
    }

    public void setOperation(String operation) {
        this.operation = operation;
    }

    public Permission impliedPermissions(List<Permission> impliedPermissions) {
        this.impliedPermissions = impliedPermissions;
        return this;
    }

    public Permission addImpliedPermissionsItem(Permission impliedPermissionsItem) {
        if (this.impliedPermissions == null) {
            this.impliedPermissions = new ArrayList<Permission>();
        }
        this.impliedPermissions.add(impliedPermissionsItem);
        return this;
    }

    /**
     * Get impliedPermissions
     *
     * @return impliedPermissions
     **/
    @Schema(description = "")
    public List<Permission> getImpliedPermissions() {
        return impliedPermissions;
    }

    public void setImpliedPermissions(List<Permission> impliedPermissions) {
        this.impliedPermissions = impliedPermissions;
    }

    public Permission dependentPermissions(List<Permission> dependentPermissions) {
        this.dependentPermissions = dependentPermissions;
        return this;
    }

    public Permission addDependentPermissionsItem(Permission dependentPermissionsItem) {
        if (this.dependentPermissions == null) {
            this.dependentPermissions = new ArrayList<Permission>();
        }
        this.dependentPermissions.add(dependentPermissionsItem);
        return this;
    }

    /**
     * Get dependentPermissions
     *
     * @return dependentPermissions
     **/
    @Schema(description = "")
    public List<Permission> getDependentPermissions() {
        return dependentPermissions;
    }

    public void setDependentPermissions(List<Permission> dependentPermissions) {
        this.dependentPermissions = dependentPermissions;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Permission permission = (Permission) o;
        return Objects.equals(this.id, permission.id) &&
                Objects.equals(this.aliases, permission.aliases) &&
                Objects.equals(this.key, permission.key) &&
                Objects.equals(this.name, permission.name) &&
                Objects.equals(this.service, permission.service) &&
                Objects.equals(this.description, permission.description) &&
                Objects.equals(this.global, permission.global) &&
                Objects.equals(this.entityType, permission.entityType) &&
                Objects.equals(this.operation, permission.operation) &&
                Objects.equals(this.impliedPermissions, permission.impliedPermissions) &&
                Objects.equals(this.dependentPermissions, permission.dependentPermissions);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, aliases, key, name, service, description, global, entityType, operation, impliedPermissions, dependentPermissions);
    }


    @Override
    public String toString() {

        String sb = "class Permission {\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    aliases: " + toIndentedString(aliases) + "\n" +
                "    key: " + toIndentedString(key) + "\n" +
                "    name: " + toIndentedString(name) + "\n" +
                "    service: " + toIndentedString(service) + "\n" +
                "    description: " + toIndentedString(description) + "\n" +
                "    global: " + toIndentedString(global) + "\n" +
                "    entityType: " + toIndentedString(entityType) + "\n" +
                "    operation: " + toIndentedString(operation) + "\n" +
                "    impliedPermissions: " + toIndentedString(impliedPermissions) + "\n" +
                "    dependentPermissions: " + toIndentedString(dependentPermissions) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
