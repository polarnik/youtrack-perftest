/*
 * Hub REST API
 * JetBrains Teamware Connector
 *
 * OpenAPI spec version: 2024.2.38971
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.hub;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * Externaloauth2module
 */


public class Externaloauth2module extends Externalauthmodule {
    @SerializedName("clientId")
    private String clientId = null;

    @SerializedName("clientSecret")
    private String clientSecret = null;

    @SerializedName("redirectUri")
    private String redirectUri = null;

    @SerializedName("iconUrl")
    private String iconUrl = null;

    @SerializedName("extensionGrantType")
    private String extensionGrantType = null;

    public Externaloauth2module() {
        this.type = this.getClass().getSimpleName();
    }

    public Externaloauth2module clientId(String clientId) {
        this.clientId = clientId;
        return this;
    }

    /**
     * Get clientId
     *
     * @return clientId
     **/
    @Schema(description = "")
    public String getClientId() {
        return clientId;
    }

    public void setClientId(String clientId) {
        this.clientId = clientId;
    }

    public Externaloauth2module clientSecret(String clientSecret) {
        this.clientSecret = clientSecret;
        return this;
    }

    /**
     * Get clientSecret
     *
     * @return clientSecret
     **/
    @Schema(description = "")
    public String getClientSecret() {
        return clientSecret;
    }

    public void setClientSecret(String clientSecret) {
        this.clientSecret = clientSecret;
    }

    public Externaloauth2module redirectUri(String redirectUri) {
        this.redirectUri = redirectUri;
        return this;
    }

    /**
     * Get redirectUri
     *
     * @return redirectUri
     **/
    @Schema(description = "")
    public String getRedirectUri() {
        return redirectUri;
    }

    public void setRedirectUri(String redirectUri) {
        this.redirectUri = redirectUri;
    }

    public Externaloauth2module iconUrl(String iconUrl) {
        this.iconUrl = iconUrl;
        return this;
    }

    /**
     * Get iconUrl
     *
     * @return iconUrl
     **/
    @Schema(description = "")
    public String getIconUrl() {
        return iconUrl;
    }

    public void setIconUrl(String iconUrl) {
        this.iconUrl = iconUrl;
    }

    public Externaloauth2module extensionGrantType(String extensionGrantType) {
        this.extensionGrantType = extensionGrantType;
        return this;
    }

    /**
     * Get extensionGrantType
     *
     * @return extensionGrantType
     **/
    @Schema(description = "")
    public String getExtensionGrantType() {
        return extensionGrantType;
    }

    public void setExtensionGrantType(String extensionGrantType) {
        this.extensionGrantType = extensionGrantType;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Externaloauth2module externaloauth2module = (Externaloauth2module) o;
        return Objects.equals(this.clientId, externaloauth2module.clientId) &&
                Objects.equals(this.clientSecret, externaloauth2module.clientSecret) &&
                Objects.equals(this.redirectUri, externaloauth2module.redirectUri) &&
                Objects.equals(this.iconUrl, externaloauth2module.iconUrl) &&
                Objects.equals(this.extensionGrantType, externaloauth2module.extensionGrantType) &&
                super.equals(o);
    }

    @Override
    public int hashCode() {
        return Objects.hash(clientId, clientSecret, redirectUri, iconUrl, extensionGrantType, super.hashCode());
    }


    @Override
    public String toString() {
        String sb = "class Externaloauth2module {\n" +
                "    " + toIndentedString(super.toString()) + "\n" +
                "    clientId: " + toIndentedString(clientId) + "\n" +
                "    clientSecret: " + toIndentedString(clientSecret) + "\n" +
                "    redirectUri: " + toIndentedString(redirectUri) + "\n" +
                "    iconUrl: " + toIndentedString(iconUrl) + "\n" +
                "    extensionGrantType: " + toIndentedString(extensionGrantType) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
