/*
 * Hub REST API
 * JetBrains Teamware Connector
 *
 * OpenAPI spec version: 2024.2.38971
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.hub;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * AuthorityHolder
 */


public class AuthorityHolder {
    @SerializedName("type")
    protected String type = null;
    @SerializedName("id")
    private String id = null;
    @SerializedName("aliases")
    private List<Alias> aliases = null;
    @SerializedName("name")
    private String name = null;
    @SerializedName("projectRoles")
    private List<ProjectRole> projectRoles = null;
    @SerializedName("transitiveProjectRoles")
    private List<ProjectRole> transitiveProjectRoles = null;
    @SerializedName("sourcedProjectRoles")
    private List<SourcedProjectRole> sourcedProjectRoles = null;
    @SerializedName("organizationRoles")
    private List<OrganizationRole> organizationRoles = null;
    @SerializedName("transitiveOrganizationRoles")
    private List<OrganizationRole> transitiveOrganizationRoles = null;
    @SerializedName("sourcedOrganizationRoles")
    private List<SourcedOrganizationRole> sourcedOrganizationRoles = null;

    public AuthorityHolder() {
        this.type = this.getClass().getSimpleName();
    }

    public AuthorityHolder id(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public AuthorityHolder aliases(List<Alias> aliases) {
        this.aliases = aliases;
        return this;
    }

    public AuthorityHolder addAliasesItem(Alias aliasesItem) {
        if (this.aliases == null) {
            this.aliases = new ArrayList<Alias>();
        }
        this.aliases.add(aliasesItem);
        return this;
    }

    /**
     * Get aliases
     *
     * @return aliases
     **/
    @Schema(description = "")
    public List<Alias> getAliases() {
        return aliases;
    }

    public void setAliases(List<Alias> aliases) {
        this.aliases = aliases;
    }

    public AuthorityHolder name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @Schema(description = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public AuthorityHolder projectRoles(List<ProjectRole> projectRoles) {
        this.projectRoles = projectRoles;
        return this;
    }

    public AuthorityHolder addProjectRolesItem(ProjectRole projectRolesItem) {
        if (this.projectRoles == null) {
            this.projectRoles = new ArrayList<ProjectRole>();
        }
        this.projectRoles.add(projectRolesItem);
        return this;
    }

    /**
     * Get projectRoles
     *
     * @return projectRoles
     **/
    @Schema(description = "")
    public List<ProjectRole> getProjectRoles() {
        return projectRoles;
    }

    public void setProjectRoles(List<ProjectRole> projectRoles) {
        this.projectRoles = projectRoles;
    }

    public AuthorityHolder transitiveProjectRoles(List<ProjectRole> transitiveProjectRoles) {
        this.transitiveProjectRoles = transitiveProjectRoles;
        return this;
    }

    public AuthorityHolder addTransitiveProjectRolesItem(ProjectRole transitiveProjectRolesItem) {
        if (this.transitiveProjectRoles == null) {
            this.transitiveProjectRoles = new ArrayList<ProjectRole>();
        }
        this.transitiveProjectRoles.add(transitiveProjectRolesItem);
        return this;
    }

    /**
     * Get transitiveProjectRoles
     *
     * @return transitiveProjectRoles
     **/
    @Schema(description = "")
    public List<ProjectRole> getTransitiveProjectRoles() {
        return transitiveProjectRoles;
    }

    public void setTransitiveProjectRoles(List<ProjectRole> transitiveProjectRoles) {
        this.transitiveProjectRoles = transitiveProjectRoles;
    }

    public AuthorityHolder sourcedProjectRoles(List<SourcedProjectRole> sourcedProjectRoles) {
        this.sourcedProjectRoles = sourcedProjectRoles;
        return this;
    }

    public AuthorityHolder addSourcedProjectRolesItem(SourcedProjectRole sourcedProjectRolesItem) {
        if (this.sourcedProjectRoles == null) {
            this.sourcedProjectRoles = new ArrayList<SourcedProjectRole>();
        }
        this.sourcedProjectRoles.add(sourcedProjectRolesItem);
        return this;
    }

    /**
     * Get sourcedProjectRoles
     *
     * @return sourcedProjectRoles
     **/
    @Schema(description = "")
    public List<SourcedProjectRole> getSourcedProjectRoles() {
        return sourcedProjectRoles;
    }

    public void setSourcedProjectRoles(List<SourcedProjectRole> sourcedProjectRoles) {
        this.sourcedProjectRoles = sourcedProjectRoles;
    }

    public AuthorityHolder organizationRoles(List<OrganizationRole> organizationRoles) {
        this.organizationRoles = organizationRoles;
        return this;
    }

    public AuthorityHolder addOrganizationRolesItem(OrganizationRole organizationRolesItem) {
        if (this.organizationRoles == null) {
            this.organizationRoles = new ArrayList<OrganizationRole>();
        }
        this.organizationRoles.add(organizationRolesItem);
        return this;
    }

    /**
     * Get organizationRoles
     *
     * @return organizationRoles
     **/
    @Schema(description = "")
    public List<OrganizationRole> getOrganizationRoles() {
        return organizationRoles;
    }

    public void setOrganizationRoles(List<OrganizationRole> organizationRoles) {
        this.organizationRoles = organizationRoles;
    }

    public AuthorityHolder transitiveOrganizationRoles(List<OrganizationRole> transitiveOrganizationRoles) {
        this.transitiveOrganizationRoles = transitiveOrganizationRoles;
        return this;
    }

    public AuthorityHolder addTransitiveOrganizationRolesItem(OrganizationRole transitiveOrganizationRolesItem) {
        if (this.transitiveOrganizationRoles == null) {
            this.transitiveOrganizationRoles = new ArrayList<OrganizationRole>();
        }
        this.transitiveOrganizationRoles.add(transitiveOrganizationRolesItem);
        return this;
    }

    /**
     * Get transitiveOrganizationRoles
     *
     * @return transitiveOrganizationRoles
     **/
    @Schema(description = "")
    public List<OrganizationRole> getTransitiveOrganizationRoles() {
        return transitiveOrganizationRoles;
    }

    public void setTransitiveOrganizationRoles(List<OrganizationRole> transitiveOrganizationRoles) {
        this.transitiveOrganizationRoles = transitiveOrganizationRoles;
    }

    public AuthorityHolder sourcedOrganizationRoles(List<SourcedOrganizationRole> sourcedOrganizationRoles) {
        this.sourcedOrganizationRoles = sourcedOrganizationRoles;
        return this;
    }

    public AuthorityHolder addSourcedOrganizationRolesItem(SourcedOrganizationRole sourcedOrganizationRolesItem) {
        if (this.sourcedOrganizationRoles == null) {
            this.sourcedOrganizationRoles = new ArrayList<SourcedOrganizationRole>();
        }
        this.sourcedOrganizationRoles.add(sourcedOrganizationRolesItem);
        return this;
    }

    /**
     * Get sourcedOrganizationRoles
     *
     * @return sourcedOrganizationRoles
     **/
    @Schema(description = "")
    public List<SourcedOrganizationRole> getSourcedOrganizationRoles() {
        return sourcedOrganizationRoles;
    }

    public void setSourcedOrganizationRoles(List<SourcedOrganizationRole> sourcedOrganizationRoles) {
        this.sourcedOrganizationRoles = sourcedOrganizationRoles;
    }

    public AuthorityHolder type(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     **/
    @Schema(required = true, description = "")
    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AuthorityHolder authorityHolder = (AuthorityHolder) o;
        return Objects.equals(this.id, authorityHolder.id) &&
                Objects.equals(this.aliases, authorityHolder.aliases) &&
                Objects.equals(this.name, authorityHolder.name) &&
                Objects.equals(this.projectRoles, authorityHolder.projectRoles) &&
                Objects.equals(this.transitiveProjectRoles, authorityHolder.transitiveProjectRoles) &&
                Objects.equals(this.sourcedProjectRoles, authorityHolder.sourcedProjectRoles) &&
                Objects.equals(this.organizationRoles, authorityHolder.organizationRoles) &&
                Objects.equals(this.transitiveOrganizationRoles, authorityHolder.transitiveOrganizationRoles) &&
                Objects.equals(this.sourcedOrganizationRoles, authorityHolder.sourcedOrganizationRoles) &&
                Objects.equals(this.type, authorityHolder.type);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, aliases, name, projectRoles, transitiveProjectRoles, sourcedProjectRoles, organizationRoles, transitiveOrganizationRoles, sourcedOrganizationRoles, type);
    }


    @Override
    public String toString() {

        String sb = "class AuthorityHolder {\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    aliases: " + toIndentedString(aliases) + "\n" +
                "    name: " + toIndentedString(name) + "\n" +
                "    projectRoles: " + toIndentedString(projectRoles) + "\n" +
                "    transitiveProjectRoles: " + toIndentedString(transitiveProjectRoles) + "\n" +
                "    sourcedProjectRoles: " + toIndentedString(sourcedProjectRoles) + "\n" +
                "    organizationRoles: " + toIndentedString(organizationRoles) + "\n" +
                "    transitiveOrganizationRoles: " + toIndentedString(transitiveOrganizationRoles) + "\n" +
                "    sourcedOrganizationRoles: " + toIndentedString(sourcedOrganizationRoles) + "\n" +
                "    type: " + toIndentedString(type) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
