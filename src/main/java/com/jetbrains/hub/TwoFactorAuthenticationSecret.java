/*
 * Hub REST API
 * JetBrains Teamware Connector
 *
 * OpenAPI spec version: 2024.2.38971
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.hub;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * TwoFactorAuthenticationSecret
 */


public class TwoFactorAuthenticationSecret {
    @SerializedName("secretKey")
    private String secretKey = null;

    @SerializedName("qrCodeUri")
    private String qrCodeUri = null;

    @SerializedName("scratchCodes")
    private List<Integer> scratchCodes = null;

    @SerializedName("failedAttemptsCounter")
    private Integer failedAttemptsCounter = null;

    @SerializedName("type")
    private String type = null;

    public TwoFactorAuthenticationSecret() {
        this.type = this.getClass().getSimpleName();
    }

    public TwoFactorAuthenticationSecret secretKey(String secretKey) {
        this.secretKey = secretKey;
        return this;
    }

    /**
     * Get secretKey
     *
     * @return secretKey
     **/
    @Schema(description = "")
    public String getSecretKey() {
        return secretKey;
    }

    public void setSecretKey(String secretKey) {
        this.secretKey = secretKey;
    }

    public TwoFactorAuthenticationSecret qrCodeUri(String qrCodeUri) {
        this.qrCodeUri = qrCodeUri;
        return this;
    }

    /**
     * Get qrCodeUri
     *
     * @return qrCodeUri
     **/
    @Schema(description = "")
    public String getQrCodeUri() {
        return qrCodeUri;
    }

    public void setQrCodeUri(String qrCodeUri) {
        this.qrCodeUri = qrCodeUri;
    }

    public TwoFactorAuthenticationSecret scratchCodes(List<Integer> scratchCodes) {
        this.scratchCodes = scratchCodes;
        return this;
    }

    public TwoFactorAuthenticationSecret addScratchCodesItem(Integer scratchCodesItem) {
        if (this.scratchCodes == null) {
            this.scratchCodes = new ArrayList<Integer>();
        }
        this.scratchCodes.add(scratchCodesItem);
        return this;
    }

    /**
     * Get scratchCodes
     *
     * @return scratchCodes
     **/
    @Schema(description = "")
    public List<Integer> getScratchCodes() {
        return scratchCodes;
    }

    public void setScratchCodes(List<Integer> scratchCodes) {
        this.scratchCodes = scratchCodes;
    }

    public TwoFactorAuthenticationSecret failedAttemptsCounter(Integer failedAttemptsCounter) {
        this.failedAttemptsCounter = failedAttemptsCounter;
        return this;
    }

    /**
     * Get failedAttemptsCounter
     *
     * @return failedAttemptsCounter
     **/
    @Schema(description = "")
    public Integer getFailedAttemptsCounter() {
        return failedAttemptsCounter;
    }

    public void setFailedAttemptsCounter(Integer failedAttemptsCounter) {
        this.failedAttemptsCounter = failedAttemptsCounter;
    }

    public TwoFactorAuthenticationSecret type(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     **/
    @Schema(required = true, description = "")
    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TwoFactorAuthenticationSecret twoFactorAuthenticationSecret = (TwoFactorAuthenticationSecret) o;
        return Objects.equals(this.secretKey, twoFactorAuthenticationSecret.secretKey) &&
                Objects.equals(this.qrCodeUri, twoFactorAuthenticationSecret.qrCodeUri) &&
                Objects.equals(this.scratchCodes, twoFactorAuthenticationSecret.scratchCodes) &&
                Objects.equals(this.failedAttemptsCounter, twoFactorAuthenticationSecret.failedAttemptsCounter) &&
                Objects.equals(this.type, twoFactorAuthenticationSecret.type);
    }

    @Override
    public int hashCode() {
        return Objects.hash(secretKey, qrCodeUri, scratchCodes, failedAttemptsCounter, type);
    }


    @Override
    public String toString() {

        String sb = "class TwoFactorAuthenticationSecret {\n" +
                "    secretKey: " + toIndentedString(secretKey) + "\n" +
                "    qrCodeUri: " + toIndentedString(qrCodeUri) + "\n" +
                "    scratchCodes: " + toIndentedString(scratchCodes) + "\n" +
                "    failedAttemptsCounter: " + toIndentedString(failedAttemptsCounter) + "\n" +
                "    type: " + toIndentedString(type) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
