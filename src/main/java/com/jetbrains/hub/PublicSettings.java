/*
 * Hub REST API
 * JetBrains Teamware Connector
 *
 * OpenAPI spec version: 2024.2.38971
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.hub;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * PublicSettings
 */


public class PublicSettings extends Settings {
    @SerializedName("locale")
    private Locale locale = null;

    @SerializedName("hubMottoHidden")
    private Boolean hubMottoHidden = null;

    @SerializedName("companyLogo")
    private String companyLogo = null;

    @SerializedName("loginMessage")
    private String loginMessage = null;

    @SerializedName("loginFieldPlaceholder")
    private String loginFieldPlaceholder = null;

    @SerializedName("systemMessage")
    private String systemMessage = null;

    @SerializedName("endUserAgreement")
    private EndUserAgreement endUserAgreement = null;

    @SerializedName("installationType")
    private String installationType = null;

    @SerializedName("emailVerificationRequired")
    private Boolean emailVerificationRequired = null;

    @SerializedName("hostServiceName")
    private String hostServiceName = null;

    @SerializedName("hostServiceApplicationName")
    private String hostServiceApplicationName = null;

    @SerializedName("helpdeskEnabled")
    private Boolean helpdeskEnabled = null;

    public PublicSettings locale(Locale locale) {
        this.locale = locale;
        return this;
    }

    /**
     * Get locale
     *
     * @return locale
     **/
    @Schema(description = "")
    public Locale getLocale() {
        return locale;
    }

    public void setLocale(Locale locale) {
        this.locale = locale;
    }

    public PublicSettings hubMottoHidden(Boolean hubMottoHidden) {
        this.hubMottoHidden = hubMottoHidden;
        return this;
    }

    /**
     * Get hubMottoHidden
     *
     * @return hubMottoHidden
     **/
    @Schema(description = "")
    public Boolean isHubMottoHidden() {
        return hubMottoHidden;
    }

    public void setHubMottoHidden(Boolean hubMottoHidden) {
        this.hubMottoHidden = hubMottoHidden;
    }

    public PublicSettings companyLogo(String companyLogo) {
        this.companyLogo = companyLogo;
        return this;
    }

    /**
     * Get companyLogo
     *
     * @return companyLogo
     **/
    @Schema(description = "")
    public String getCompanyLogo() {
        return companyLogo;
    }

    public void setCompanyLogo(String companyLogo) {
        this.companyLogo = companyLogo;
    }

    public PublicSettings loginMessage(String loginMessage) {
        this.loginMessage = loginMessage;
        return this;
    }

    /**
     * Get loginMessage
     *
     * @return loginMessage
     **/
    @Schema(description = "")
    public String getLoginMessage() {
        return loginMessage;
    }

    public void setLoginMessage(String loginMessage) {
        this.loginMessage = loginMessage;
    }

    public PublicSettings loginFieldPlaceholder(String loginFieldPlaceholder) {
        this.loginFieldPlaceholder = loginFieldPlaceholder;
        return this;
    }

    /**
     * Get loginFieldPlaceholder
     *
     * @return loginFieldPlaceholder
     **/
    @Schema(description = "")
    public String getLoginFieldPlaceholder() {
        return loginFieldPlaceholder;
    }

    public void setLoginFieldPlaceholder(String loginFieldPlaceholder) {
        this.loginFieldPlaceholder = loginFieldPlaceholder;
    }

    public PublicSettings systemMessage(String systemMessage) {
        this.systemMessage = systemMessage;
        return this;
    }

    /**
     * Get systemMessage
     *
     * @return systemMessage
     **/
    @Schema(description = "")
    public String getSystemMessage() {
        return systemMessage;
    }

    public void setSystemMessage(String systemMessage) {
        this.systemMessage = systemMessage;
    }

    public PublicSettings endUserAgreement(EndUserAgreement endUserAgreement) {
        this.endUserAgreement = endUserAgreement;
        return this;
    }

    /**
     * Get endUserAgreement
     *
     * @return endUserAgreement
     **/
    @Schema(description = "")
    public EndUserAgreement getEndUserAgreement() {
        return endUserAgreement;
    }

    public void setEndUserAgreement(EndUserAgreement endUserAgreement) {
        this.endUserAgreement = endUserAgreement;
    }

    public PublicSettings installationType(String installationType) {
        this.installationType = installationType;
        return this;
    }

    /**
     * Get installationType
     *
     * @return installationType
     **/
    @Schema(description = "")
    public String getInstallationType() {
        return installationType;
    }

    public void setInstallationType(String installationType) {
        this.installationType = installationType;
    }

    public PublicSettings emailVerificationRequired(Boolean emailVerificationRequired) {
        this.emailVerificationRequired = emailVerificationRequired;
        return this;
    }

    /**
     * Get emailVerificationRequired
     *
     * @return emailVerificationRequired
     **/
    @Schema(description = "")
    public Boolean isEmailVerificationRequired() {
        return emailVerificationRequired;
    }

    public void setEmailVerificationRequired(Boolean emailVerificationRequired) {
        this.emailVerificationRequired = emailVerificationRequired;
    }

    public PublicSettings hostServiceName(String hostServiceName) {
        this.hostServiceName = hostServiceName;
        return this;
    }

    /**
     * Get hostServiceName
     *
     * @return hostServiceName
     **/
    @Schema(description = "")
    public String getHostServiceName() {
        return hostServiceName;
    }

    public void setHostServiceName(String hostServiceName) {
        this.hostServiceName = hostServiceName;
    }

    public PublicSettings hostServiceApplicationName(String hostServiceApplicationName) {
        this.hostServiceApplicationName = hostServiceApplicationName;
        return this;
    }

    /**
     * Get hostServiceApplicationName
     *
     * @return hostServiceApplicationName
     **/
    @Schema(description = "")
    public String getHostServiceApplicationName() {
        return hostServiceApplicationName;
    }

    public void setHostServiceApplicationName(String hostServiceApplicationName) {
        this.hostServiceApplicationName = hostServiceApplicationName;
    }

    public PublicSettings helpdeskEnabled(Boolean helpdeskEnabled) {
        this.helpdeskEnabled = helpdeskEnabled;
        return this;
    }

    /**
     * Get helpdeskEnabled
     *
     * @return helpdeskEnabled
     **/
    @Schema(description = "")
    public Boolean isHelpdeskEnabled() {
        return helpdeskEnabled;
    }

    public void setHelpdeskEnabled(Boolean helpdeskEnabled) {
        this.helpdeskEnabled = helpdeskEnabled;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PublicSettings publicSettings = (PublicSettings) o;
        return Objects.equals(this.locale, publicSettings.locale) &&
                Objects.equals(this.hubMottoHidden, publicSettings.hubMottoHidden) &&
                Objects.equals(this.companyLogo, publicSettings.companyLogo) &&
                Objects.equals(this.loginMessage, publicSettings.loginMessage) &&
                Objects.equals(this.loginFieldPlaceholder, publicSettings.loginFieldPlaceholder) &&
                Objects.equals(this.systemMessage, publicSettings.systemMessage) &&
                Objects.equals(this.endUserAgreement, publicSettings.endUserAgreement) &&
                Objects.equals(this.installationType, publicSettings.installationType) &&
                Objects.equals(this.emailVerificationRequired, publicSettings.emailVerificationRequired) &&
                Objects.equals(this.hostServiceName, publicSettings.hostServiceName) &&
                Objects.equals(this.hostServiceApplicationName, publicSettings.hostServiceApplicationName) &&
                Objects.equals(this.helpdeskEnabled, publicSettings.helpdeskEnabled) &&
                super.equals(o);
    }

    @Override
    public int hashCode() {
        return Objects.hash(locale, hubMottoHidden, companyLogo, loginMessage, loginFieldPlaceholder, systemMessage, endUserAgreement, installationType, emailVerificationRequired, hostServiceName, hostServiceApplicationName, helpdeskEnabled, super.hashCode());
    }


    @Override
    public String toString() {
        String sb = "class PublicSettings {\n" +
                "    " + toIndentedString(super.toString()) + "\n" +
                "    locale: " + toIndentedString(locale) + "\n" +
                "    hubMottoHidden: " + toIndentedString(hubMottoHidden) + "\n" +
                "    companyLogo: " + toIndentedString(companyLogo) + "\n" +
                "    loginMessage: " + toIndentedString(loginMessage) + "\n" +
                "    loginFieldPlaceholder: " + toIndentedString(loginFieldPlaceholder) + "\n" +
                "    systemMessage: " + toIndentedString(systemMessage) + "\n" +
                "    endUserAgreement: " + toIndentedString(endUserAgreement) + "\n" +
                "    installationType: " + toIndentedString(installationType) + "\n" +
                "    emailVerificationRequired: " + toIndentedString(emailVerificationRequired) + "\n" +
                "    hostServiceName: " + toIndentedString(hostServiceName) + "\n" +
                "    hostServiceApplicationName: " + toIndentedString(hostServiceApplicationName) + "\n" +
                "    helpdeskEnabled: " + toIndentedString(helpdeskEnabled) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
