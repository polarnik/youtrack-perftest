/*
 * Hub REST API
 * JetBrains Teamware Connector
 *
 * OpenAPI spec version: 2024.2.38971
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.hub;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * SmtpSettings
 */


public class SmtpSettings extends Settings {
    @SerializedName("enabled")
    private Boolean enabled = null;

    @SerializedName("host")
    private String host = null;

    @SerializedName("port")
    private Integer port = null;

    @SerializedName("protocol")
    private String protocol = null;

    @SerializedName("from")
    private String from = null;

    @SerializedName("envelopeFrom")
    private String envelopeFrom = null;

    @SerializedName("login")
    private String login = null;

    @SerializedName("password")
    private String password = null;

    @SerializedName("passwordDefined")
    private Boolean passwordDefined = null;

    @SerializedName("keyStore")
    private KeyStore keyStore = null;

    @SerializedName("smtpAnonymous")
    private Boolean smtpAnonymous = null;

    @SerializedName("useDefault")
    private Boolean useDefault = null;

    public SmtpSettings enabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Get enabled
     *
     * @return enabled
     **/
    @Schema(description = "")
    public Boolean isEnabled() {
        return enabled;
    }

    public void setEnabled(Boolean enabled) {
        this.enabled = enabled;
    }

    public SmtpSettings host(String host) {
        this.host = host;
        return this;
    }

    /**
     * Get host
     *
     * @return host
     **/
    @Schema(description = "")
    public String getHost() {
        return host;
    }

    public void setHost(String host) {
        this.host = host;
    }

    public SmtpSettings port(Integer port) {
        this.port = port;
        return this;
    }

    /**
     * Get port
     *
     * @return port
     **/
    @Schema(description = "")
    public Integer getPort() {
        return port;
    }

    public void setPort(Integer port) {
        this.port = port;
    }

    public SmtpSettings protocol(String protocol) {
        this.protocol = protocol;
        return this;
    }

    /**
     * Get protocol
     *
     * @return protocol
     **/
    @Schema(description = "")
    public String getProtocol() {
        return protocol;
    }

    public void setProtocol(String protocol) {
        this.protocol = protocol;
    }

    public SmtpSettings from(String from) {
        this.from = from;
        return this;
    }

    /**
     * Get from
     *
     * @return from
     **/
    @Schema(description = "")
    public String getFrom() {
        return from;
    }

    public void setFrom(String from) {
        this.from = from;
    }

    public SmtpSettings envelopeFrom(String envelopeFrom) {
        this.envelopeFrom = envelopeFrom;
        return this;
    }

    /**
     * Get envelopeFrom
     *
     * @return envelopeFrom
     **/
    @Schema(description = "")
    public String getEnvelopeFrom() {
        return envelopeFrom;
    }

    public void setEnvelopeFrom(String envelopeFrom) {
        this.envelopeFrom = envelopeFrom;
    }

    public SmtpSettings login(String login) {
        this.login = login;
        return this;
    }

    /**
     * Get login
     *
     * @return login
     **/
    @Schema(description = "")
    public String getLogin() {
        return login;
    }

    public void setLogin(String login) {
        this.login = login;
    }

    public SmtpSettings password(String password) {
        this.password = password;
        return this;
    }

    /**
     * Get password
     *
     * @return password
     **/
    @Schema(description = "")
    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public SmtpSettings passwordDefined(Boolean passwordDefined) {
        this.passwordDefined = passwordDefined;
        return this;
    }

    /**
     * Get passwordDefined
     *
     * @return passwordDefined
     **/
    @Schema(description = "")
    public Boolean isPasswordDefined() {
        return passwordDefined;
    }

    public void setPasswordDefined(Boolean passwordDefined) {
        this.passwordDefined = passwordDefined;
    }

    public SmtpSettings keyStore(KeyStore keyStore) {
        this.keyStore = keyStore;
        return this;
    }

    /**
     * Get keyStore
     *
     * @return keyStore
     **/
    @Schema(description = "")
    public KeyStore getKeyStore() {
        return keyStore;
    }

    public void setKeyStore(KeyStore keyStore) {
        this.keyStore = keyStore;
    }

    public SmtpSettings smtpAnonymous(Boolean smtpAnonymous) {
        this.smtpAnonymous = smtpAnonymous;
        return this;
    }

    /**
     * Get smtpAnonymous
     *
     * @return smtpAnonymous
     **/
    @Schema(description = "")
    public Boolean isSmtpAnonymous() {
        return smtpAnonymous;
    }

    public void setSmtpAnonymous(Boolean smtpAnonymous) {
        this.smtpAnonymous = smtpAnonymous;
    }

    public SmtpSettings useDefault(Boolean useDefault) {
        this.useDefault = useDefault;
        return this;
    }

    /**
     * Get useDefault
     *
     * @return useDefault
     **/
    @Schema(description = "")
    public Boolean isUseDefault() {
        return useDefault;
    }

    public void setUseDefault(Boolean useDefault) {
        this.useDefault = useDefault;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SmtpSettings smtpSettings = (SmtpSettings) o;
        return Objects.equals(this.enabled, smtpSettings.enabled) &&
                Objects.equals(this.host, smtpSettings.host) &&
                Objects.equals(this.port, smtpSettings.port) &&
                Objects.equals(this.protocol, smtpSettings.protocol) &&
                Objects.equals(this.from, smtpSettings.from) &&
                Objects.equals(this.envelopeFrom, smtpSettings.envelopeFrom) &&
                Objects.equals(this.login, smtpSettings.login) &&
                Objects.equals(this.password, smtpSettings.password) &&
                Objects.equals(this.passwordDefined, smtpSettings.passwordDefined) &&
                Objects.equals(this.keyStore, smtpSettings.keyStore) &&
                Objects.equals(this.smtpAnonymous, smtpSettings.smtpAnonymous) &&
                Objects.equals(this.useDefault, smtpSettings.useDefault) &&
                super.equals(o);
    }

    @Override
    public int hashCode() {
        return Objects.hash(enabled, host, port, protocol, from, envelopeFrom, login, password, passwordDefined, keyStore, smtpAnonymous, useDefault, super.hashCode());
    }


    @Override
    public String toString() {
        String sb = "class SmtpSettings {\n" +
                "    " + toIndentedString(super.toString()) + "\n" +
                "    enabled: " + toIndentedString(enabled) + "\n" +
                "    host: " + toIndentedString(host) + "\n" +
                "    port: " + toIndentedString(port) + "\n" +
                "    protocol: " + toIndentedString(protocol) + "\n" +
                "    from: " + toIndentedString(from) + "\n" +
                "    envelopeFrom: " + toIndentedString(envelopeFrom) + "\n" +
                "    login: " + toIndentedString(login) + "\n" +
                "    password: " + toIndentedString(password) + "\n" +
                "    passwordDefined: " + toIndentedString(passwordDefined) + "\n" +
                "    keyStore: " + toIndentedString(keyStore) + "\n" +
                "    smtpAnonymous: " + toIndentedString(smtpAnonymous) + "\n" +
                "    useDefault: " + toIndentedString(useDefault) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
