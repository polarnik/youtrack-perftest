/*
 * Hub REST API
 * JetBrains Teamware Connector
 *
 * OpenAPI spec version: 2024.2.38971
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.hub;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * ApplicationPassword
 */


public class ApplicationPassword {
    @SerializedName("id")
    private String id = null;

    @SerializedName("name")
    private String name = null;

    @SerializedName("password")
    private String password = null;

    @SerializedName("user")
    private User user = null;

    @SerializedName("creationTime")
    private Long creationTime = null;

    @SerializedName("lastAccessTime")
    private Long lastAccessTime = null;

    @SerializedName("lastAccessAddress")
    private String lastAccessAddress = null;

    @SerializedName("lastAccessUserAgent")
    private String lastAccessUserAgent = null;

    public ApplicationPassword id(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public ApplicationPassword name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @Schema(description = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public ApplicationPassword password(String password) {
        this.password = password;
        return this;
    }

    /**
     * Get password
     *
     * @return password
     **/
    @Schema(description = "")
    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public ApplicationPassword user(User user) {
        this.user = user;
        return this;
    }

    /**
     * Get user
     *
     * @return user
     **/
    @Schema(description = "")
    public User getUser() {
        return user;
    }

    public void setUser(User user) {
        this.user = user;
    }

    public ApplicationPassword creationTime(Long creationTime) {
        this.creationTime = creationTime;
        return this;
    }

    /**
     * Get creationTime
     *
     * @return creationTime
     **/
    @Schema(description = "")
    public Long getCreationTime() {
        return creationTime;
    }

    public void setCreationTime(Long creationTime) {
        this.creationTime = creationTime;
    }

    public ApplicationPassword lastAccessTime(Long lastAccessTime) {
        this.lastAccessTime = lastAccessTime;
        return this;
    }

    /**
     * Get lastAccessTime
     *
     * @return lastAccessTime
     **/
    @Schema(description = "")
    public Long getLastAccessTime() {
        return lastAccessTime;
    }

    public void setLastAccessTime(Long lastAccessTime) {
        this.lastAccessTime = lastAccessTime;
    }

    public ApplicationPassword lastAccessAddress(String lastAccessAddress) {
        this.lastAccessAddress = lastAccessAddress;
        return this;
    }

    /**
     * Get lastAccessAddress
     *
     * @return lastAccessAddress
     **/
    @Schema(description = "")
    public String getLastAccessAddress() {
        return lastAccessAddress;
    }

    public void setLastAccessAddress(String lastAccessAddress) {
        this.lastAccessAddress = lastAccessAddress;
    }

    public ApplicationPassword lastAccessUserAgent(String lastAccessUserAgent) {
        this.lastAccessUserAgent = lastAccessUserAgent;
        return this;
    }

    /**
     * Get lastAccessUserAgent
     *
     * @return lastAccessUserAgent
     **/
    @Schema(description = "")
    public String getLastAccessUserAgent() {
        return lastAccessUserAgent;
    }

    public void setLastAccessUserAgent(String lastAccessUserAgent) {
        this.lastAccessUserAgent = lastAccessUserAgent;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ApplicationPassword applicationPassword = (ApplicationPassword) o;
        return Objects.equals(this.id, applicationPassword.id) &&
                Objects.equals(this.name, applicationPassword.name) &&
                Objects.equals(this.password, applicationPassword.password) &&
                Objects.equals(this.user, applicationPassword.user) &&
                Objects.equals(this.creationTime, applicationPassword.creationTime) &&
                Objects.equals(this.lastAccessTime, applicationPassword.lastAccessTime) &&
                Objects.equals(this.lastAccessAddress, applicationPassword.lastAccessAddress) &&
                Objects.equals(this.lastAccessUserAgent, applicationPassword.lastAccessUserAgent);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, name, password, user, creationTime, lastAccessTime, lastAccessAddress, lastAccessUserAgent);
    }


    @Override
    public String toString() {

        String sb = "class ApplicationPassword {\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    name: " + toIndentedString(name) + "\n" +
                "    password: " + toIndentedString(password) + "\n" +
                "    user: " + toIndentedString(user) + "\n" +
                "    creationTime: " + toIndentedString(creationTime) + "\n" +
                "    lastAccessTime: " + toIndentedString(lastAccessTime) + "\n" +
                "    lastAccessAddress: " + toIndentedString(lastAccessAddress) + "\n" +
                "    lastAccessUserAgent: " + toIndentedString(lastAccessUserAgent) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
