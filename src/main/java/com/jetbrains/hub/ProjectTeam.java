/*
 * Hub REST API
 * JetBrains Teamware Connector
 *
 * OpenAPI spec version: 2024.2.38971
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.hub;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * ProjectTeam
 */


public class ProjectTeam extends AuthorityHolder {
    @SerializedName("groups")
    private List<UserGroup> groups = null;

    @SerializedName("users")
    private List<User> users = null;

    @SerializedName("ownUsers")
    private List<User> ownUsers = null;

    @SerializedName("project")
    private Project project = null;

    @SerializedName("userCount")
    private Integer userCount = null;

    @SerializedName("organizations")
    private List<Organization> organizations = null;

    public ProjectTeam groups(List<UserGroup> groups) {
        this.groups = groups;
        return this;
    }

    public ProjectTeam addGroupsItem(UserGroup groupsItem) {
        if (this.groups == null) {
            this.groups = new ArrayList<UserGroup>();
        }
        this.groups.add(groupsItem);
        return this;
    }

    /**
     * Get groups
     *
     * @return groups
     **/
    @Schema(description = "")
    public List<UserGroup> getGroups() {
        return groups;
    }

    public void setGroups(List<UserGroup> groups) {
        this.groups = groups;
    }

    public ProjectTeam users(List<User> users) {
        this.users = users;
        return this;
    }

    public ProjectTeam addUsersItem(User usersItem) {
        if (this.users == null) {
            this.users = new ArrayList<User>();
        }
        this.users.add(usersItem);
        return this;
    }

    /**
     * Get users
     *
     * @return users
     **/
    @Schema(description = "")
    public List<User> getUsers() {
        return users;
    }

    public void setUsers(List<User> users) {
        this.users = users;
    }

    public ProjectTeam ownUsers(List<User> ownUsers) {
        this.ownUsers = ownUsers;
        return this;
    }

    public ProjectTeam addOwnUsersItem(User ownUsersItem) {
        if (this.ownUsers == null) {
            this.ownUsers = new ArrayList<User>();
        }
        this.ownUsers.add(ownUsersItem);
        return this;
    }

    /**
     * Get ownUsers
     *
     * @return ownUsers
     **/
    @Schema(description = "")
    public List<User> getOwnUsers() {
        return ownUsers;
    }

    public void setOwnUsers(List<User> ownUsers) {
        this.ownUsers = ownUsers;
    }

    public ProjectTeam project(Project project) {
        this.project = project;
        return this;
    }

    /**
     * Get project
     *
     * @return project
     **/
    @Schema(description = "")
    public Project getProject() {
        return project;
    }

    public void setProject(Project project) {
        this.project = project;
    }

    public ProjectTeam userCount(Integer userCount) {
        this.userCount = userCount;
        return this;
    }

    /**
     * Get userCount
     *
     * @return userCount
     **/
    @Schema(description = "")
    public Integer getUserCount() {
        return userCount;
    }

    public void setUserCount(Integer userCount) {
        this.userCount = userCount;
    }

    public ProjectTeam organizations(List<Organization> organizations) {
        this.organizations = organizations;
        return this;
    }

    public ProjectTeam addOrganizationsItem(Organization organizationsItem) {
        if (this.organizations == null) {
            this.organizations = new ArrayList<Organization>();
        }
        this.organizations.add(organizationsItem);
        return this;
    }

    /**
     * Get organizations
     *
     * @return organizations
     **/
    @Schema(description = "")
    public List<Organization> getOrganizations() {
        return organizations;
    }

    public void setOrganizations(List<Organization> organizations) {
        this.organizations = organizations;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ProjectTeam projectTeam = (ProjectTeam) o;
        return Objects.equals(this.groups, projectTeam.groups) &&
                Objects.equals(this.users, projectTeam.users) &&
                Objects.equals(this.ownUsers, projectTeam.ownUsers) &&
                Objects.equals(this.project, projectTeam.project) &&
                Objects.equals(this.userCount, projectTeam.userCount) &&
                Objects.equals(this.organizations, projectTeam.organizations) &&
                super.equals(o);
    }

    @Override
    public int hashCode() {
        return Objects.hash(groups, users, ownUsers, project, userCount, organizations, super.hashCode());
    }


    @Override
    public String toString() {
        String sb = "class ProjectTeam {\n" +
                "    " + toIndentedString(super.toString()) + "\n" +
                "    groups: " + toIndentedString(groups) + "\n" +
                "    users: " + toIndentedString(users) + "\n" +
                "    ownUsers: " + toIndentedString(ownUsers) + "\n" +
                "    project: " + toIndentedString(project) + "\n" +
                "    userCount: " + toIndentedString(userCount) + "\n" +
                "    organizations: " + toIndentedString(organizations) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
