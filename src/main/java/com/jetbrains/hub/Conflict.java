/*
 * Hub REST API
 * JetBrains Teamware Connector
 *
 * OpenAPI spec version: 2024.2.38971
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.hub;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * Conflict
 */


public class Conflict {
    @SerializedName("id")
    private String id = null;

    @SerializedName("type")
    private String type = null;

    @SerializedName("local")
    private Info local = null;

    @SerializedName("remote")
    private Info remote = null;

    @SerializedName("resolution")
    private Resolution resolution = null;

    @SerializedName("matches")
    private Info matches = null;

    public Conflict id(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public Conflict type(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     **/
    @Schema(description = "")
    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public Conflict local(Info local) {
        this.local = local;
        return this;
    }

    /**
     * Get local
     *
     * @return local
     **/
    @Schema(description = "")
    public Info getLocal() {
        return local;
    }

    public void setLocal(Info local) {
        this.local = local;
    }

    public Conflict remote(Info remote) {
        this.remote = remote;
        return this;
    }

    /**
     * Get remote
     *
     * @return remote
     **/
    @Schema(description = "")
    public Info getRemote() {
        return remote;
    }

    public void setRemote(Info remote) {
        this.remote = remote;
    }

    public Conflict resolution(Resolution resolution) {
        this.resolution = resolution;
        return this;
    }

    /**
     * Get resolution
     *
     * @return resolution
     **/
    @Schema(description = "")
    public Resolution getResolution() {
        return resolution;
    }

    public void setResolution(Resolution resolution) {
        this.resolution = resolution;
    }

    public Conflict matches(Info matches) {
        this.matches = matches;
        return this;
    }

    /**
     * Get matches
     *
     * @return matches
     **/
    @Schema(description = "")
    public Info getMatches() {
        return matches;
    }

    public void setMatches(Info matches) {
        this.matches = matches;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Conflict conflict = (Conflict) o;
        return Objects.equals(this.id, conflict.id) &&
                Objects.equals(this.type, conflict.type) &&
                Objects.equals(this.local, conflict.local) &&
                Objects.equals(this.remote, conflict.remote) &&
                Objects.equals(this.resolution, conflict.resolution) &&
                Objects.equals(this.matches, conflict.matches);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, type, local, remote, resolution, matches);
    }


    @Override
    public String toString() {

        String sb = "class Conflict {\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    type: " + toIndentedString(type) + "\n" +
                "    local: " + toIndentedString(local) + "\n" +
                "    remote: " + toIndentedString(remote) + "\n" +
                "    resolution: " + toIndentedString(resolution) + "\n" +
                "    matches: " + toIndentedString(matches) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
