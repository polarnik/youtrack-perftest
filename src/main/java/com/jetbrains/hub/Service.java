/*
 * Hub REST API
 * JetBrains Teamware Connector
 *
 * OpenAPI spec version: 2024.2.38971
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.hub;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Service
 */


public class Service extends AuthorityHolder {
    @SerializedName("key")
    private String key = null;

    @SerializedName("homeUrl")
    private String homeUrl = null;

    @SerializedName("baseUrls")
    private List<String> baseUrls = null;

    @SerializedName("userUriPattern")
    private String userUriPattern = null;

    @SerializedName("groupUriPattern")
    private String groupUriPattern = null;

    @SerializedName("redirectUris")
    private List<String> redirectUris = null;

    @SerializedName("untrustedRedirectUris")
    private List<UntrustedRedirectURI> untrustedRedirectUris = null;

    @SerializedName("applicationName")
    private String applicationName = null;

    @SerializedName("vendor")
    private String vendor = null;

    @SerializedName("releaseDate")
    private Long releaseDate = null;

    @SerializedName("version")
    private String version = null;

    @SerializedName("iconUrl")
    private String iconUrl = null;

    @SerializedName("resources")
    private List<Resource> resources = null;

    @SerializedName("permissions")
    private List<Permission> permissions = null;

    @SerializedName("defaultRoles")
    private List<Role> defaultRoles = null;

    @SerializedName("viewers")
    private List<AuthorityHolder> viewers = null;

    @SerializedName("licenseSettings")
    private License licenseSettings = null;

    @SerializedName("trusted")
    private Boolean trusted = null;

    @SerializedName("secret")
    private String secret = null;

    @SerializedName("apiVersion")
    private String apiVersion = null;

    public Service key(String key) {
        this.key = key;
        return this;
    }

    /**
     * Get key
     *
     * @return key
     **/
    @Schema(description = "")
    public String getKey() {
        return key;
    }

    public void setKey(String key) {
        this.key = key;
    }

    public Service homeUrl(String homeUrl) {
        this.homeUrl = homeUrl;
        return this;
    }

    /**
     * Get homeUrl
     *
     * @return homeUrl
     **/
    @Schema(description = "")
    public String getHomeUrl() {
        return homeUrl;
    }

    public void setHomeUrl(String homeUrl) {
        this.homeUrl = homeUrl;
    }

    public Service baseUrls(List<String> baseUrls) {
        this.baseUrls = baseUrls;
        return this;
    }

    public Service addBaseUrlsItem(String baseUrlsItem) {
        if (this.baseUrls == null) {
            this.baseUrls = new ArrayList<String>();
        }
        this.baseUrls.add(baseUrlsItem);
        return this;
    }

    /**
     * Get baseUrls
     *
     * @return baseUrls
     **/
    @Schema(description = "")
    public List<String> getBaseUrls() {
        return baseUrls;
    }

    public void setBaseUrls(List<String> baseUrls) {
        this.baseUrls = baseUrls;
    }

    public Service userUriPattern(String userUriPattern) {
        this.userUriPattern = userUriPattern;
        return this;
    }

    /**
     * Get userUriPattern
     *
     * @return userUriPattern
     **/
    @Schema(description = "")
    public String getUserUriPattern() {
        return userUriPattern;
    }

    public void setUserUriPattern(String userUriPattern) {
        this.userUriPattern = userUriPattern;
    }

    public Service groupUriPattern(String groupUriPattern) {
        this.groupUriPattern = groupUriPattern;
        return this;
    }

    /**
     * Get groupUriPattern
     *
     * @return groupUriPattern
     **/
    @Schema(description = "")
    public String getGroupUriPattern() {
        return groupUriPattern;
    }

    public void setGroupUriPattern(String groupUriPattern) {
        this.groupUriPattern = groupUriPattern;
    }

    public Service redirectUris(List<String> redirectUris) {
        this.redirectUris = redirectUris;
        return this;
    }

    public Service addRedirectUrisItem(String redirectUrisItem) {
        if (this.redirectUris == null) {
            this.redirectUris = new ArrayList<String>();
        }
        this.redirectUris.add(redirectUrisItem);
        return this;
    }

    /**
     * Get redirectUris
     *
     * @return redirectUris
     **/
    @Schema(description = "")
    public List<String> getRedirectUris() {
        return redirectUris;
    }

    public void setRedirectUris(List<String> redirectUris) {
        this.redirectUris = redirectUris;
    }

    public Service untrustedRedirectUris(List<UntrustedRedirectURI> untrustedRedirectUris) {
        this.untrustedRedirectUris = untrustedRedirectUris;
        return this;
    }

    public Service addUntrustedRedirectUrisItem(UntrustedRedirectURI untrustedRedirectUrisItem) {
        if (this.untrustedRedirectUris == null) {
            this.untrustedRedirectUris = new ArrayList<UntrustedRedirectURI>();
        }
        this.untrustedRedirectUris.add(untrustedRedirectUrisItem);
        return this;
    }

    /**
     * Get untrustedRedirectUris
     *
     * @return untrustedRedirectUris
     **/
    @Schema(description = "")
    public List<UntrustedRedirectURI> getUntrustedRedirectUris() {
        return untrustedRedirectUris;
    }

    public void setUntrustedRedirectUris(List<UntrustedRedirectURI> untrustedRedirectUris) {
        this.untrustedRedirectUris = untrustedRedirectUris;
    }

    public Service applicationName(String applicationName) {
        this.applicationName = applicationName;
        return this;
    }

    /**
     * Get applicationName
     *
     * @return applicationName
     **/
    @Schema(description = "")
    public String getApplicationName() {
        return applicationName;
    }

    public void setApplicationName(String applicationName) {
        this.applicationName = applicationName;
    }

    public Service vendor(String vendor) {
        this.vendor = vendor;
        return this;
    }

    /**
     * Get vendor
     *
     * @return vendor
     **/
    @Schema(description = "")
    public String getVendor() {
        return vendor;
    }

    public void setVendor(String vendor) {
        this.vendor = vendor;
    }

    public Service releaseDate(Long releaseDate) {
        this.releaseDate = releaseDate;
        return this;
    }

    /**
     * Get releaseDate
     *
     * @return releaseDate
     **/
    @Schema(description = "")
    public Long getReleaseDate() {
        return releaseDate;
    }

    public void setReleaseDate(Long releaseDate) {
        this.releaseDate = releaseDate;
    }

    public Service version(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get version
     *
     * @return version
     **/
    @Schema(description = "")
    public String getVersion() {
        return version;
    }

    public void setVersion(String version) {
        this.version = version;
    }

    public Service iconUrl(String iconUrl) {
        this.iconUrl = iconUrl;
        return this;
    }

    /**
     * Get iconUrl
     *
     * @return iconUrl
     **/
    @Schema(description = "")
    public String getIconUrl() {
        return iconUrl;
    }

    public void setIconUrl(String iconUrl) {
        this.iconUrl = iconUrl;
    }

    public Service resources(List<Resource> resources) {
        this.resources = resources;
        return this;
    }

    public Service addResourcesItem(Resource resourcesItem) {
        if (this.resources == null) {
            this.resources = new ArrayList<Resource>();
        }
        this.resources.add(resourcesItem);
        return this;
    }

    /**
     * Get resources
     *
     * @return resources
     **/
    @Schema(description = "")
    public List<Resource> getResources() {
        return resources;
    }

    public void setResources(List<Resource> resources) {
        this.resources = resources;
    }

    public Service permissions(List<Permission> permissions) {
        this.permissions = permissions;
        return this;
    }

    public Service addPermissionsItem(Permission permissionsItem) {
        if (this.permissions == null) {
            this.permissions = new ArrayList<Permission>();
        }
        this.permissions.add(permissionsItem);
        return this;
    }

    /**
     * Get permissions
     *
     * @return permissions
     **/
    @Schema(description = "")
    public List<Permission> getPermissions() {
        return permissions;
    }

    public void setPermissions(List<Permission> permissions) {
        this.permissions = permissions;
    }

    public Service defaultRoles(List<Role> defaultRoles) {
        this.defaultRoles = defaultRoles;
        return this;
    }

    public Service addDefaultRolesItem(Role defaultRolesItem) {
        if (this.defaultRoles == null) {
            this.defaultRoles = new ArrayList<Role>();
        }
        this.defaultRoles.add(defaultRolesItem);
        return this;
    }

    /**
     * Get defaultRoles
     *
     * @return defaultRoles
     **/
    @Schema(description = "")
    public List<Role> getDefaultRoles() {
        return defaultRoles;
    }

    public void setDefaultRoles(List<Role> defaultRoles) {
        this.defaultRoles = defaultRoles;
    }

    public Service viewers(List<AuthorityHolder> viewers) {
        this.viewers = viewers;
        return this;
    }

    public Service addViewersItem(AuthorityHolder viewersItem) {
        if (this.viewers == null) {
            this.viewers = new ArrayList<AuthorityHolder>();
        }
        this.viewers.add(viewersItem);
        return this;
    }

    /**
     * Get viewers
     *
     * @return viewers
     **/
    @Schema(description = "")
    public List<AuthorityHolder> getViewers() {
        return viewers;
    }

    public void setViewers(List<AuthorityHolder> viewers) {
        this.viewers = viewers;
    }

    public Service licenseSettings(License licenseSettings) {
        this.licenseSettings = licenseSettings;
        return this;
    }

    /**
     * Get licenseSettings
     *
     * @return licenseSettings
     **/
    @Schema(description = "")
    public License getLicenseSettings() {
        return licenseSettings;
    }

    public void setLicenseSettings(License licenseSettings) {
        this.licenseSettings = licenseSettings;
    }

    public Service trusted(Boolean trusted) {
        this.trusted = trusted;
        return this;
    }

    /**
     * Get trusted
     *
     * @return trusted
     **/
    @Schema(description = "")
    public Boolean isTrusted() {
        return trusted;
    }

    public void setTrusted(Boolean trusted) {
        this.trusted = trusted;
    }

    public Service secret(String secret) {
        this.secret = secret;
        return this;
    }

    /**
     * Get secret
     *
     * @return secret
     **/
    @Schema(description = "")
    public String getSecret() {
        return secret;
    }

    public void setSecret(String secret) {
        this.secret = secret;
    }

    public Service apiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
        return this;
    }

    /**
     * Get apiVersion
     *
     * @return apiVersion
     **/
    @Schema(description = "")
    public String getApiVersion() {
        return apiVersion;
    }

    public void setApiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Service service = (Service) o;
        return Objects.equals(this.key, service.key) &&
                Objects.equals(this.homeUrl, service.homeUrl) &&
                Objects.equals(this.baseUrls, service.baseUrls) &&
                Objects.equals(this.userUriPattern, service.userUriPattern) &&
                Objects.equals(this.groupUriPattern, service.groupUriPattern) &&
                Objects.equals(this.redirectUris, service.redirectUris) &&
                Objects.equals(this.untrustedRedirectUris, service.untrustedRedirectUris) &&
                Objects.equals(this.applicationName, service.applicationName) &&
                Objects.equals(this.vendor, service.vendor) &&
                Objects.equals(this.releaseDate, service.releaseDate) &&
                Objects.equals(this.version, service.version) &&
                Objects.equals(this.iconUrl, service.iconUrl) &&
                Objects.equals(this.resources, service.resources) &&
                Objects.equals(this.permissions, service.permissions) &&
                Objects.equals(this.defaultRoles, service.defaultRoles) &&
                Objects.equals(this.viewers, service.viewers) &&
                Objects.equals(this.licenseSettings, service.licenseSettings) &&
                Objects.equals(this.trusted, service.trusted) &&
                Objects.equals(this.secret, service.secret) &&
                Objects.equals(this.apiVersion, service.apiVersion) &&
                super.equals(o);
    }

    @Override
    public int hashCode() {
        return Objects.hash(key, homeUrl, baseUrls, userUriPattern, groupUriPattern, redirectUris, untrustedRedirectUris, applicationName, vendor, releaseDate, version, iconUrl, resources, permissions, defaultRoles, viewers, licenseSettings, trusted, secret, apiVersion, super.hashCode());
    }


    @Override
    public String toString() {
        String sb = "class Service {\n" +
                "    " + toIndentedString(super.toString()) + "\n" +
                "    key: " + toIndentedString(key) + "\n" +
                "    homeUrl: " + toIndentedString(homeUrl) + "\n" +
                "    baseUrls: " + toIndentedString(baseUrls) + "\n" +
                "    userUriPattern: " + toIndentedString(userUriPattern) + "\n" +
                "    groupUriPattern: " + toIndentedString(groupUriPattern) + "\n" +
                "    redirectUris: " + toIndentedString(redirectUris) + "\n" +
                "    untrustedRedirectUris: " + toIndentedString(untrustedRedirectUris) + "\n" +
                "    applicationName: " + toIndentedString(applicationName) + "\n" +
                "    vendor: " + toIndentedString(vendor) + "\n" +
                "    releaseDate: " + toIndentedString(releaseDate) + "\n" +
                "    version: " + toIndentedString(version) + "\n" +
                "    iconUrl: " + toIndentedString(iconUrl) + "\n" +
                "    resources: " + toIndentedString(resources) + "\n" +
                "    permissions: " + toIndentedString(permissions) + "\n" +
                "    defaultRoles: " + toIndentedString(defaultRoles) + "\n" +
                "    viewers: " + toIndentedString(viewers) + "\n" +
                "    licenseSettings: " + toIndentedString(licenseSettings) + "\n" +
                "    trusted: " + toIndentedString(trusted) + "\n" +
                "    secret: " + toIndentedString(secret) + "\n" +
                "    apiVersion: " + toIndentedString(apiVersion) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
