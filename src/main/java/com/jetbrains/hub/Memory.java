/*
 * Hub REST API
 * JetBrains Teamware Connector
 *
 * OpenAPI spec version: 2024.2.38971
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.hub;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * Memory
 */


public class Memory {
    @SerializedName("available")
    private Long available = null;

    @SerializedName("allocated")
    private Long allocated = null;

    @SerializedName("used")
    private Long used = null;

    public Memory available(Long available) {
        this.available = available;
        return this;
    }

    /**
     * Get available
     *
     * @return available
     **/
    @Schema(description = "")
    public Long getAvailable() {
        return available;
    }

    public void setAvailable(Long available) {
        this.available = available;
    }

    public Memory allocated(Long allocated) {
        this.allocated = allocated;
        return this;
    }

    /**
     * Get allocated
     *
     * @return allocated
     **/
    @Schema(description = "")
    public Long getAllocated() {
        return allocated;
    }

    public void setAllocated(Long allocated) {
        this.allocated = allocated;
    }

    public Memory used(Long used) {
        this.used = used;
        return this;
    }

    /**
     * Get used
     *
     * @return used
     **/
    @Schema(description = "")
    public Long getUsed() {
        return used;
    }

    public void setUsed(Long used) {
        this.used = used;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Memory memory = (Memory) o;
        return Objects.equals(this.available, memory.available) &&
                Objects.equals(this.allocated, memory.allocated) &&
                Objects.equals(this.used, memory.used);
    }

    @Override
    public int hashCode() {
        return Objects.hash(available, allocated, used);
    }


    @Override
    public String toString() {

        String sb = "class Memory {\n" +
                "    available: " + toIndentedString(available) + "\n" +
                "    allocated: " + toIndentedString(allocated) + "\n" +
                "    used: " + toIndentedString(used) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
