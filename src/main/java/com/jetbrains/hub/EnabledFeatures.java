/*
 * Hub REST API
 * JetBrains Teamware Connector
 *
 * OpenAPI spec version: 2024.2.38971
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.hub;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * EnabledFeatures
 */


public class EnabledFeatures {
    @SerializedName("enabled")
    private List<String> enabled = null;

    public EnabledFeatures enabled(List<String> enabled) {
        this.enabled = enabled;
        return this;
    }

    public EnabledFeatures addEnabledItem(String enabledItem) {
        if (this.enabled == null) {
            this.enabled = new ArrayList<String>();
        }
        this.enabled.add(enabledItem);
        return this;
    }

    /**
     * Get enabled
     *
     * @return enabled
     **/
    @Schema(description = "")
    public List<String> getEnabled() {
        return enabled;
    }

    public void setEnabled(List<String> enabled) {
        this.enabled = enabled;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        EnabledFeatures enabledFeatures = (EnabledFeatures) o;
        return Objects.equals(this.enabled, enabledFeatures.enabled);
    }

    @Override
    public int hashCode() {
        return Objects.hash(enabled);
    }


    @Override
    public String toString() {

        String sb = "class EnabledFeatures {\n" +
                "    enabled: " + toIndentedString(enabled) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
