/*
 * Hub REST API
 * JetBrains Teamware Connector
 *
 * OpenAPI spec version: 2024.2.38971
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.hub;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Organization
 */


public class Organization {
    @SerializedName("id")
    private String id = null;

    @SerializedName("aliases")
    private List<Alias> aliases = null;

    @SerializedName("key")
    private String key = null;

    @SerializedName("name")
    private String name = null;

    @SerializedName("description")
    private String description = null;

    @SerializedName("emailDomain")
    private String emailDomain = null;

    @SerializedName("creationTime")
    private Long creationTime = null;

    @SerializedName("projects")
    private List<Project> projects = null;

    @SerializedName("ownUsers")
    private List<User> ownUsers = null;

    @SerializedName("users")
    private List<User> users = null;

    @SerializedName("allUsers")
    private Boolean allUsers = null;

    @SerializedName("groups")
    private List<UserGroup> groups = null;

    @SerializedName("teams")
    private List<ProjectTeam> teams = null;

    @SerializedName("projectsCount")
    private Integer projectsCount = null;

    @SerializedName("iconUrl")
    private String iconUrl = null;

    @SerializedName("icon")
    private String icon = null;

    @SerializedName("defaultIcon")
    private Boolean defaultIcon = null;

    @SerializedName("organizationRoles")
    private List<OrganizationRole> organizationRoles = null;

    public Organization id(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public Organization aliases(List<Alias> aliases) {
        this.aliases = aliases;
        return this;
    }

    public Organization addAliasesItem(Alias aliasesItem) {
        if (this.aliases == null) {
            this.aliases = new ArrayList<Alias>();
        }
        this.aliases.add(aliasesItem);
        return this;
    }

    /**
     * Get aliases
     *
     * @return aliases
     **/
    @Schema(description = "")
    public List<Alias> getAliases() {
        return aliases;
    }

    public void setAliases(List<Alias> aliases) {
        this.aliases = aliases;
    }

    public Organization key(String key) {
        this.key = key;
        return this;
    }

    /**
     * Get key
     *
     * @return key
     **/
    @Schema(description = "")
    public String getKey() {
        return key;
    }

    public void setKey(String key) {
        this.key = key;
    }

    public Organization name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @Schema(description = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Organization description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     *
     * @return description
     **/
    @Schema(description = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Organization emailDomain(String emailDomain) {
        this.emailDomain = emailDomain;
        return this;
    }

    /**
     * Get emailDomain
     *
     * @return emailDomain
     **/
    @Schema(description = "")
    public String getEmailDomain() {
        return emailDomain;
    }

    public void setEmailDomain(String emailDomain) {
        this.emailDomain = emailDomain;
    }

    public Organization creationTime(Long creationTime) {
        this.creationTime = creationTime;
        return this;
    }

    /**
     * Get creationTime
     *
     * @return creationTime
     **/
    @Schema(description = "")
    public Long getCreationTime() {
        return creationTime;
    }

    public void setCreationTime(Long creationTime) {
        this.creationTime = creationTime;
    }

    public Organization projects(List<Project> projects) {
        this.projects = projects;
        return this;
    }

    public Organization addProjectsItem(Project projectsItem) {
        if (this.projects == null) {
            this.projects = new ArrayList<Project>();
        }
        this.projects.add(projectsItem);
        return this;
    }

    /**
     * Get projects
     *
     * @return projects
     **/
    @Schema(description = "")
    public List<Project> getProjects() {
        return projects;
    }

    public void setProjects(List<Project> projects) {
        this.projects = projects;
    }

    public Organization ownUsers(List<User> ownUsers) {
        this.ownUsers = ownUsers;
        return this;
    }

    public Organization addOwnUsersItem(User ownUsersItem) {
        if (this.ownUsers == null) {
            this.ownUsers = new ArrayList<User>();
        }
        this.ownUsers.add(ownUsersItem);
        return this;
    }

    /**
     * Get ownUsers
     *
     * @return ownUsers
     **/
    @Schema(description = "")
    public List<User> getOwnUsers() {
        return ownUsers;
    }

    public void setOwnUsers(List<User> ownUsers) {
        this.ownUsers = ownUsers;
    }

    public Organization users(List<User> users) {
        this.users = users;
        return this;
    }

    public Organization addUsersItem(User usersItem) {
        if (this.users == null) {
            this.users = new ArrayList<User>();
        }
        this.users.add(usersItem);
        return this;
    }

    /**
     * Get users
     *
     * @return users
     **/
    @Schema(description = "")
    public List<User> getUsers() {
        return users;
    }

    public void setUsers(List<User> users) {
        this.users = users;
    }

    public Organization allUsers(Boolean allUsers) {
        this.allUsers = allUsers;
        return this;
    }

    /**
     * Get allUsers
     *
     * @return allUsers
     **/
    @Schema(description = "")
    public Boolean isAllUsers() {
        return allUsers;
    }

    public void setAllUsers(Boolean allUsers) {
        this.allUsers = allUsers;
    }

    public Organization groups(List<UserGroup> groups) {
        this.groups = groups;
        return this;
    }

    public Organization addGroupsItem(UserGroup groupsItem) {
        if (this.groups == null) {
            this.groups = new ArrayList<UserGroup>();
        }
        this.groups.add(groupsItem);
        return this;
    }

    /**
     * Get groups
     *
     * @return groups
     **/
    @Schema(description = "")
    public List<UserGroup> getGroups() {
        return groups;
    }

    public void setGroups(List<UserGroup> groups) {
        this.groups = groups;
    }

    public Organization teams(List<ProjectTeam> teams) {
        this.teams = teams;
        return this;
    }

    public Organization addTeamsItem(ProjectTeam teamsItem) {
        if (this.teams == null) {
            this.teams = new ArrayList<ProjectTeam>();
        }
        this.teams.add(teamsItem);
        return this;
    }

    /**
     * Get teams
     *
     * @return teams
     **/
    @Schema(description = "")
    public List<ProjectTeam> getTeams() {
        return teams;
    }

    public void setTeams(List<ProjectTeam> teams) {
        this.teams = teams;
    }

    public Organization projectsCount(Integer projectsCount) {
        this.projectsCount = projectsCount;
        return this;
    }

    /**
     * Get projectsCount
     *
     * @return projectsCount
     **/
    @Schema(description = "")
    public Integer getProjectsCount() {
        return projectsCount;
    }

    public void setProjectsCount(Integer projectsCount) {
        this.projectsCount = projectsCount;
    }

    public Organization iconUrl(String iconUrl) {
        this.iconUrl = iconUrl;
        return this;
    }

    /**
     * Get iconUrl
     *
     * @return iconUrl
     **/
    @Schema(description = "")
    public String getIconUrl() {
        return iconUrl;
    }

    public void setIconUrl(String iconUrl) {
        this.iconUrl = iconUrl;
    }

    public Organization icon(String icon) {
        this.icon = icon;
        return this;
    }

    /**
     * Get icon
     *
     * @return icon
     **/
    @Schema(description = "")
    public String getIcon() {
        return icon;
    }

    public void setIcon(String icon) {
        this.icon = icon;
    }

    public Organization defaultIcon(Boolean defaultIcon) {
        this.defaultIcon = defaultIcon;
        return this;
    }

    /**
     * Get defaultIcon
     *
     * @return defaultIcon
     **/
    @Schema(description = "")
    public Boolean isDefaultIcon() {
        return defaultIcon;
    }

    public void setDefaultIcon(Boolean defaultIcon) {
        this.defaultIcon = defaultIcon;
    }

    public Organization organizationRoles(List<OrganizationRole> organizationRoles) {
        this.organizationRoles = organizationRoles;
        return this;
    }

    public Organization addOrganizationRolesItem(OrganizationRole organizationRolesItem) {
        if (this.organizationRoles == null) {
            this.organizationRoles = new ArrayList<OrganizationRole>();
        }
        this.organizationRoles.add(organizationRolesItem);
        return this;
    }

    /**
     * Get organizationRoles
     *
     * @return organizationRoles
     **/
    @Schema(description = "")
    public List<OrganizationRole> getOrganizationRoles() {
        return organizationRoles;
    }

    public void setOrganizationRoles(List<OrganizationRole> organizationRoles) {
        this.organizationRoles = organizationRoles;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Organization organization = (Organization) o;
        return Objects.equals(this.id, organization.id) &&
                Objects.equals(this.aliases, organization.aliases) &&
                Objects.equals(this.key, organization.key) &&
                Objects.equals(this.name, organization.name) &&
                Objects.equals(this.description, organization.description) &&
                Objects.equals(this.emailDomain, organization.emailDomain) &&
                Objects.equals(this.creationTime, organization.creationTime) &&
                Objects.equals(this.projects, organization.projects) &&
                Objects.equals(this.ownUsers, organization.ownUsers) &&
                Objects.equals(this.users, organization.users) &&
                Objects.equals(this.allUsers, organization.allUsers) &&
                Objects.equals(this.groups, organization.groups) &&
                Objects.equals(this.teams, organization.teams) &&
                Objects.equals(this.projectsCount, organization.projectsCount) &&
                Objects.equals(this.iconUrl, organization.iconUrl) &&
                Objects.equals(this.icon, organization.icon) &&
                Objects.equals(this.defaultIcon, organization.defaultIcon) &&
                Objects.equals(this.organizationRoles, organization.organizationRoles);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, aliases, key, name, description, emailDomain, creationTime, projects, ownUsers, users, allUsers, groups, teams, projectsCount, iconUrl, icon, defaultIcon, organizationRoles);
    }


    @Override
    public String toString() {

        String sb = "class Organization {\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    aliases: " + toIndentedString(aliases) + "\n" +
                "    key: " + toIndentedString(key) + "\n" +
                "    name: " + toIndentedString(name) + "\n" +
                "    description: " + toIndentedString(description) + "\n" +
                "    emailDomain: " + toIndentedString(emailDomain) + "\n" +
                "    creationTime: " + toIndentedString(creationTime) + "\n" +
                "    projects: " + toIndentedString(projects) + "\n" +
                "    ownUsers: " + toIndentedString(ownUsers) + "\n" +
                "    users: " + toIndentedString(users) + "\n" +
                "    allUsers: " + toIndentedString(allUsers) + "\n" +
                "    groups: " + toIndentedString(groups) + "\n" +
                "    teams: " + toIndentedString(teams) + "\n" +
                "    projectsCount: " + toIndentedString(projectsCount) + "\n" +
                "    iconUrl: " + toIndentedString(iconUrl) + "\n" +
                "    icon: " + toIndentedString(icon) + "\n" +
                "    defaultIcon: " + toIndentedString(defaultIcon) + "\n" +
                "    organizationRoles: " + toIndentedString(organizationRoles) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
