/*
 * Hub REST API
 * JetBrains Teamware Connector
 *
 * OpenAPI spec version: 2024.2.38971
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.hub;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * ModelImport
 */


public class ModelImport {
    @SerializedName("id")
    private String id = null;

    @SerializedName("adminConsoleUrl")
    private String adminConsoleUrl = null;

    @SerializedName("remoteUrl")
    private String remoteUrl = null;

    @SerializedName("localUrl")
    private String localUrl = null;

    @SerializedName("phase")
    private ImportPhase phase = null;

    @SerializedName("conflicts")
    private List<Conflict> conflicts = null;

    public ModelImport id(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public ModelImport adminConsoleUrl(String adminConsoleUrl) {
        this.adminConsoleUrl = adminConsoleUrl;
        return this;
    }

    /**
     * Get adminConsoleUrl
     *
     * @return adminConsoleUrl
     **/
    @Schema(description = "")
    public String getAdminConsoleUrl() {
        return adminConsoleUrl;
    }

    public void setAdminConsoleUrl(String adminConsoleUrl) {
        this.adminConsoleUrl = adminConsoleUrl;
    }

    public ModelImport remoteUrl(String remoteUrl) {
        this.remoteUrl = remoteUrl;
        return this;
    }

    /**
     * Get remoteUrl
     *
     * @return remoteUrl
     **/
    @Schema(description = "")
    public String getRemoteUrl() {
        return remoteUrl;
    }

    public void setRemoteUrl(String remoteUrl) {
        this.remoteUrl = remoteUrl;
    }

    public ModelImport localUrl(String localUrl) {
        this.localUrl = localUrl;
        return this;
    }

    /**
     * Get localUrl
     *
     * @return localUrl
     **/
    @Schema(description = "")
    public String getLocalUrl() {
        return localUrl;
    }

    public void setLocalUrl(String localUrl) {
        this.localUrl = localUrl;
    }

    public ModelImport phase(ImportPhase phase) {
        this.phase = phase;
        return this;
    }

    /**
     * Get phase
     *
     * @return phase
     **/
    @Schema(description = "")
    public ImportPhase getPhase() {
        return phase;
    }

    public void setPhase(ImportPhase phase) {
        this.phase = phase;
    }

    public ModelImport conflicts(List<Conflict> conflicts) {
        this.conflicts = conflicts;
        return this;
    }

    public ModelImport addConflictsItem(Conflict conflictsItem) {
        if (this.conflicts == null) {
            this.conflicts = new ArrayList<Conflict>();
        }
        this.conflicts.add(conflictsItem);
        return this;
    }

    /**
     * Get conflicts
     *
     * @return conflicts
     **/
    @Schema(description = "")
    public List<Conflict> getConflicts() {
        return conflicts;
    }

    public void setConflicts(List<Conflict> conflicts) {
        this.conflicts = conflicts;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ModelImport _import = (ModelImport) o;
        return Objects.equals(this.id, _import.id) &&
                Objects.equals(this.adminConsoleUrl, _import.adminConsoleUrl) &&
                Objects.equals(this.remoteUrl, _import.remoteUrl) &&
                Objects.equals(this.localUrl, _import.localUrl) &&
                Objects.equals(this.phase, _import.phase) &&
                Objects.equals(this.conflicts, _import.conflicts);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, adminConsoleUrl, remoteUrl, localUrl, phase, conflicts);
    }


    @Override
    public String toString() {

        String sb = "class ModelImport {\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    adminConsoleUrl: " + toIndentedString(adminConsoleUrl) + "\n" +
                "    remoteUrl: " + toIndentedString(remoteUrl) + "\n" +
                "    localUrl: " + toIndentedString(localUrl) + "\n" +
                "    phase: " + toIndentedString(phase) + "\n" +
                "    conflicts: " + toIndentedString(conflicts) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
