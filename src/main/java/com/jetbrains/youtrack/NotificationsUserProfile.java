/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2024.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.youtrack;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * NotificationsUserProfile
 */


public class NotificationsUserProfile {
    @SerializedName("id")
    private final String id = null;

    @SerializedName("notifyOnOwnChanges")
    private Boolean notifyOnOwnChanges = null;

    @SerializedName("emailNotificationsEnabled")
    private Boolean emailNotificationsEnabled = null;

    @SerializedName("mentionNotificationsEnabled")
    private Boolean mentionNotificationsEnabled = null;

    @SerializedName("duplicateClusterNotificationsEnabled")
    private Boolean duplicateClusterNotificationsEnabled = null;

    @SerializedName("mailboxIntegrationNotificationsEnabled")
    private Boolean mailboxIntegrationNotificationsEnabled = null;

    @SerializedName("usePlainTextEmails")
    private Boolean usePlainTextEmails = null;

    @SerializedName("autoWatchOnComment")
    private Boolean autoWatchOnComment = null;

    @SerializedName("autoWatchOnCreate")
    private Boolean autoWatchOnCreate = null;

    @SerializedName("autoWatchOnVote")
    private Boolean autoWatchOnVote = null;

    @SerializedName("autoWatchOnUpdate")
    private Boolean autoWatchOnUpdate = null;

    @SerializedName("$type")
    private String $type = null;

    public NotificationsUserProfile() {
        this.$type = this.getClass().getSimpleName();
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public String getId() {
        return id;
    }

    public NotificationsUserProfile notifyOnOwnChanges(Boolean notifyOnOwnChanges) {
        this.notifyOnOwnChanges = notifyOnOwnChanges;
        return this;
    }

    /**
     * Get notifyOnOwnChanges
     *
     * @return notifyOnOwnChanges
     **/
    @Schema(description = "")
    public Boolean isNotifyOnOwnChanges() {
        return notifyOnOwnChanges;
    }

    public void setNotifyOnOwnChanges(Boolean notifyOnOwnChanges) {
        this.notifyOnOwnChanges = notifyOnOwnChanges;
    }

    public NotificationsUserProfile emailNotificationsEnabled(Boolean emailNotificationsEnabled) {
        this.emailNotificationsEnabled = emailNotificationsEnabled;
        return this;
    }

    /**
     * Get emailNotificationsEnabled
     *
     * @return emailNotificationsEnabled
     **/
    @Schema(description = "")
    public Boolean isEmailNotificationsEnabled() {
        return emailNotificationsEnabled;
    }

    public void setEmailNotificationsEnabled(Boolean emailNotificationsEnabled) {
        this.emailNotificationsEnabled = emailNotificationsEnabled;
    }

    public NotificationsUserProfile mentionNotificationsEnabled(Boolean mentionNotificationsEnabled) {
        this.mentionNotificationsEnabled = mentionNotificationsEnabled;
        return this;
    }

    /**
     * Get mentionNotificationsEnabled
     *
     * @return mentionNotificationsEnabled
     **/
    @Schema(description = "")
    public Boolean isMentionNotificationsEnabled() {
        return mentionNotificationsEnabled;
    }

    public void setMentionNotificationsEnabled(Boolean mentionNotificationsEnabled) {
        this.mentionNotificationsEnabled = mentionNotificationsEnabled;
    }

    public NotificationsUserProfile duplicateClusterNotificationsEnabled(Boolean duplicateClusterNotificationsEnabled) {
        this.duplicateClusterNotificationsEnabled = duplicateClusterNotificationsEnabled;
        return this;
    }

    /**
     * Get duplicateClusterNotificationsEnabled
     *
     * @return duplicateClusterNotificationsEnabled
     **/
    @Schema(description = "")
    public Boolean isDuplicateClusterNotificationsEnabled() {
        return duplicateClusterNotificationsEnabled;
    }

    public void setDuplicateClusterNotificationsEnabled(Boolean duplicateClusterNotificationsEnabled) {
        this.duplicateClusterNotificationsEnabled = duplicateClusterNotificationsEnabled;
    }

    public NotificationsUserProfile mailboxIntegrationNotificationsEnabled(Boolean mailboxIntegrationNotificationsEnabled) {
        this.mailboxIntegrationNotificationsEnabled = mailboxIntegrationNotificationsEnabled;
        return this;
    }

    /**
     * Get mailboxIntegrationNotificationsEnabled
     *
     * @return mailboxIntegrationNotificationsEnabled
     **/
    @Schema(description = "")
    public Boolean isMailboxIntegrationNotificationsEnabled() {
        return mailboxIntegrationNotificationsEnabled;
    }

    public void setMailboxIntegrationNotificationsEnabled(Boolean mailboxIntegrationNotificationsEnabled) {
        this.mailboxIntegrationNotificationsEnabled = mailboxIntegrationNotificationsEnabled;
    }

    public NotificationsUserProfile usePlainTextEmails(Boolean usePlainTextEmails) {
        this.usePlainTextEmails = usePlainTextEmails;
        return this;
    }

    /**
     * Get usePlainTextEmails
     *
     * @return usePlainTextEmails
     **/
    @Schema(description = "")
    public Boolean isUsePlainTextEmails() {
        return usePlainTextEmails;
    }

    public void setUsePlainTextEmails(Boolean usePlainTextEmails) {
        this.usePlainTextEmails = usePlainTextEmails;
    }

    public NotificationsUserProfile autoWatchOnComment(Boolean autoWatchOnComment) {
        this.autoWatchOnComment = autoWatchOnComment;
        return this;
    }

    /**
     * Get autoWatchOnComment
     *
     * @return autoWatchOnComment
     **/
    @Schema(description = "")
    public Boolean isAutoWatchOnComment() {
        return autoWatchOnComment;
    }

    public void setAutoWatchOnComment(Boolean autoWatchOnComment) {
        this.autoWatchOnComment = autoWatchOnComment;
    }

    public NotificationsUserProfile autoWatchOnCreate(Boolean autoWatchOnCreate) {
        this.autoWatchOnCreate = autoWatchOnCreate;
        return this;
    }

    /**
     * Get autoWatchOnCreate
     *
     * @return autoWatchOnCreate
     **/
    @Schema(description = "")
    public Boolean isAutoWatchOnCreate() {
        return autoWatchOnCreate;
    }

    public void setAutoWatchOnCreate(Boolean autoWatchOnCreate) {
        this.autoWatchOnCreate = autoWatchOnCreate;
    }

    public NotificationsUserProfile autoWatchOnVote(Boolean autoWatchOnVote) {
        this.autoWatchOnVote = autoWatchOnVote;
        return this;
    }

    /**
     * Get autoWatchOnVote
     *
     * @return autoWatchOnVote
     **/
    @Schema(description = "")
    public Boolean isAutoWatchOnVote() {
        return autoWatchOnVote;
    }

    public void setAutoWatchOnVote(Boolean autoWatchOnVote) {
        this.autoWatchOnVote = autoWatchOnVote;
    }

    public NotificationsUserProfile autoWatchOnUpdate(Boolean autoWatchOnUpdate) {
        this.autoWatchOnUpdate = autoWatchOnUpdate;
        return this;
    }

    /**
     * Get autoWatchOnUpdate
     *
     * @return autoWatchOnUpdate
     **/
    @Schema(description = "")
    public Boolean isAutoWatchOnUpdate() {
        return autoWatchOnUpdate;
    }

    public void setAutoWatchOnUpdate(Boolean autoWatchOnUpdate) {
        this.autoWatchOnUpdate = autoWatchOnUpdate;
    }

    /**
     * Get $type
     *
     * @return $type
     **/
    @Schema(description = "")
    public String get$Type() {
        return $type;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        NotificationsUserProfile notificationsUserProfile = (NotificationsUserProfile) o;
        return Objects.equals(this.id, notificationsUserProfile.id) &&
                Objects.equals(this.notifyOnOwnChanges, notificationsUserProfile.notifyOnOwnChanges) &&
                Objects.equals(this.emailNotificationsEnabled, notificationsUserProfile.emailNotificationsEnabled) &&
                Objects.equals(this.mentionNotificationsEnabled, notificationsUserProfile.mentionNotificationsEnabled) &&
                Objects.equals(this.duplicateClusterNotificationsEnabled, notificationsUserProfile.duplicateClusterNotificationsEnabled) &&
                Objects.equals(this.mailboxIntegrationNotificationsEnabled, notificationsUserProfile.mailboxIntegrationNotificationsEnabled) &&
                Objects.equals(this.usePlainTextEmails, notificationsUserProfile.usePlainTextEmails) &&
                Objects.equals(this.autoWatchOnComment, notificationsUserProfile.autoWatchOnComment) &&
                Objects.equals(this.autoWatchOnCreate, notificationsUserProfile.autoWatchOnCreate) &&
                Objects.equals(this.autoWatchOnVote, notificationsUserProfile.autoWatchOnVote) &&
                Objects.equals(this.autoWatchOnUpdate, notificationsUserProfile.autoWatchOnUpdate) &&
                Objects.equals(this.$type, notificationsUserProfile.$type);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, notifyOnOwnChanges, emailNotificationsEnabled, mentionNotificationsEnabled, duplicateClusterNotificationsEnabled, mailboxIntegrationNotificationsEnabled, usePlainTextEmails, autoWatchOnComment, autoWatchOnCreate, autoWatchOnVote, autoWatchOnUpdate, $type);
    }


    @Override
    public String toString() {

        String sb = "class NotificationsUserProfile {\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    notifyOnOwnChanges: " + toIndentedString(notifyOnOwnChanges) + "\n" +
                "    emailNotificationsEnabled: " + toIndentedString(emailNotificationsEnabled) + "\n" +
                "    mentionNotificationsEnabled: " + toIndentedString(mentionNotificationsEnabled) + "\n" +
                "    duplicateClusterNotificationsEnabled: " + toIndentedString(duplicateClusterNotificationsEnabled) + "\n" +
                "    mailboxIntegrationNotificationsEnabled: " + toIndentedString(mailboxIntegrationNotificationsEnabled) + "\n" +
                "    usePlainTextEmails: " + toIndentedString(usePlainTextEmails) + "\n" +
                "    autoWatchOnComment: " + toIndentedString(autoWatchOnComment) + "\n" +
                "    autoWatchOnCreate: " + toIndentedString(autoWatchOnCreate) + "\n" +
                "    autoWatchOnVote: " + toIndentedString(autoWatchOnVote) + "\n" +
                "    autoWatchOnUpdate: " + toIndentedString(autoWatchOnUpdate) + "\n" +
                "    $type: " + toIndentedString($type) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
