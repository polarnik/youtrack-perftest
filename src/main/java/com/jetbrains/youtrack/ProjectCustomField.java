/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2024.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.youtrack;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * ProjectCustomField
 */


public class ProjectCustomField {
    @SerializedName("id")
    private final String id = null;

    @SerializedName("field")
    private CustomField field = null;

    @SerializedName("project")
    private Project project = null;

    @SerializedName("canBeEmpty")
    private Boolean canBeEmpty = null;

    @SerializedName("emptyFieldText")
    private String emptyFieldText = null;

    @SerializedName("ordinal")
    private Integer ordinal = null;

    @SerializedName("isPublic")
    private Boolean isPublic = null;

    @SerializedName("hasRunningJob")
    private final Boolean hasRunningJob = null;

    @SerializedName("condition")
    private CustomFieldCondition condition = null;

    @SerializedName("$type")
    private String $type = null;

    public ProjectCustomField() {
        this.$type = this.getClass().getSimpleName();
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public String getId() {
        return id;
    }

    public ProjectCustomField field(CustomField field) {
        this.field = field;
        return this;
    }

    /**
     * Get field
     *
     * @return field
     **/
    @Schema(description = "")
    public CustomField getField() {
        return field;
    }

    public void setField(CustomField field) {
        this.field = field;
    }

    public ProjectCustomField project(Project project) {
        this.project = project;
        return this;
    }

    /**
     * Get project
     *
     * @return project
     **/
    @Schema(description = "")
    public Project getProject() {
        return project;
    }

    public void setProject(Project project) {
        this.project = project;
    }

    public ProjectCustomField canBeEmpty(Boolean canBeEmpty) {
        this.canBeEmpty = canBeEmpty;
        return this;
    }

    /**
     * Get canBeEmpty
     *
     * @return canBeEmpty
     **/
    @Schema(description = "")
    public Boolean isCanBeEmpty() {
        return canBeEmpty;
    }

    public void setCanBeEmpty(Boolean canBeEmpty) {
        this.canBeEmpty = canBeEmpty;
    }

    public ProjectCustomField emptyFieldText(String emptyFieldText) {
        this.emptyFieldText = emptyFieldText;
        return this;
    }

    /**
     * Get emptyFieldText
     *
     * @return emptyFieldText
     **/
    @Schema(description = "")
    public String getEmptyFieldText() {
        return emptyFieldText;
    }

    public void setEmptyFieldText(String emptyFieldText) {
        this.emptyFieldText = emptyFieldText;
    }

    public ProjectCustomField ordinal(Integer ordinal) {
        this.ordinal = ordinal;
        return this;
    }

    /**
     * Get ordinal
     *
     * @return ordinal
     **/
    @Schema(description = "")
    public Integer getOrdinal() {
        return ordinal;
    }

    public void setOrdinal(Integer ordinal) {
        this.ordinal = ordinal;
    }

    public ProjectCustomField isPublic(Boolean isPublic) {
        this.isPublic = isPublic;
        return this;
    }

    /**
     * Get isPublic
     *
     * @return isPublic
     **/
    @Schema(description = "")
    public Boolean isIsPublic() {
        return isPublic;
    }

    public void setIsPublic(Boolean isPublic) {
        this.isPublic = isPublic;
    }

    /**
     * Get hasRunningJob
     *
     * @return hasRunningJob
     **/
    @Schema(description = "")
    public Boolean isHasRunningJob() {
        return hasRunningJob;
    }

    public ProjectCustomField condition(CustomFieldCondition condition) {
        this.condition = condition;
        return this;
    }

    /**
     * Get condition
     *
     * @return condition
     **/
    @Schema(description = "")
    public CustomFieldCondition getCondition() {
        return condition;
    }

    public void setCondition(CustomFieldCondition condition) {
        this.condition = condition;
    }

    /**
     * Get $type
     *
     * @return $type
     **/
    @Schema(description = "")
    public String get$Type() {
        return $type;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ProjectCustomField projectCustomField = (ProjectCustomField) o;
        return Objects.equals(this.id, projectCustomField.id) &&
                Objects.equals(this.field, projectCustomField.field) &&
                Objects.equals(this.project, projectCustomField.project) &&
                Objects.equals(this.canBeEmpty, projectCustomField.canBeEmpty) &&
                Objects.equals(this.emptyFieldText, projectCustomField.emptyFieldText) &&
                Objects.equals(this.ordinal, projectCustomField.ordinal) &&
                Objects.equals(this.isPublic, projectCustomField.isPublic) &&
                Objects.equals(this.hasRunningJob, projectCustomField.hasRunningJob) &&
                Objects.equals(this.condition, projectCustomField.condition) &&
                Objects.equals(this.$type, projectCustomField.$type);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, field, project, canBeEmpty, emptyFieldText, ordinal, isPublic, hasRunningJob, condition, $type);
    }


    @Override
    public String toString() {

        String sb = "class ProjectCustomField {\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    field: " + toIndentedString(field) + "\n" +
                "    project: " + toIndentedString(project) + "\n" +
                "    canBeEmpty: " + toIndentedString(canBeEmpty) + "\n" +
                "    emptyFieldText: " + toIndentedString(emptyFieldText) + "\n" +
                "    ordinal: " + toIndentedString(ordinal) + "\n" +
                "    isPublic: " + toIndentedString(isPublic) + "\n" +
                "    hasRunningJob: " + toIndentedString(hasRunningJob) + "\n" +
                "    condition: " + toIndentedString(condition) + "\n" +
                "    $type: " + toIndentedString($type) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
