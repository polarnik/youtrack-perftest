/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2024.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.youtrack;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Project
 */


public class Project extends IssueFolder {

    @SerializedName("archived")
    protected Boolean archived = null;

    @SerializedName("createdBy")
    protected User createdBy = null;

    @SerializedName("customFields")
    protected final Object customFields = null;

    @SerializedName("description")
    protected String description = null;

    @SerializedName("fromEmail")
    protected String fromEmail = null;

    @SerializedName("iconUrl")
    protected final String iconUrl = null;

    @SerializedName("issues")
    protected List<Issue> issues = null;

    @SerializedName("leader")
    protected User leader = null;

    @SerializedName("replyToEmail")
    protected String replyToEmail = null;

    @SerializedName("shortName")
    protected String shortName = null;

    @SerializedName("startingNumber")
    protected Long startingNumber = null;

    @SerializedName("team")
    protected UserGroup team = null;

    @SerializedName("template")
    protected Boolean template = null;

    /**
     * Get projectId
     *
     * @return projectId
     **/
    @Schema(description = "")
    public String getProjectId() {
        return id;
    }

    public Project archived(Boolean archived) {
        this.archived = archived;
        return this;
    }

    /**
     * Get archived
     *
     * @return archived
     **/
    @Schema(description = "")
    public Boolean isArchived() {
        return archived;
    }

    public void setArchived(Boolean archived) {
        this.archived = archived;
    }

    public Project createdBy(User createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Get createdBy
     *
     * @return createdBy
     **/
    @Schema(description = "")
    public User getCreatedBy() {
        return createdBy;
    }

    public void setCreatedBy(User createdBy) {
        this.createdBy = createdBy;
    }

    /**
     * Get customFields
     *
     * @return customFields
     **/
    @Schema(description = "")
    public Object getCustomFields() {
        return customFields;
    }

    public Project description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     *
     * @return description
     **/
    @Schema(description = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Project fromEmail(String fromEmail) {
        this.fromEmail = fromEmail;
        return this;
    }

    /**
     * Get fromEmail
     *
     * @return fromEmail
     **/
    @Schema(description = "")
    public String getFromEmail() {
        return fromEmail;
    }

    public void setFromEmail(String fromEmail) {
        this.fromEmail = fromEmail;
    }

    /**
     * Get iconUrl
     *
     * @return iconUrl
     **/
    @Schema(description = "")
    public String getIconUrl() {
        return iconUrl;
    }

    public Project issues(List<Issue> issues) {
        this.issues = issues;
        return this;
    }

    public Project addIssuesItem(Issue issuesItem) {
        if (this.issues == null) {
            this.issues = new ArrayList<Issue>();
        }
        this.issues.add(issuesItem);
        return this;
    }

    /**
     * Get issues
     *
     * @return issues
     **/
    @Schema(description = "")
    public List<Issue> getIssues() {
        return issues;
    }

    public void setIssues(List<Issue> issues) {
        this.issues = issues;
    }

    public Project leader(User leader) {
        this.leader = leader;
        return this;
    }

    /**
     * Get leader
     *
     * @return leader
     **/
    @Schema(description = "")
    public User getLeader() {
        return leader;
    }

    public void setLeader(User leader) {
        this.leader = leader;
    }

    public Project projectName(String projectName) {
        this.name = projectName;
        return this;
    }

    /**
     * Get projectName
     *
     * @return projectName
     **/
    @Schema(description = "")
    public String getProjectName() {
        return name;
    }

    public void setProjectName(String projectName) {
        this.name = projectName;
    }

    public Project replyToEmail(String replyToEmail) {
        this.replyToEmail = replyToEmail;
        return this;
    }

    /**
     * Get replyToEmail
     *
     * @return replyToEmail
     **/
    @Schema(description = "")
    public String getReplyToEmail() {
        return replyToEmail;
    }

    public void setReplyToEmail(String replyToEmail) {
        this.replyToEmail = replyToEmail;
    }

    public Project shortName(String shortName) {
        this.shortName = shortName;
        return this;
    }

    /**
     * Get shortName
     *
     * @return shortName
     **/
    @Schema(description = "")
    public String getShortName() {
        return shortName;
    }

    public void setShortName(String shortName) {
        this.shortName = shortName;
    }

    public Project startingNumber(Long startingNumber) {
        this.startingNumber = startingNumber;
        return this;
    }

    /**
     * Get startingNumber
     *
     * @return startingNumber
     **/
    @Schema(description = "")
    public Long getStartingNumber() {
        return startingNumber;
    }

    public void setStartingNumber(Long startingNumber) {
        this.startingNumber = startingNumber;
    }

    public Project team(UserGroup team) {
        this.team = team;
        return this;
    }

    /**
     * Get team
     *
     * @return team
     **/
    @Schema(description = "")
    public UserGroup getTeam() {
        return team;
    }

    public void setTeam(UserGroup team) {
        this.team = team;
    }

    public Project template(Boolean template) {
        this.template = template;
        return this;
    }

    /**
     * Get template
     *
     * @return template
     **/
    @Schema(description = "")
    public Boolean isTemplate() {
        return template;
    }

    public void setTemplate(Boolean template) {
        this.template = template;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Project project = (Project) o;
        return Objects.equals(this.id, project.id) &&
                Objects.equals(this.archived, project.archived) &&
                Objects.equals(this.createdBy, project.createdBy) &&
                Objects.equals(this.customFields, project.customFields) &&
                Objects.equals(this.description, project.description) &&
                Objects.equals(this.fromEmail, project.fromEmail) &&
                Objects.equals(this.iconUrl, project.iconUrl) &&
                Objects.equals(this.issues, project.issues) &&
                Objects.equals(this.leader, project.leader) &&
                Objects.equals(this.name, project.name) &&
                Objects.equals(this.replyToEmail, project.replyToEmail) &&
                Objects.equals(this.shortName, project.shortName) &&
                Objects.equals(this.startingNumber, project.startingNumber) &&
                Objects.equals(this.team, project.team) &&
                Objects.equals(this.template, project.template) &&
                super.equals(o);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, archived, createdBy, customFields, description, fromEmail, iconUrl, issues, leader, name, replyToEmail, shortName, startingNumber, team, template, super.hashCode());
    }


    @Override
    public String toString() {
        String sb = "class Project {\n" +
                "    " + toIndentedString(super.toString()) + "\n" +
                "    projectId: " + toIndentedString(id) + "\n" +
                "    archived: " + toIndentedString(archived) + "\n" +
                "    createdBy: " + toIndentedString(createdBy) + "\n" +
                "    customFields: " + toIndentedString(customFields) + "\n" +
                "    description: " + toIndentedString(description) + "\n" +
                "    fromEmail: " + toIndentedString(fromEmail) + "\n" +
                "    iconUrl: " + toIndentedString(iconUrl) + "\n" +
                "    issues: " + toIndentedString(issues) + "\n" +
                "    leader: " + toIndentedString(leader) + "\n" +
                "    projectName: " + toIndentedString(name) + "\n" +
                "    replyToEmail: " + toIndentedString(replyToEmail) + "\n" +
                "    shortName: " + toIndentedString(shortName) + "\n" +
                "    startingNumber: " + toIndentedString(startingNumber) + "\n" +
                "    team: " + toIndentedString(team) + "\n" +
                "    template: " + toIndentedString(template) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
