/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2024.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.youtrack;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.List;
import java.util.Objects;

/**
 * Represents a change in the &#x60;attachments&#x60; attribute of an IssueComment.
 */
@Schema(description = "Represents a change in the `attachments` attribute of an IssueComment.")


public class CommentAttachmentsActivityItem extends MultiValueActivityItem {
    @SerializedName("id")
    private final String commentAttachmentsActivityItemId = null;

    @SerializedName("added")
    private final List<IssueAttachment> commentAttachmentsActivityItemAdded = null;

    @SerializedName("removed")
    private final List<IssueAttachment> commentAttachmentsActivityItemRemoved = null;

    @SerializedName("target")
    private IssueComment target = null;

    /**
     * Get commentAttachmentsActivityItemId
     *
     * @return commentAttachmentsActivityItemId
     **/
    @Schema(description = "")
    public String getCommentAttachmentsActivityItemId() {
        return commentAttachmentsActivityItemId;
    }

    /**
     * Get commentAttachmentsActivityItemAdded
     *
     * @return commentAttachmentsActivityItemAdded
     **/
    @Schema(description = "")
    public List<IssueAttachment> getCommentAttachmentsActivityItemAdded() {
        return commentAttachmentsActivityItemAdded;
    }

    /**
     * Get commentAttachmentsActivityItemRemoved
     *
     * @return commentAttachmentsActivityItemRemoved
     **/
    @Schema(description = "")
    public List<IssueAttachment> getCommentAttachmentsActivityItemRemoved() {
        return commentAttachmentsActivityItemRemoved;
    }

    public CommentAttachmentsActivityItem target(IssueComment target) {
        this.target = target;
        return this;
    }

    /**
     * Get target
     *
     * @return target
     **/
    @Schema(description = "")
    public IssueComment getTarget() {
        return target;
    }

    public void setTarget(IssueComment target) {
        this.target = target;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CommentAttachmentsActivityItem commentAttachmentsActivityItem = (CommentAttachmentsActivityItem) o;
        return Objects.equals(this.commentAttachmentsActivityItemId, commentAttachmentsActivityItem.commentAttachmentsActivityItemId) &&
                Objects.equals(this.commentAttachmentsActivityItemAdded, commentAttachmentsActivityItem.commentAttachmentsActivityItemAdded) &&
                Objects.equals(this.commentAttachmentsActivityItemRemoved, commentAttachmentsActivityItem.commentAttachmentsActivityItemRemoved) &&
                Objects.equals(this.target, commentAttachmentsActivityItem.target) &&
                super.equals(o);
    }

    @Override
    public int hashCode() {
        return Objects.hash(commentAttachmentsActivityItemId, commentAttachmentsActivityItemAdded, commentAttachmentsActivityItemRemoved, target, super.hashCode());
    }


    @Override
    public String toString() {
        String sb = "class CommentAttachmentsActivityItem {\n" +
                "    " + toIndentedString(super.toString()) + "\n" +
                "    commentAttachmentsActivityItemId: " + toIndentedString(commentAttachmentsActivityItemId) + "\n" +
                "    commentAttachmentsActivityItemAdded: " + toIndentedString(commentAttachmentsActivityItemAdded) + "\n" +
                "    commentAttachmentsActivityItemRemoved: " + toIndentedString(commentAttachmentsActivityItemRemoved) + "\n" +
                "    target: " + toIndentedString(target) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
