/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2024.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.youtrack;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Represents settings for a single board column
 */
@Schema(description = "Represents settings for a single board column")


public class AgileColumn {
    @SerializedName("id")
    private final String id = null;

    @SerializedName("presentation")
    private final String presentation = null;

    @SerializedName("isResolved")
    private final Boolean isResolved = null;

    @SerializedName("ordinal")
    private Integer ordinal = null;

    @SerializedName("parent")
    private ColumnSettings parent = null;

    @SerializedName("wipLimit")
    private WIPLimit wipLimit = null;

    @SerializedName("fieldValues")
    private List<AgileColumnFieldValue> fieldValues = null;

    @SerializedName("$type")
    private String $type = null;

    public AgileColumn() {
        this.$type = this.getClass().getSimpleName();
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public String getId() {
        return id;
    }

    /**
     * Get presentation
     *
     * @return presentation
     **/
    @Schema(description = "")
    public String getPresentation() {
        return presentation;
    }

    /**
     * Get isResolved
     *
     * @return isResolved
     **/
    @Schema(description = "")
    public Boolean isIsResolved() {
        return isResolved;
    }

    public AgileColumn ordinal(Integer ordinal) {
        this.ordinal = ordinal;
        return this;
    }

    /**
     * Get ordinal
     *
     * @return ordinal
     **/
    @Schema(description = "")
    public Integer getOrdinal() {
        return ordinal;
    }

    public void setOrdinal(Integer ordinal) {
        this.ordinal = ordinal;
    }

    public AgileColumn parent(ColumnSettings parent) {
        this.parent = parent;
        return this;
    }

    /**
     * Get parent
     *
     * @return parent
     **/
    @Schema(description = "")
    public ColumnSettings getParent() {
        return parent;
    }

    public void setParent(ColumnSettings parent) {
        this.parent = parent;
    }

    public AgileColumn wipLimit(WIPLimit wipLimit) {
        this.wipLimit = wipLimit;
        return this;
    }

    /**
     * Get wipLimit
     *
     * @return wipLimit
     **/
    @Schema(description = "")
    public WIPLimit getWipLimit() {
        return wipLimit;
    }

    public void setWipLimit(WIPLimit wipLimit) {
        this.wipLimit = wipLimit;
    }

    public AgileColumn fieldValues(List<AgileColumnFieldValue> fieldValues) {
        this.fieldValues = fieldValues;
        return this;
    }

    public AgileColumn addFieldValuesItem(AgileColumnFieldValue fieldValuesItem) {
        if (this.fieldValues == null) {
            this.fieldValues = new ArrayList<AgileColumnFieldValue>();
        }
        this.fieldValues.add(fieldValuesItem);
        return this;
    }

    /**
     * Get fieldValues
     *
     * @return fieldValues
     **/
    @Schema(description = "")
    public List<AgileColumnFieldValue> getFieldValues() {
        return fieldValues;
    }

    public void setFieldValues(List<AgileColumnFieldValue> fieldValues) {
        this.fieldValues = fieldValues;
    }

    /**
     * Get $type
     *
     * @return $type
     **/
    @Schema(description = "")
    public String get$Type() {
        return $type;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AgileColumn agileColumn = (AgileColumn) o;
        return Objects.equals(this.id, agileColumn.id) &&
                Objects.equals(this.presentation, agileColumn.presentation) &&
                Objects.equals(this.isResolved, agileColumn.isResolved) &&
                Objects.equals(this.ordinal, agileColumn.ordinal) &&
                Objects.equals(this.parent, agileColumn.parent) &&
                Objects.equals(this.wipLimit, agileColumn.wipLimit) &&
                Objects.equals(this.fieldValues, agileColumn.fieldValues) &&
                Objects.equals(this.$type, agileColumn.$type);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, presentation, isResolved, ordinal, parent, wipLimit, fieldValues, $type);
    }


    @Override
    public String toString() {

        String sb = "class AgileColumn {\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    presentation: " + toIndentedString(presentation) + "\n" +
                "    isResolved: " + toIndentedString(isResolved) + "\n" +
                "    ordinal: " + toIndentedString(ordinal) + "\n" +
                "    parent: " + toIndentedString(parent) + "\n" +
                "    wipLimit: " + toIndentedString(wipLimit) + "\n" +
                "    fieldValues: " + toIndentedString(fieldValues) + "\n" +
                "    $type: " + toIndentedString($type) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
