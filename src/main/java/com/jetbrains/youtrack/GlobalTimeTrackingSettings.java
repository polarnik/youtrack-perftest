/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2024.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.youtrack;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.List;
import java.util.Objects;

/**
 * GlobalTimeTrackingSettings
 */


public class GlobalTimeTrackingSettings {
    @SerializedName("id")
    private final String id = null;

    @SerializedName("workItemTypes")
    private final List<WorkItemType> workItemTypes = null;

    @SerializedName("workTimeSettings")
    private WorkTimeSettings workTimeSettings = null;

    @SerializedName("attributePrototypes")
    private final List<WorkItemAttributePrototype> attributePrototypes = null;

    @SerializedName("$type")
    private String $type = null;

    public GlobalTimeTrackingSettings() {
        this.$type = this.getClass().getSimpleName();
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public String getId() {
        return id;
    }

    /**
     * Get workItemTypes
     *
     * @return workItemTypes
     **/
    @Schema(description = "")
    public List<WorkItemType> getWorkItemTypes() {
        return workItemTypes;
    }

    public GlobalTimeTrackingSettings workTimeSettings(WorkTimeSettings workTimeSettings) {
        this.workTimeSettings = workTimeSettings;
        return this;
    }

    /**
     * Get workTimeSettings
     *
     * @return workTimeSettings
     **/
    @Schema(description = "")
    public WorkTimeSettings getWorkTimeSettings() {
        return workTimeSettings;
    }

    public void setWorkTimeSettings(WorkTimeSettings workTimeSettings) {
        this.workTimeSettings = workTimeSettings;
    }

    /**
     * Get attributePrototypes
     *
     * @return attributePrototypes
     **/
    @Schema(description = "")
    public List<WorkItemAttributePrototype> getAttributePrototypes() {
        return attributePrototypes;
    }

    /**
     * Get $type
     *
     * @return $type
     **/
    @Schema(description = "")
    public String get$Type() {
        return $type;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GlobalTimeTrackingSettings globalTimeTrackingSettings = (GlobalTimeTrackingSettings) o;
        return Objects.equals(this.id, globalTimeTrackingSettings.id) &&
                Objects.equals(this.workItemTypes, globalTimeTrackingSettings.workItemTypes) &&
                Objects.equals(this.workTimeSettings, globalTimeTrackingSettings.workTimeSettings) &&
                Objects.equals(this.attributePrototypes, globalTimeTrackingSettings.attributePrototypes) &&
                Objects.equals(this.$type, globalTimeTrackingSettings.$type);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, workItemTypes, workTimeSettings, attributePrototypes, $type);
    }


    @Override
    public String toString() {

        String sb = "class GlobalTimeTrackingSettings {\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    workItemTypes: " + toIndentedString(workItemTypes) + "\n" +
                "    workTimeSettings: " + toIndentedString(workTimeSettings) + "\n" +
                "    attributePrototypes: " + toIndentedString(attributePrototypes) + "\n" +
                "    $type: " + toIndentedString($type) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
