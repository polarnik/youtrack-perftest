/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2024.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.youtrack;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.List;
import java.util.Objects;

/**
 * Represents a change in the comments of an issue.
 */
@Schema(description = "Represents a change in the comments of an issue.")


public class CommentActivityItem extends CreatedDeletedActivityItem {
    @SerializedName("id")
    private final String commentActivityItemId = null;

    @SerializedName("added")
    private final List<IssueComment> commentActivityItemAdded = null;

    @SerializedName("authorGroup")
    private UserGroup authorGroup = null;

    @SerializedName("removed")
    private final List<IssueComment> commentActivityItemRemoved = null;

    @SerializedName("target")
    private IssueComment commentActivityItemTarget = null;

    /**
     * Get commentActivityItemId
     *
     * @return commentActivityItemId
     **/
    @Schema(description = "")
    public String getCommentActivityItemId() {
        return commentActivityItemId;
    }

    /**
     * Get commentActivityItemAdded
     *
     * @return commentActivityItemAdded
     **/
    @Schema(description = "")
    public List<IssueComment> getCommentActivityItemAdded() {
        return commentActivityItemAdded;
    }

    public CommentActivityItem authorGroup(UserGroup authorGroup) {
        this.authorGroup = authorGroup;
        return this;
    }

    /**
     * Get authorGroup
     *
     * @return authorGroup
     **/
    @Schema(description = "")
    public UserGroup getAuthorGroup() {
        return authorGroup;
    }

    public void setAuthorGroup(UserGroup authorGroup) {
        this.authorGroup = authorGroup;
    }

    /**
     * Get commentActivityItemRemoved
     *
     * @return commentActivityItemRemoved
     **/
    @Schema(description = "")
    public List<IssueComment> getCommentActivityItemRemoved() {
        return commentActivityItemRemoved;
    }

    public CommentActivityItem commentActivityItemTarget(IssueComment commentActivityItemTarget) {
        this.commentActivityItemTarget = commentActivityItemTarget;
        return this;
    }

    /**
     * Get commentActivityItemTarget
     *
     * @return commentActivityItemTarget
     **/
    @Schema(description = "")
    public IssueComment getCommentActivityItemTarget() {
        return commentActivityItemTarget;
    }

    public void setCommentActivityItemTarget(IssueComment commentActivityItemTarget) {
        this.commentActivityItemTarget = commentActivityItemTarget;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CommentActivityItem commentActivityItem = (CommentActivityItem) o;
        return Objects.equals(this.commentActivityItemId, commentActivityItem.commentActivityItemId) &&
                Objects.equals(this.commentActivityItemAdded, commentActivityItem.commentActivityItemAdded) &&
                Objects.equals(this.authorGroup, commentActivityItem.authorGroup) &&
                Objects.equals(this.commentActivityItemRemoved, commentActivityItem.commentActivityItemRemoved) &&
                Objects.equals(this.commentActivityItemTarget, commentActivityItem.commentActivityItemTarget) &&
                super.equals(o);
    }

    @Override
    public int hashCode() {
        return Objects.hash(commentActivityItemId, commentActivityItemAdded, authorGroup, commentActivityItemRemoved, commentActivityItemTarget, super.hashCode());
    }


    @Override
    public String toString() {
        String sb = "class CommentActivityItem {\n" +
                "    " + toIndentedString(super.toString()) + "\n" +
                "    commentActivityItemId: " + toIndentedString(commentActivityItemId) + "\n" +
                "    commentActivityItemAdded: " + toIndentedString(commentActivityItemAdded) + "\n" +
                "    authorGroup: " + toIndentedString(authorGroup) + "\n" +
                "    commentActivityItemRemoved: " + toIndentedString(commentActivityItemRemoved) + "\n" +
                "    commentActivityItemTarget: " + toIndentedString(commentActivityItemTarget) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
