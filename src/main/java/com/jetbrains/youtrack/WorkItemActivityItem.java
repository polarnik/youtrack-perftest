/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2024.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.youtrack;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.List;
import java.util.Objects;

/**
 * Represents a change in a list of work items in an issue.
 */
@Schema(description = "Represents a change in a list of work items in an issue.")


public class WorkItemActivityItem extends CreatedDeletedActivityItem {
    @SerializedName("id")
    private final String workItemActivityItemId = null;

    @SerializedName("target")
    private IssueWorkItem workItemActivityItemTarget = null;

    @SerializedName("removed")
    private final List<IssueWorkItem> workItemActivityItemRemoved = null;

    @SerializedName("added")
    private final List<IssueWorkItem> workItemActivityItemAdded = null;

    /**
     * Get workItemActivityItemId
     *
     * @return workItemActivityItemId
     **/
    @Schema(description = "")
    public String getWorkItemActivityItemId() {
        return workItemActivityItemId;
    }

    public WorkItemActivityItem workItemActivityItemTarget(IssueWorkItem workItemActivityItemTarget) {
        this.workItemActivityItemTarget = workItemActivityItemTarget;
        return this;
    }

    /**
     * Get workItemActivityItemTarget
     *
     * @return workItemActivityItemTarget
     **/
    @Schema(description = "")
    public IssueWorkItem getWorkItemActivityItemTarget() {
        return workItemActivityItemTarget;
    }

    public void setWorkItemActivityItemTarget(IssueWorkItem workItemActivityItemTarget) {
        this.workItemActivityItemTarget = workItemActivityItemTarget;
    }

    /**
     * Get workItemActivityItemRemoved
     *
     * @return workItemActivityItemRemoved
     **/
    @Schema(description = "")
    public List<IssueWorkItem> getWorkItemActivityItemRemoved() {
        return workItemActivityItemRemoved;
    }

    /**
     * Get workItemActivityItemAdded
     *
     * @return workItemActivityItemAdded
     **/
    @Schema(description = "")
    public List<IssueWorkItem> getWorkItemActivityItemAdded() {
        return workItemActivityItemAdded;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        WorkItemActivityItem workItemActivityItem = (WorkItemActivityItem) o;
        return Objects.equals(this.workItemActivityItemId, workItemActivityItem.workItemActivityItemId) &&
                Objects.equals(this.workItemActivityItemTarget, workItemActivityItem.workItemActivityItemTarget) &&
                Objects.equals(this.workItemActivityItemRemoved, workItemActivityItem.workItemActivityItemRemoved) &&
                Objects.equals(this.workItemActivityItemAdded, workItemActivityItem.workItemActivityItemAdded) &&
                super.equals(o);
    }

    @Override
    public int hashCode() {
        return Objects.hash(workItemActivityItemId, workItemActivityItemTarget, workItemActivityItemRemoved, workItemActivityItemAdded, super.hashCode());
    }


    @Override
    public String toString() {
        String sb = "class WorkItemActivityItem {\n" +
                "    " + toIndentedString(super.toString()) + "\n" +
                "    workItemActivityItemId: " + toIndentedString(workItemActivityItemId) + "\n" +
                "    workItemActivityItemTarget: " + toIndentedString(workItemActivityItemTarget) + "\n" +
                "    workItemActivityItemRemoved: " + toIndentedString(workItemActivityItemRemoved) + "\n" +
                "    workItemActivityItemAdded: " + toIndentedString(workItemActivityItemAdded) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
