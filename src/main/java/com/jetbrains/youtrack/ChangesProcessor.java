/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2024.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.youtrack;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * The basic entity that represents a VCS or a build server integration configured for a project.
 */
@Schema(description = "The basic entity that represents a VCS or a build server integration configured for a project.")


public class ChangesProcessor {
    @SerializedName("id")
    private final String id = null;

    @SerializedName("server")
    private VcsServer server = null;

    @SerializedName("project")
    private Project project = null;

    @SerializedName("relatedProjects")
    private List<Project> relatedProjects = null;

    @SerializedName("enabled")
    private Boolean enabled = null;

    @SerializedName("visibleForGroups")
    private List<UserGroup> visibleForGroups = null;

    @SerializedName("addComments")
    private Boolean addComments = null;

    @SerializedName("lookupIssuesInBranchName")
    private Boolean lookupIssuesInBranchName = null;

    @SerializedName("$type")
    private String $type = null;

    public ChangesProcessor() {
        this.$type = this.getClass().getSimpleName();
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public String getId() {
        return id;
    }

    public ChangesProcessor server(VcsServer server) {
        this.server = server;
        return this;
    }

    /**
     * Get server
     *
     * @return server
     **/
    @Schema(description = "")
    public VcsServer getServer() {
        return server;
    }

    public void setServer(VcsServer server) {
        this.server = server;
    }

    public ChangesProcessor project(Project project) {
        this.project = project;
        return this;
    }

    /**
     * Get project
     *
     * @return project
     **/
    @Schema(description = "")
    public Project getProject() {
        return project;
    }

    public void setProject(Project project) {
        this.project = project;
    }

    public ChangesProcessor relatedProjects(List<Project> relatedProjects) {
        this.relatedProjects = relatedProjects;
        return this;
    }

    public ChangesProcessor addRelatedProjectsItem(Project relatedProjectsItem) {
        if (this.relatedProjects == null) {
            this.relatedProjects = new ArrayList<Project>();
        }
        this.relatedProjects.add(relatedProjectsItem);
        return this;
    }

    /**
     * Get relatedProjects
     *
     * @return relatedProjects
     **/
    @Schema(description = "")
    public List<Project> getRelatedProjects() {
        return relatedProjects;
    }

    public void setRelatedProjects(List<Project> relatedProjects) {
        this.relatedProjects = relatedProjects;
    }

    public ChangesProcessor enabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Get enabled
     *
     * @return enabled
     **/
    @Schema(description = "")
    public Boolean isEnabled() {
        return enabled;
    }

    public void setEnabled(Boolean enabled) {
        this.enabled = enabled;
    }

    public ChangesProcessor visibleForGroups(List<UserGroup> visibleForGroups) {
        this.visibleForGroups = visibleForGroups;
        return this;
    }

    public ChangesProcessor addVisibleForGroupsItem(UserGroup visibleForGroupsItem) {
        if (this.visibleForGroups == null) {
            this.visibleForGroups = new ArrayList<UserGroup>();
        }
        this.visibleForGroups.add(visibleForGroupsItem);
        return this;
    }

    /**
     * Get visibleForGroups
     *
     * @return visibleForGroups
     **/
    @Schema(description = "")
    public List<UserGroup> getVisibleForGroups() {
        return visibleForGroups;
    }

    public void setVisibleForGroups(List<UserGroup> visibleForGroups) {
        this.visibleForGroups = visibleForGroups;
    }

    public ChangesProcessor addComments(Boolean addComments) {
        this.addComments = addComments;
        return this;
    }

    /**
     * Get addComments
     *
     * @return addComments
     **/
    @Schema(description = "")
    public Boolean isAddComments() {
        return addComments;
    }

    public void setAddComments(Boolean addComments) {
        this.addComments = addComments;
    }

    public ChangesProcessor lookupIssuesInBranchName(Boolean lookupIssuesInBranchName) {
        this.lookupIssuesInBranchName = lookupIssuesInBranchName;
        return this;
    }

    /**
     * Get lookupIssuesInBranchName
     *
     * @return lookupIssuesInBranchName
     **/
    @Schema(description = "")
    public Boolean isLookupIssuesInBranchName() {
        return lookupIssuesInBranchName;
    }

    public void setLookupIssuesInBranchName(Boolean lookupIssuesInBranchName) {
        this.lookupIssuesInBranchName = lookupIssuesInBranchName;
    }

    /**
     * Get $type
     *
     * @return $type
     **/
    @Schema(description = "")
    public String get$Type() {
        return $type;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ChangesProcessor changesProcessor = (ChangesProcessor) o;
        return Objects.equals(this.id, changesProcessor.id) &&
                Objects.equals(this.server, changesProcessor.server) &&
                Objects.equals(this.project, changesProcessor.project) &&
                Objects.equals(this.relatedProjects, changesProcessor.relatedProjects) &&
                Objects.equals(this.enabled, changesProcessor.enabled) &&
                Objects.equals(this.visibleForGroups, changesProcessor.visibleForGroups) &&
                Objects.equals(this.addComments, changesProcessor.addComments) &&
                Objects.equals(this.lookupIssuesInBranchName, changesProcessor.lookupIssuesInBranchName) &&
                Objects.equals(this.$type, changesProcessor.$type);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, server, project, relatedProjects, enabled, visibleForGroups, addComments, lookupIssuesInBranchName, $type);
    }


    @Override
    public String toString() {

        String sb = "class ChangesProcessor {\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    server: " + toIndentedString(server) + "\n" +
                "    project: " + toIndentedString(project) + "\n" +
                "    relatedProjects: " + toIndentedString(relatedProjects) + "\n" +
                "    enabled: " + toIndentedString(enabled) + "\n" +
                "    visibleForGroups: " + toIndentedString(visibleForGroups) + "\n" +
                "    addComments: " + toIndentedString(addComments) + "\n" +
                "    lookupIssuesInBranchName: " + toIndentedString(lookupIssuesInBranchName) + "\n" +
                "    $type: " + toIndentedString($type) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
