/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2024.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.youtrack;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * IssueCountResponse
 */


public class IssueCountResponse {
    @SerializedName("id")
    private final String id = null;

    @SerializedName("count")
    private Long count = null;

    @SerializedName("unresolvedOnly")
    private Boolean unresolvedOnly = null;

    @SerializedName("query")
    private String query = null;

    @SerializedName("folder")
    private IssueFolder folder = null;

    @SerializedName("$type")
    private String $type = null;

    public IssueCountResponse() {
        this.$type = this.getClass().getSimpleName();
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public String getId() {
        return id;
    }

    public IssueCountResponse count(Long count) {
        this.count = count;
        return this;
    }

    /**
     * Get count
     *
     * @return count
     **/
    @Schema(description = "")
    public Long getCount() {
        return count;
    }

    public void setCount(Long count) {
        this.count = count;
    }

    public IssueCountResponse unresolvedOnly(Boolean unresolvedOnly) {
        this.unresolvedOnly = unresolvedOnly;
        return this;
    }

    /**
     * Get unresolvedOnly
     *
     * @return unresolvedOnly
     **/
    @Schema(description = "")
    public Boolean isUnresolvedOnly() {
        return unresolvedOnly;
    }

    public void setUnresolvedOnly(Boolean unresolvedOnly) {
        this.unresolvedOnly = unresolvedOnly;
    }

    public IssueCountResponse query(String query) {
        this.query = query;
        return this;
    }

    /**
     * Get query
     *
     * @return query
     **/
    @Schema(description = "")
    public String getQuery() {
        return query;
    }

    public void setQuery(String query) {
        this.query = query;
    }

    public IssueCountResponse folder(IssueFolder folder) {
        this.folder = folder;
        return this;
    }

    /**
     * Get folder
     *
     * @return folder
     **/
    @Schema(description = "")
    public IssueFolder getFolder() {
        return folder;
    }

    public void setFolder(IssueFolder folder) {
        this.folder = folder;
    }

    /**
     * Get $type
     *
     * @return $type
     **/
    @Schema(description = "")
    public String get$Type() {
        return $type;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        IssueCountResponse issueCountResponse = (IssueCountResponse) o;
        return Objects.equals(this.id, issueCountResponse.id) &&
                Objects.equals(this.count, issueCountResponse.count) &&
                Objects.equals(this.unresolvedOnly, issueCountResponse.unresolvedOnly) &&
                Objects.equals(this.query, issueCountResponse.query) &&
                Objects.equals(this.folder, issueCountResponse.folder) &&
                Objects.equals(this.$type, issueCountResponse.$type);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, count, unresolvedOnly, query, folder, $type);
    }


    @Override
    public String toString() {

        String sb = "class IssueCountResponse {\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    count: " + toIndentedString(count) + "\n" +
                "    unresolvedOnly: " + toIndentedString(unresolvedOnly) + "\n" +
                "    query: " + toIndentedString(query) + "\n" +
                "    folder: " + toIndentedString(folder) + "\n" +
                "    $type: " + toIndentedString($type) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
