/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2024.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.youtrack;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * IssueLinkType
 */


public class IssueLinkType {
    @SerializedName("id")
    private final String id = null;

    @SerializedName("name")
    private String name = null;

    @SerializedName("localizedName")
    private String localizedName = null;

    @SerializedName("sourceToTarget")
    private String sourceToTarget = null;

    @SerializedName("localizedSourceToTarget")
    private String localizedSourceToTarget = null;

    @SerializedName("targetToSource")
    private String targetToSource = null;

    @SerializedName("localizedTargetToSource")
    private String localizedTargetToSource = null;

    @SerializedName("directed")
    private Boolean directed = null;

    @SerializedName("aggregation")
    private Boolean aggregation = null;

    @SerializedName("readOnly")
    private final Boolean readOnly = null;

    @SerializedName("$type")
    private String $type = null;

    public IssueLinkType() {
        this.$type = this.getClass().getSimpleName();
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public String getId() {
        return id;
    }

    public IssueLinkType name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @Schema(description = "")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public IssueLinkType localizedName(String localizedName) {
        this.localizedName = localizedName;
        return this;
    }

    /**
     * Get localizedName
     *
     * @return localizedName
     **/
    @Schema(description = "")
    public String getLocalizedName() {
        return localizedName;
    }

    public void setLocalizedName(String localizedName) {
        this.localizedName = localizedName;
    }

    public IssueLinkType sourceToTarget(String sourceToTarget) {
        this.sourceToTarget = sourceToTarget;
        return this;
    }

    /**
     * Get sourceToTarget
     *
     * @return sourceToTarget
     **/
    @Schema(description = "")
    public String getSourceToTarget() {
        return sourceToTarget;
    }

    public void setSourceToTarget(String sourceToTarget) {
        this.sourceToTarget = sourceToTarget;
    }

    public IssueLinkType localizedSourceToTarget(String localizedSourceToTarget) {
        this.localizedSourceToTarget = localizedSourceToTarget;
        return this;
    }

    /**
     * Get localizedSourceToTarget
     *
     * @return localizedSourceToTarget
     **/
    @Schema(description = "")
    public String getLocalizedSourceToTarget() {
        return localizedSourceToTarget;
    }

    public void setLocalizedSourceToTarget(String localizedSourceToTarget) {
        this.localizedSourceToTarget = localizedSourceToTarget;
    }

    public IssueLinkType targetToSource(String targetToSource) {
        this.targetToSource = targetToSource;
        return this;
    }

    /**
     * Get targetToSource
     *
     * @return targetToSource
     **/
    @Schema(description = "")
    public String getTargetToSource() {
        return targetToSource;
    }

    public void setTargetToSource(String targetToSource) {
        this.targetToSource = targetToSource;
    }

    public IssueLinkType localizedTargetToSource(String localizedTargetToSource) {
        this.localizedTargetToSource = localizedTargetToSource;
        return this;
    }

    /**
     * Get localizedTargetToSource
     *
     * @return localizedTargetToSource
     **/
    @Schema(description = "")
    public String getLocalizedTargetToSource() {
        return localizedTargetToSource;
    }

    public void setLocalizedTargetToSource(String localizedTargetToSource) {
        this.localizedTargetToSource = localizedTargetToSource;
    }

    public IssueLinkType directed(Boolean directed) {
        this.directed = directed;
        return this;
    }

    /**
     * Get directed
     *
     * @return directed
     **/
    @Schema(description = "")
    public Boolean isDirected() {
        return directed;
    }

    public void setDirected(Boolean directed) {
        this.directed = directed;
    }

    public IssueLinkType aggregation(Boolean aggregation) {
        this.aggregation = aggregation;
        return this;
    }

    /**
     * Get aggregation
     *
     * @return aggregation
     **/
    @Schema(description = "")
    public Boolean isAggregation() {
        return aggregation;
    }

    public void setAggregation(Boolean aggregation) {
        this.aggregation = aggregation;
    }

    /**
     * Get readOnly
     *
     * @return readOnly
     **/
    @Schema(description = "")
    public Boolean isReadOnly() {
        return readOnly;
    }

    /**
     * Get $type
     *
     * @return $type
     **/
    @Schema(description = "")
    public String get$Type() {
        return $type;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        IssueLinkType issueLinkType = (IssueLinkType) o;
        return Objects.equals(this.id, issueLinkType.id) &&
                Objects.equals(this.name, issueLinkType.name) &&
                Objects.equals(this.localizedName, issueLinkType.localizedName) &&
                Objects.equals(this.sourceToTarget, issueLinkType.sourceToTarget) &&
                Objects.equals(this.localizedSourceToTarget, issueLinkType.localizedSourceToTarget) &&
                Objects.equals(this.targetToSource, issueLinkType.targetToSource) &&
                Objects.equals(this.localizedTargetToSource, issueLinkType.localizedTargetToSource) &&
                Objects.equals(this.directed, issueLinkType.directed) &&
                Objects.equals(this.aggregation, issueLinkType.aggregation) &&
                Objects.equals(this.readOnly, issueLinkType.readOnly) &&
                Objects.equals(this.$type, issueLinkType.$type);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, name, localizedName, sourceToTarget, localizedSourceToTarget, targetToSource, localizedTargetToSource, directed, aggregation, readOnly, $type);
    }


    @Override
    public String toString() {

        String sb = "class IssueLinkType {\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    name: " + toIndentedString(name) + "\n" +
                "    localizedName: " + toIndentedString(localizedName) + "\n" +
                "    sourceToTarget: " + toIndentedString(sourceToTarget) + "\n" +
                "    localizedSourceToTarget: " + toIndentedString(localizedSourceToTarget) + "\n" +
                "    targetToSource: " + toIndentedString(targetToSource) + "\n" +
                "    localizedTargetToSource: " + toIndentedString(localizedTargetToSource) + "\n" +
                "    directed: " + toIndentedString(directed) + "\n" +
                "    aggregation: " + toIndentedString(aggregation) + "\n" +
                "    readOnly: " + toIndentedString(readOnly) + "\n" +
                "    $type: " + toIndentedString($type) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
