/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2024.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.youtrack;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.List;
import java.util.Objects;

/**
 * SavedQuery
 */


public class SavedQuery extends WatchFolder {
    @SerializedName("id")
    private final String savedQueryId = null;

    @SerializedName("query")
    private String query = null;

    @SerializedName("issues")
    private final List<Issue> issues = null;

    @SerializedName("visibleFor")
    private UserGroup savedQueryVisibleFor = null;

    @SerializedName("updateableBy")
    private UserGroup savedQueryUpdateableBy = null;

    @SerializedName("readSharingSettings")
    private WatchFolderSharingSettings savedQueryReadSharingSettings = null;

    @SerializedName("updateSharingSettings")
    private WatchFolderSharingSettings savedQueryUpdateSharingSettings = null;

    /**
     * Get savedQueryId
     *
     * @return savedQueryId
     **/
    @Schema(description = "")
    public String getSavedQueryId() {
        return savedQueryId;
    }

    public SavedQuery query(String query) {
        this.query = query;
        return this;
    }

    /**
     * Get query
     *
     * @return query
     **/
    @Schema(description = "")
    public String getQuery() {
        return query;
    }

    public void setQuery(String query) {
        this.query = query;
    }

    /**
     * Get issues
     *
     * @return issues
     **/
    @Schema(description = "")
    public List<Issue> getIssues() {
        return issues;
    }

    public SavedQuery savedQueryVisibleFor(UserGroup savedQueryVisibleFor) {
        this.savedQueryVisibleFor = savedQueryVisibleFor;
        return this;
    }

    /**
     * Get savedQueryVisibleFor
     *
     * @return savedQueryVisibleFor
     **/
    @Schema(description = "")
    public UserGroup getSavedQueryVisibleFor() {
        return savedQueryVisibleFor;
    }

    public void setSavedQueryVisibleFor(UserGroup savedQueryVisibleFor) {
        this.savedQueryVisibleFor = savedQueryVisibleFor;
    }

    public SavedQuery savedQueryUpdateableBy(UserGroup savedQueryUpdateableBy) {
        this.savedQueryUpdateableBy = savedQueryUpdateableBy;
        return this;
    }

    /**
     * Get savedQueryUpdateableBy
     *
     * @return savedQueryUpdateableBy
     **/
    @Schema(description = "")
    public UserGroup getSavedQueryUpdateableBy() {
        return savedQueryUpdateableBy;
    }

    public void setSavedQueryUpdateableBy(UserGroup savedQueryUpdateableBy) {
        this.savedQueryUpdateableBy = savedQueryUpdateableBy;
    }

    public SavedQuery savedQueryReadSharingSettings(WatchFolderSharingSettings savedQueryReadSharingSettings) {
        this.savedQueryReadSharingSettings = savedQueryReadSharingSettings;
        return this;
    }

    /**
     * Get savedQueryReadSharingSettings
     *
     * @return savedQueryReadSharingSettings
     **/
    @Schema(description = "")
    public WatchFolderSharingSettings getSavedQueryReadSharingSettings() {
        return savedQueryReadSharingSettings;
    }

    public void setSavedQueryReadSharingSettings(WatchFolderSharingSettings savedQueryReadSharingSettings) {
        this.savedQueryReadSharingSettings = savedQueryReadSharingSettings;
    }

    public SavedQuery savedQueryUpdateSharingSettings(WatchFolderSharingSettings savedQueryUpdateSharingSettings) {
        this.savedQueryUpdateSharingSettings = savedQueryUpdateSharingSettings;
        return this;
    }

    /**
     * Get savedQueryUpdateSharingSettings
     *
     * @return savedQueryUpdateSharingSettings
     **/
    @Schema(description = "")
    public WatchFolderSharingSettings getSavedQueryUpdateSharingSettings() {
        return savedQueryUpdateSharingSettings;
    }

    public void setSavedQueryUpdateSharingSettings(WatchFolderSharingSettings savedQueryUpdateSharingSettings) {
        this.savedQueryUpdateSharingSettings = savedQueryUpdateSharingSettings;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SavedQuery savedQuery = (SavedQuery) o;
        return Objects.equals(this.savedQueryId, savedQuery.savedQueryId) &&
                Objects.equals(this.query, savedQuery.query) &&
                Objects.equals(this.issues, savedQuery.issues) &&
                Objects.equals(this.savedQueryVisibleFor, savedQuery.savedQueryVisibleFor) &&
                Objects.equals(this.savedQueryUpdateableBy, savedQuery.savedQueryUpdateableBy) &&
                Objects.equals(this.savedQueryReadSharingSettings, savedQuery.savedQueryReadSharingSettings) &&
                Objects.equals(this.savedQueryUpdateSharingSettings, savedQuery.savedQueryUpdateSharingSettings) &&
                super.equals(o);
    }

    @Override
    public int hashCode() {
        return Objects.hash(savedQueryId, query, issues, savedQueryVisibleFor, savedQueryUpdateableBy, savedQueryReadSharingSettings, savedQueryUpdateSharingSettings, super.hashCode());
    }


    @Override
    public String toString() {
        String sb = "class SavedQuery {\n" +
                "    " + toIndentedString(super.toString()) + "\n" +
                "    savedQueryId: " + toIndentedString(savedQueryId) + "\n" +
                "    query: " + toIndentedString(query) + "\n" +
                "    issues: " + toIndentedString(issues) + "\n" +
                "    savedQueryVisibleFor: " + toIndentedString(savedQueryVisibleFor) + "\n" +
                "    savedQueryUpdateableBy: " + toIndentedString(savedQueryUpdateableBy) + "\n" +
                "    savedQueryReadSharingSettings: " + toIndentedString(savedQueryReadSharingSettings) + "\n" +
                "    savedQueryUpdateSharingSettings: " + toIndentedString(savedQueryUpdateSharingSettings) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
