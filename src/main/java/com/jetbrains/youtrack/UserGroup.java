/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2024.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.youtrack;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * UserGroup
 */


public class UserGroup {
    @SerializedName("id")
    private final String id = null;

    @SerializedName("name")
    private final String name = null;

    @SerializedName("ringId")
    private final String ringId = null;

    @SerializedName("usersCount")
    private final Long usersCount = null;

    @SerializedName("icon")
    private final String icon = null;

    @SerializedName("allUsersGroup")
    private final Boolean allUsersGroup = null;

    @SerializedName("teamForProject")
    private Project teamForProject = null;

    @SerializedName("$type")
    private String $type = null;

    public UserGroup() {
        this.$type = this.getClass().getSimpleName();
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public String getId() {
        return id;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @Schema(description = "")
    public String getName() {
        return name;
    }

    /**
     * Get ringId
     *
     * @return ringId
     **/
    @Schema(description = "")
    public String getRingId() {
        return ringId;
    }

    /**
     * Get usersCount
     *
     * @return usersCount
     **/
    @Schema(description = "")
    public Long getUsersCount() {
        return usersCount;
    }

    /**
     * Get icon
     *
     * @return icon
     **/
    @Schema(description = "")
    public String getIcon() {
        return icon;
    }

    /**
     * Get allUsersGroup
     *
     * @return allUsersGroup
     **/
    @Schema(description = "")
    public Boolean isAllUsersGroup() {
        return allUsersGroup;
    }

    public UserGroup teamForProject(Project teamForProject) {
        this.teamForProject = teamForProject;
        return this;
    }

    /**
     * Get teamForProject
     *
     * @return teamForProject
     **/
    @Schema(description = "")
    public Project getTeamForProject() {
        return teamForProject;
    }

    public void setTeamForProject(Project teamForProject) {
        this.teamForProject = teamForProject;
    }

    /**
     * Get $type
     *
     * @return $type
     **/
    @Schema(description = "")
    public String get$Type() {
        return $type;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UserGroup userGroup = (UserGroup) o;
        return Objects.equals(this.id, userGroup.id) &&
                Objects.equals(this.name, userGroup.name) &&
                Objects.equals(this.ringId, userGroup.ringId) &&
                Objects.equals(this.usersCount, userGroup.usersCount) &&
                Objects.equals(this.icon, userGroup.icon) &&
                Objects.equals(this.allUsersGroup, userGroup.allUsersGroup) &&
                Objects.equals(this.teamForProject, userGroup.teamForProject) &&
                Objects.equals(this.$type, userGroup.$type);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, name, ringId, usersCount, icon, allUsersGroup, teamForProject, $type);
    }


    @Override
    public String toString() {

        String sb = "class UserGroup {\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    name: " + toIndentedString(name) + "\n" +
                "    ringId: " + toIndentedString(ringId) + "\n" +
                "    usersCount: " + toIndentedString(usersCount) + "\n" +
                "    icon: " + toIndentedString(icon) + "\n" +
                "    allUsersGroup: " + toIndentedString(allUsersGroup) + "\n" +
                "    teamForProject: " + toIndentedString(teamForProject) + "\n" +
                "    $type: " + toIndentedString($type) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
