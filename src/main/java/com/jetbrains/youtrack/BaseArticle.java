/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2024.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.youtrack;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Represents a base article entity.
 */
@Schema(description = "Represents a base article entity.")


public class BaseArticle {
    @SerializedName("id")
    private final String id = null;

    @SerializedName("attachments")
    private List<ArticleAttachment> attachments = null;

    @SerializedName("content")
    private String content = null;

    @SerializedName("reporter")
    private User reporter = null;

    @SerializedName("summary")
    private String summary = null;

    @SerializedName("visibility")
    private Visibility visibility = null;

    @SerializedName("$type")
    private String $type = null;

    public BaseArticle() {
        this.$type = this.getClass().getSimpleName();
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public String getId() {
        return id;
    }

    public BaseArticle attachments(List<ArticleAttachment> attachments) {
        this.attachments = attachments;
        return this;
    }

    public BaseArticle addAttachmentsItem(ArticleAttachment attachmentsItem) {
        if (this.attachments == null) {
            this.attachments = new ArrayList<ArticleAttachment>();
        }
        this.attachments.add(attachmentsItem);
        return this;
    }

    /**
     * Get attachments
     *
     * @return attachments
     **/
    @Schema(description = "")
    public List<ArticleAttachment> getAttachments() {
        return attachments;
    }

    public void setAttachments(List<ArticleAttachment> attachments) {
        this.attachments = attachments;
    }

    public BaseArticle content(String content) {
        this.content = content;
        return this;
    }

    /**
     * Get content
     *
     * @return content
     **/
    @Schema(description = "")
    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public BaseArticle reporter(User reporter) {
        this.reporter = reporter;
        return this;
    }

    /**
     * Get reporter
     *
     * @return reporter
     **/
    @Schema(description = "")
    public User getReporter() {
        return reporter;
    }

    public void setReporter(User reporter) {
        this.reporter = reporter;
    }

    public BaseArticle summary(String summary) {
        this.summary = summary;
        return this;
    }

    /**
     * Get summary
     *
     * @return summary
     **/
    @Schema(description = "")
    public String getSummary() {
        return summary;
    }

    public void setSummary(String summary) {
        this.summary = summary;
    }

    public BaseArticle visibility(Visibility visibility) {
        this.visibility = visibility;
        return this;
    }

    /**
     * Get visibility
     *
     * @return visibility
     **/
    @Schema(description = "")
    public Visibility getVisibility() {
        return visibility;
    }

    public void setVisibility(Visibility visibility) {
        this.visibility = visibility;
    }

    /**
     * Get $type
     *
     * @return $type
     **/
    @Schema(description = "")
    public String get$Type() {
        return $type;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BaseArticle baseArticle = (BaseArticle) o;
        return Objects.equals(this.id, baseArticle.id) &&
                Objects.equals(this.attachments, baseArticle.attachments) &&
                Objects.equals(this.content, baseArticle.content) &&
                Objects.equals(this.reporter, baseArticle.reporter) &&
                Objects.equals(this.summary, baseArticle.summary) &&
                Objects.equals(this.visibility, baseArticle.visibility) &&
                Objects.equals(this.$type, baseArticle.$type);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, attachments, content, reporter, summary, visibility, $type);
    }


    @Override
    public String toString() {

        String sb = "class BaseArticle {\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    attachments: " + toIndentedString(attachments) + "\n" +
                "    content: " + toIndentedString(content) + "\n" +
                "    reporter: " + toIndentedString(reporter) + "\n" +
                "    summary: " + toIndentedString(summary) + "\n" +
                "    visibility: " + toIndentedString(visibility) + "\n" +
                "    $type: " + toIndentedString($type) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
