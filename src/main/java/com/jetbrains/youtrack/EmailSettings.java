/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2024.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.youtrack;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;

import java.io.IOException;
import java.util.Objects;

/**
 * Represents email settings for this YouTrack installation.
 */
@Schema(description = "Represents email settings for this YouTrack installation.")


public class EmailSettings {
    @SerializedName("id")
    private final String id = null;

    @SerializedName("isEnabled")
    private Boolean isEnabled = null;

    @SerializedName("host")
    private String host = null;

    @SerializedName("port")
    private Integer port = null;
    @SerializedName("mailProtocol")
    private MailProtocolEnum mailProtocol = null;
    @SerializedName("anonymous")
    private Boolean anonymous = null;
    @SerializedName("login")
    private String login = null;
    @SerializedName("sslKey")
    private StorageEntry sslKey = null;
    @SerializedName("from")
    private String from = null;
    @SerializedName("replyTo")
    private String replyTo = null;
    @SerializedName("$type")
    private String $type = null;

    public EmailSettings() {
        this.$type = this.getClass().getSimpleName();
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public String getId() {
        return id;
    }

    public EmailSettings isEnabled(Boolean isEnabled) {
        this.isEnabled = isEnabled;
        return this;
    }

    /**
     * Get isEnabled
     *
     * @return isEnabled
     **/
    @Schema(description = "")
    public Boolean isIsEnabled() {
        return isEnabled;
    }

    public void setIsEnabled(Boolean isEnabled) {
        this.isEnabled = isEnabled;
    }

    public EmailSettings host(String host) {
        this.host = host;
        return this;
    }

    /**
     * Get host
     *
     * @return host
     **/
    @Schema(description = "")
    public String getHost() {
        return host;
    }

    public void setHost(String host) {
        this.host = host;
    }

    public EmailSettings port(Integer port) {
        this.port = port;
        return this;
    }

    /**
     * Get port
     *
     * @return port
     **/
    @Schema(description = "")
    public Integer getPort() {
        return port;
    }

    public void setPort(Integer port) {
        this.port = port;
    }

    public EmailSettings mailProtocol(MailProtocolEnum mailProtocol) {
        this.mailProtocol = mailProtocol;
        return this;
    }

    /**
     * Get mailProtocol
     *
     * @return mailProtocol
     **/
    @Schema(description = "")
    public MailProtocolEnum getMailProtocol() {
        return mailProtocol;
    }

    public void setMailProtocol(MailProtocolEnum mailProtocol) {
        this.mailProtocol = mailProtocol;
    }

    public EmailSettings anonymous(Boolean anonymous) {
        this.anonymous = anonymous;
        return this;
    }

    /**
     * Get anonymous
     *
     * @return anonymous
     **/
    @Schema(description = "")
    public Boolean isAnonymous() {
        return anonymous;
    }

    public void setAnonymous(Boolean anonymous) {
        this.anonymous = anonymous;
    }

    public EmailSettings login(String login) {
        this.login = login;
        return this;
    }

    /**
     * Get login
     *
     * @return login
     **/
    @Schema(description = "")
    public String getLogin() {
        return login;
    }

    public void setLogin(String login) {
        this.login = login;
    }

    public EmailSettings sslKey(StorageEntry sslKey) {
        this.sslKey = sslKey;
        return this;
    }

    /**
     * Get sslKey
     *
     * @return sslKey
     **/
    @Schema(description = "")
    public StorageEntry getSslKey() {
        return sslKey;
    }

    public void setSslKey(StorageEntry sslKey) {
        this.sslKey = sslKey;
    }

    public EmailSettings from(String from) {
        this.from = from;
        return this;
    }

    /**
     * Get from
     *
     * @return from
     **/
    @Schema(description = "")
    public String getFrom() {
        return from;
    }

    public void setFrom(String from) {
        this.from = from;
    }

    public EmailSettings replyTo(String replyTo) {
        this.replyTo = replyTo;
        return this;
    }

    /**
     * Get replyTo
     *
     * @return replyTo
     **/
    @Schema(description = "")
    public String getReplyTo() {
        return replyTo;
    }

    public void setReplyTo(String replyTo) {
        this.replyTo = replyTo;
    }

    /**
     * Get $type
     *
     * @return $type
     **/
    @Schema(description = "")
    public String get$Type() {
        return $type;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        EmailSettings emailSettings = (EmailSettings) o;
        return Objects.equals(this.id, emailSettings.id) &&
                Objects.equals(this.isEnabled, emailSettings.isEnabled) &&
                Objects.equals(this.host, emailSettings.host) &&
                Objects.equals(this.port, emailSettings.port) &&
                Objects.equals(this.mailProtocol, emailSettings.mailProtocol) &&
                Objects.equals(this.anonymous, emailSettings.anonymous) &&
                Objects.equals(this.login, emailSettings.login) &&
                Objects.equals(this.sslKey, emailSettings.sslKey) &&
                Objects.equals(this.from, emailSettings.from) &&
                Objects.equals(this.replyTo, emailSettings.replyTo) &&
                Objects.equals(this.$type, emailSettings.$type);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, isEnabled, host, port, mailProtocol, anonymous, login, sslKey, from, replyTo, $type);
    }

    @Override
    public String toString() {

        String sb = "class EmailSettings {\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    isEnabled: " + toIndentedString(isEnabled) + "\n" +
                "    host: " + toIndentedString(host) + "\n" +
                "    port: " + toIndentedString(port) + "\n" +
                "    mailProtocol: " + toIndentedString(mailProtocol) + "\n" +
                "    anonymous: " + toIndentedString(anonymous) + "\n" +
                "    login: " + toIndentedString(login) + "\n" +
                "    sslKey: " + toIndentedString(sslKey) + "\n" +
                "    from: " + toIndentedString(from) + "\n" +
                "    replyTo: " + toIndentedString(replyTo) + "\n" +
                "    $type: " + toIndentedString($type) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Gets or Sets mailProtocol
     */
    @JsonAdapter(MailProtocolEnum.Adapter.class)
    public enum MailProtocolEnum {
        @SerializedName("SMTP")
        SMTP("SMTP"),
        @SerializedName("SMTPS")
        SMTPS("SMTPS"),
        @SerializedName("SMTP_TLS")
        SMTP_TLS("SMTP_TLS");

        private final String value;

        MailProtocolEnum(String value) {
            this.value = value;
        }

        public static MailProtocolEnum fromValue(String input) {
            for (MailProtocolEnum b : MailProtocolEnum.values()) {
                if (b.value.equals(input)) {
                    return b;
                }
            }
            return null;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static class Adapter extends TypeAdapter<MailProtocolEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final MailProtocolEnum enumeration) throws IOException {
                jsonWriter.value(String.valueOf(enumeration.getValue()));
            }

            @Override
            public MailProtocolEnum read(final JsonReader jsonReader) throws IOException {
                Object value = jsonReader.nextString();
                return MailProtocolEnum.fromValue((String) (value));
            }
        }
    }

}
