/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2024.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.youtrack;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Article
 */


public class Article extends BaseArticle {
    @SerializedName("id")
    private final String articleId = null;

    @SerializedName("attachments")
    private List<ArticleAttachment> articleAttachments = null;

    @SerializedName("childArticles")
    private List<Article> childArticles = null;

    @SerializedName("comments")
    private List<ArticleComment> comments = null;

    @SerializedName("content")
    private String articleContent = null;

    @SerializedName("created")
    private final Long created = null;

    @SerializedName("externalArticle")
    private ExternalArticle externalArticle = null;

    @SerializedName("hasChildren")
    private final Boolean hasChildren = null;

    @SerializedName("hasStar")
    private Boolean hasStar = null;

    @SerializedName("idReadable")
    private final String idReadable = null;

    @SerializedName("ordinal")
    private final Long ordinal = null;

    @SerializedName("parentArticle")
    private Article parentArticle = null;

    @SerializedName("pinnedComments")
    private final List<ArticleComment> pinnedComments = null;

    @SerializedName("project")
    private Project project = null;

    @SerializedName("reporter")
    private User articleReporter = null;

    @SerializedName("summary")
    private String articleSummary = null;

    @SerializedName("tags")
    private List<Tag> tags = null;

    @SerializedName("updated")
    private final Long updated = null;

    @SerializedName("updatedBy")
    private User updatedBy = null;

    @SerializedName("visibility")
    private Visibility articleVisibility = null;

    /**
     * Get articleId
     *
     * @return articleId
     **/
    @Schema(description = "")
    public String getArticleId() {
        return articleId;
    }

    public Article articleAttachments(List<ArticleAttachment> articleAttachments) {
        this.articleAttachments = articleAttachments;
        return this;
    }

    public Article addArticleAttachmentsItem(ArticleAttachment articleAttachmentsItem) {
        if (this.articleAttachments == null) {
            this.articleAttachments = new ArrayList<ArticleAttachment>();
        }
        this.articleAttachments.add(articleAttachmentsItem);
        return this;
    }

    /**
     * Get articleAttachments
     *
     * @return articleAttachments
     **/
    @Schema(description = "")
    public List<ArticleAttachment> getArticleAttachments() {
        return articleAttachments;
    }

    public void setArticleAttachments(List<ArticleAttachment> articleAttachments) {
        this.articleAttachments = articleAttachments;
    }

    public Article childArticles(List<Article> childArticles) {
        this.childArticles = childArticles;
        return this;
    }

    public Article addChildArticlesItem(Article childArticlesItem) {
        if (this.childArticles == null) {
            this.childArticles = new ArrayList<Article>();
        }
        this.childArticles.add(childArticlesItem);
        return this;
    }

    /**
     * Get childArticles
     *
     * @return childArticles
     **/
    @Schema(description = "")
    public List<Article> getChildArticles() {
        return childArticles;
    }

    public void setChildArticles(List<Article> childArticles) {
        this.childArticles = childArticles;
    }

    public Article comments(List<ArticleComment> comments) {
        this.comments = comments;
        return this;
    }

    public Article addCommentsItem(ArticleComment commentsItem) {
        if (this.comments == null) {
            this.comments = new ArrayList<ArticleComment>();
        }
        this.comments.add(commentsItem);
        return this;
    }

    /**
     * Get comments
     *
     * @return comments
     **/
    @Schema(description = "")
    public List<ArticleComment> getComments() {
        return comments;
    }

    public void setComments(List<ArticleComment> comments) {
        this.comments = comments;
    }

    public Article articleContent(String articleContent) {
        this.articleContent = articleContent;
        return this;
    }

    /**
     * Get articleContent
     *
     * @return articleContent
     **/
    @Schema(description = "")
    public String getArticleContent() {
        return articleContent;
    }

    public void setArticleContent(String articleContent) {
        this.articleContent = articleContent;
    }

    /**
     * Get created
     *
     * @return created
     **/
    @Schema(description = "")
    public Long getCreated() {
        return created;
    }

    public Article externalArticle(ExternalArticle externalArticle) {
        this.externalArticle = externalArticle;
        return this;
    }

    /**
     * Get externalArticle
     *
     * @return externalArticle
     **/
    @Schema(description = "")
    public ExternalArticle getExternalArticle() {
        return externalArticle;
    }

    public void setExternalArticle(ExternalArticle externalArticle) {
        this.externalArticle = externalArticle;
    }

    /**
     * Get hasChildren
     *
     * @return hasChildren
     **/
    @Schema(description = "")
    public Boolean isHasChildren() {
        return hasChildren;
    }

    public Article hasStar(Boolean hasStar) {
        this.hasStar = hasStar;
        return this;
    }

    /**
     * Get hasStar
     *
     * @return hasStar
     **/
    @Schema(description = "")
    public Boolean isHasStar() {
        return hasStar;
    }

    public void setHasStar(Boolean hasStar) {
        this.hasStar = hasStar;
    }

    /**
     * Get idReadable
     *
     * @return idReadable
     **/
    @Schema(description = "")
    public String getIdReadable() {
        return idReadable;
    }

    /**
     * Get ordinal
     *
     * @return ordinal
     **/
    @Schema(description = "")
    public Long getOrdinal() {
        return ordinal;
    }

    public Article parentArticle(Article parentArticle) {
        this.parentArticle = parentArticle;
        return this;
    }

    /**
     * Get parentArticle
     *
     * @return parentArticle
     **/
    @Schema(description = "")
    public Article getParentArticle() {
        return parentArticle;
    }

    public void setParentArticle(Article parentArticle) {
        this.parentArticle = parentArticle;
    }

    /**
     * Get pinnedComments
     *
     * @return pinnedComments
     **/
    @Schema(description = "")
    public List<ArticleComment> getPinnedComments() {
        return pinnedComments;
    }

    public Article project(Project project) {
        this.project = project;
        return this;
    }

    /**
     * Get project
     *
     * @return project
     **/
    @Schema(description = "")
    public Project getProject() {
        return project;
    }

    public void setProject(Project project) {
        this.project = project;
    }

    public Article articleReporter(User articleReporter) {
        this.articleReporter = articleReporter;
        return this;
    }

    /**
     * Get articleReporter
     *
     * @return articleReporter
     **/
    @Schema(description = "")
    public User getArticleReporter() {
        return articleReporter;
    }

    public void setArticleReporter(User articleReporter) {
        this.articleReporter = articleReporter;
    }

    public Article articleSummary(String articleSummary) {
        this.articleSummary = articleSummary;
        return this;
    }

    /**
     * Get articleSummary
     *
     * @return articleSummary
     **/
    @Schema(description = "")
    public String getArticleSummary() {
        return articleSummary;
    }

    public void setArticleSummary(String articleSummary) {
        this.articleSummary = articleSummary;
    }

    public Article tags(List<Tag> tags) {
        this.tags = tags;
        return this;
    }

    public Article addTagsItem(Tag tagsItem) {
        if (this.tags == null) {
            this.tags = new ArrayList<Tag>();
        }
        this.tags.add(tagsItem);
        return this;
    }

    /**
     * Get tags
     *
     * @return tags
     **/
    @Schema(description = "")
    public List<Tag> getTags() {
        return tags;
    }

    public void setTags(List<Tag> tags) {
        this.tags = tags;
    }

    /**
     * Get updated
     *
     * @return updated
     **/
    @Schema(description = "")
    public Long getUpdated() {
        return updated;
    }

    public Article updatedBy(User updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    /**
     * Get updatedBy
     *
     * @return updatedBy
     **/
    @Schema(description = "")
    public User getUpdatedBy() {
        return updatedBy;
    }

    public void setUpdatedBy(User updatedBy) {
        this.updatedBy = updatedBy;
    }

    public Article articleVisibility(Visibility articleVisibility) {
        this.articleVisibility = articleVisibility;
        return this;
    }

    /**
     * Get articleVisibility
     *
     * @return articleVisibility
     **/
    @Schema(description = "")
    public Visibility getArticleVisibility() {
        return articleVisibility;
    }

    public void setArticleVisibility(Visibility articleVisibility) {
        this.articleVisibility = articleVisibility;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Article article = (Article) o;
        return Objects.equals(this.articleId, article.articleId) &&
                Objects.equals(this.articleAttachments, article.articleAttachments) &&
                Objects.equals(this.childArticles, article.childArticles) &&
                Objects.equals(this.comments, article.comments) &&
                Objects.equals(this.articleContent, article.articleContent) &&
                Objects.equals(this.created, article.created) &&
                Objects.equals(this.externalArticle, article.externalArticle) &&
                Objects.equals(this.hasChildren, article.hasChildren) &&
                Objects.equals(this.hasStar, article.hasStar) &&
                Objects.equals(this.idReadable, article.idReadable) &&
                Objects.equals(this.ordinal, article.ordinal) &&
                Objects.equals(this.parentArticle, article.parentArticle) &&
                Objects.equals(this.pinnedComments, article.pinnedComments) &&
                Objects.equals(this.project, article.project) &&
                Objects.equals(this.articleReporter, article.articleReporter) &&
                Objects.equals(this.articleSummary, article.articleSummary) &&
                Objects.equals(this.tags, article.tags) &&
                Objects.equals(this.updated, article.updated) &&
                Objects.equals(this.updatedBy, article.updatedBy) &&
                Objects.equals(this.articleVisibility, article.articleVisibility) &&
                super.equals(o);
    }

    @Override
    public int hashCode() {
        return Objects.hash(articleId, articleAttachments, childArticles, comments, articleContent, created, externalArticle, hasChildren, hasStar, idReadable, ordinal, parentArticle, pinnedComments, project, articleReporter, articleSummary, tags, updated, updatedBy, articleVisibility, super.hashCode());
    }


    @Override
    public String toString() {
        String sb = "class Article {\n" +
                "    " + toIndentedString(super.toString()) + "\n" +
                "    articleId: " + toIndentedString(articleId) + "\n" +
                "    articleAttachments: " + toIndentedString(articleAttachments) + "\n" +
                "    childArticles: " + toIndentedString(childArticles) + "\n" +
                "    comments: " + toIndentedString(comments) + "\n" +
                "    articleContent: " + toIndentedString(articleContent) + "\n" +
                "    created: " + toIndentedString(created) + "\n" +
                "    externalArticle: " + toIndentedString(externalArticle) + "\n" +
                "    hasChildren: " + toIndentedString(hasChildren) + "\n" +
                "    hasStar: " + toIndentedString(hasStar) + "\n" +
                "    idReadable: " + toIndentedString(idReadable) + "\n" +
                "    ordinal: " + toIndentedString(ordinal) + "\n" +
                "    parentArticle: " + toIndentedString(parentArticle) + "\n" +
                "    pinnedComments: " + toIndentedString(pinnedComments) + "\n" +
                "    project: " + toIndentedString(project) + "\n" +
                "    articleReporter: " + toIndentedString(articleReporter) + "\n" +
                "    articleSummary: " + toIndentedString(articleSummary) + "\n" +
                "    tags: " + toIndentedString(tags) + "\n" +
                "    updated: " + toIndentedString(updated) + "\n" +
                "    updatedBy: " + toIndentedString(updatedBy) + "\n" +
                "    articleVisibility: " + toIndentedString(articleVisibility) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
