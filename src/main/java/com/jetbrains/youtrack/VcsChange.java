/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2024.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.youtrack;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.List;
import java.util.Objects;

/**
 * VcsChange
 */


public class VcsChange {
    @SerializedName("id")
    private final String id = null;

    @SerializedName("date")
    private final Long date = null;

    @SerializedName("fetched")
    private final Long fetched = null;

    @SerializedName("files")
    private final Integer files = null;

    @SerializedName("author")
    private User author = null;

    @SerializedName("processors")
    private final List<ChangesProcessor> processors = null;

    @SerializedName("text")
    private final String text = null;

    @SerializedName("urls")
    private final List<String> urls = null;

    @SerializedName("version")
    private String version = null;

    @SerializedName("issue")
    private Issue issue = null;

    @SerializedName("state")
    private Integer state = null;

    @SerializedName("$type")
    private String $type = null;

    public VcsChange() {
        this.$type = this.getClass().getSimpleName();
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public String getId() {
        return id;
    }

    /**
     * Get date
     *
     * @return date
     **/
    @Schema(description = "")
    public Long getDate() {
        return date;
    }

    /**
     * Get fetched
     *
     * @return fetched
     **/
    @Schema(description = "")
    public Long getFetched() {
        return fetched;
    }

    /**
     * Get files
     *
     * @return files
     **/
    @Schema(description = "")
    public Integer getFiles() {
        return files;
    }

    public VcsChange author(User author) {
        this.author = author;
        return this;
    }

    /**
     * Get author
     *
     * @return author
     **/
    @Schema(description = "")
    public User getAuthor() {
        return author;
    }

    public void setAuthor(User author) {
        this.author = author;
    }

    /**
     * Get processors
     *
     * @return processors
     **/
    @Schema(description = "")
    public List<ChangesProcessor> getProcessors() {
        return processors;
    }

    /**
     * Get text
     *
     * @return text
     **/
    @Schema(description = "")
    public String getText() {
        return text;
    }

    /**
     * Get urls
     *
     * @return urls
     **/
    @Schema(description = "")
    public List<String> getUrls() {
        return urls;
    }

    public VcsChange version(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get version
     *
     * @return version
     **/
    @Schema(description = "")
    public String getVersion() {
        return version;
    }

    public void setVersion(String version) {
        this.version = version;
    }

    public VcsChange issue(Issue issue) {
        this.issue = issue;
        return this;
    }

    /**
     * Get issue
     *
     * @return issue
     **/
    @Schema(description = "")
    public Issue getIssue() {
        return issue;
    }

    public void setIssue(Issue issue) {
        this.issue = issue;
    }

    public VcsChange state(Integer state) {
        this.state = state;
        return this;
    }

    /**
     * Get state
     *
     * @return state
     **/
    @Schema(description = "")
    public Integer getState() {
        return state;
    }

    public void setState(Integer state) {
        this.state = state;
    }

    /**
     * Get $type
     *
     * @return $type
     **/
    @Schema(description = "")
    public String get$Type() {
        return $type;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        VcsChange vcsChange = (VcsChange) o;
        return Objects.equals(this.id, vcsChange.id) &&
                Objects.equals(this.date, vcsChange.date) &&
                Objects.equals(this.fetched, vcsChange.fetched) &&
                Objects.equals(this.files, vcsChange.files) &&
                Objects.equals(this.author, vcsChange.author) &&
                Objects.equals(this.processors, vcsChange.processors) &&
                Objects.equals(this.text, vcsChange.text) &&
                Objects.equals(this.urls, vcsChange.urls) &&
                Objects.equals(this.version, vcsChange.version) &&
                Objects.equals(this.issue, vcsChange.issue) &&
                Objects.equals(this.state, vcsChange.state) &&
                Objects.equals(this.$type, vcsChange.$type);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, date, fetched, files, author, processors, text, urls, version, issue, state, $type);
    }


    @Override
    public String toString() {

        String sb = "class VcsChange {\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    date: " + toIndentedString(date) + "\n" +
                "    fetched: " + toIndentedString(fetched) + "\n" +
                "    files: " + toIndentedString(files) + "\n" +
                "    author: " + toIndentedString(author) + "\n" +
                "    processors: " + toIndentedString(processors) + "\n" +
                "    text: " + toIndentedString(text) + "\n" +
                "    urls: " + toIndentedString(urls) + "\n" +
                "    version: " + toIndentedString(version) + "\n" +
                "    issue: " + toIndentedString(issue) + "\n" +
                "    state: " + toIndentedString(state) + "\n" +
                "    $type: " + toIndentedString($type) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
