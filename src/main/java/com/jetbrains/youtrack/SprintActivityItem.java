/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2024.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.youtrack;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.List;
import java.util.Objects;

/**
 * Represents a change in the issue when it was added to or removed from an agile board sprint.
 */
@Schema(description = "Represents a change in the issue when it was added to or removed from an agile board sprint.")


public class SprintActivityItem extends MultiValueActivityItem {
    @SerializedName("id")
    private final String sprintActivityItemId = null;

    @SerializedName("target")
    private Issue sprintActivityItemTarget = null;

    @SerializedName("removed")
    private final List<Sprint> sprintActivityItemRemoved = null;

    @SerializedName("added")
    private final List<Sprint> sprintActivityItemAdded = null;

    /**
     * Get sprintActivityItemId
     *
     * @return sprintActivityItemId
     **/
    @Schema(description = "")
    public String getSprintActivityItemId() {
        return sprintActivityItemId;
    }

    public SprintActivityItem sprintActivityItemTarget(Issue sprintActivityItemTarget) {
        this.sprintActivityItemTarget = sprintActivityItemTarget;
        return this;
    }

    /**
     * Get sprintActivityItemTarget
     *
     * @return sprintActivityItemTarget
     **/
    @Schema(description = "")
    public Issue getSprintActivityItemTarget() {
        return sprintActivityItemTarget;
    }

    public void setSprintActivityItemTarget(Issue sprintActivityItemTarget) {
        this.sprintActivityItemTarget = sprintActivityItemTarget;
    }

    /**
     * Get sprintActivityItemRemoved
     *
     * @return sprintActivityItemRemoved
     **/
    @Schema(description = "")
    public List<Sprint> getSprintActivityItemRemoved() {
        return sprintActivityItemRemoved;
    }

    /**
     * Get sprintActivityItemAdded
     *
     * @return sprintActivityItemAdded
     **/
    @Schema(description = "")
    public List<Sprint> getSprintActivityItemAdded() {
        return sprintActivityItemAdded;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SprintActivityItem sprintActivityItem = (SprintActivityItem) o;
        return Objects.equals(this.sprintActivityItemId, sprintActivityItem.sprintActivityItemId) &&
                Objects.equals(this.sprintActivityItemTarget, sprintActivityItem.sprintActivityItemTarget) &&
                Objects.equals(this.sprintActivityItemRemoved, sprintActivityItem.sprintActivityItemRemoved) &&
                Objects.equals(this.sprintActivityItemAdded, sprintActivityItem.sprintActivityItemAdded) &&
                super.equals(o);
    }

    @Override
    public int hashCode() {
        return Objects.hash(sprintActivityItemId, sprintActivityItemTarget, sprintActivityItemRemoved, sprintActivityItemAdded, super.hashCode());
    }


    @Override
    public String toString() {
        String sb = "class SprintActivityItem {\n" +
                "    " + toIndentedString(super.toString()) + "\n" +
                "    sprintActivityItemId: " + toIndentedString(sprintActivityItemId) + "\n" +
                "    sprintActivityItemTarget: " + toIndentedString(sprintActivityItemTarget) + "\n" +
                "    sprintActivityItemRemoved: " + toIndentedString(sprintActivityItemRemoved) + "\n" +
                "    sprintActivityItemAdded: " + toIndentedString(sprintActivityItemAdded) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
