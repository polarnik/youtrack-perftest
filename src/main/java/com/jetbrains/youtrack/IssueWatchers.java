/*
 * YouTrack REST API
 * YouTrack issue tracking and project management system
 *
 * OpenAPI spec version: 2024.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.jetbrains.youtrack;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Represents users that are subscribed to notifications about the issue.
 */
@Schema(description = "Represents users that are subscribed to notifications about the issue.")


public class IssueWatchers {
    @SerializedName("id")
    private final String id = null;

    @SerializedName("hasStar")
    private Boolean hasStar = null;

    @SerializedName("issueWatchers")
    private List<IssueWatcher> issueWatchers = null;

    @SerializedName("duplicateWatchers")
    private final List<IssueWatcher> duplicateWatchers = null;

    @SerializedName("$type")
    private String $type = null;

    public IssueWatchers() {
        this.$type = this.getClass().getSimpleName();
    }

    /**
     * Get id
     *
     * @return id
     **/
    @Schema(description = "")
    public String getId() {
        return id;
    }

    public IssueWatchers hasStar(Boolean hasStar) {
        this.hasStar = hasStar;
        return this;
    }

    /**
     * Get hasStar
     *
     * @return hasStar
     **/
    @Schema(description = "")
    public Boolean isHasStar() {
        return hasStar;
    }

    public void setHasStar(Boolean hasStar) {
        this.hasStar = hasStar;
    }

    public IssueWatchers issueWatchers(List<IssueWatcher> issueWatchers) {
        this.issueWatchers = issueWatchers;
        return this;
    }

    public IssueWatchers addIssueWatchersItem(IssueWatcher issueWatchersItem) {
        if (this.issueWatchers == null) {
            this.issueWatchers = new ArrayList<IssueWatcher>();
        }
        this.issueWatchers.add(issueWatchersItem);
        return this;
    }

    /**
     * Get issueWatchers
     *
     * @return issueWatchers
     **/
    @Schema(description = "")
    public List<IssueWatcher> getIssueWatchers() {
        return issueWatchers;
    }

    public void setIssueWatchers(List<IssueWatcher> issueWatchers) {
        this.issueWatchers = issueWatchers;
    }

    /**
     * Get duplicateWatchers
     *
     * @return duplicateWatchers
     **/
    @Schema(description = "")
    public List<IssueWatcher> getDuplicateWatchers() {
        return duplicateWatchers;
    }

    /**
     * Get $type
     *
     * @return $type
     **/
    @Schema(description = "")
    public String get$Type() {
        return $type;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        IssueWatchers issueWatchers = (IssueWatchers) o;
        return Objects.equals(this.id, issueWatchers.id) &&
                Objects.equals(this.hasStar, issueWatchers.hasStar) &&
                Objects.equals(this.issueWatchers, issueWatchers.issueWatchers) &&
                Objects.equals(this.duplicateWatchers, issueWatchers.duplicateWatchers) &&
                Objects.equals(this.$type, issueWatchers.$type);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, hasStar, issueWatchers, duplicateWatchers, $type);
    }


    @Override
    public String toString() {

        String sb = "class IssueWatchers {\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    hasStar: " + toIndentedString(hasStar) + "\n" +
                "    issueWatchers: " + toIndentedString(issueWatchers) + "\n" +
                "    duplicateWatchers: " + toIndentedString(duplicateWatchers) + "\n" +
                "    $type: " + toIndentedString($type) + "\n" +
                "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
