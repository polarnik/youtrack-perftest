# https://docs.docker.com/compose/compose-file/
# https://docs.docker.com/compose/compose-file/05-services/

services:
  youtrack:
    #image: jetbrains/youtrack:${YOUTRACK_VERSION:?}
    build:
      context: docker/jetbrains-youtrack
      dockerfile: youtrack-with-tools.Dockerfile
    hostname: youtrack
    cpu_count: 4
    cpuset: "0-4"
    mem_reservation: 10G
    mem_limit: 10G
    memswap_limit: 0m
    mem_swappiness: 0
    oom_kill_disable: true
    restart: "no"
    pull_policy: "never"
    ports:
      - "9010:9010"
      - "9011:9011"
    depends_on:
      influxdb_v2:
        condition: service_healthy
    healthcheck:
      test: [
        "CMD-SHELL",
        "curl -S -s -k -XGET 'http://127.0.0.1:8080/api/admin/telemetry?fields=uptime,startedTime' -H 'Authorization: Bearer perm:YWRtaW4=.NDctMA==.H0e3bvoqo4HCePTiavxftedsE0M7ry'" ]
      interval: 60s
      timeout: 1s
      retries: 1
      start_period: 10s
    tmpfs:
      /tmp
    volumes:
      - ./volumes/youtrack_data:/opt/youtrack/data
      - ./volumes/youtrack_conf:/opt/youtrack/conf
      - ./volumes/youtrack_logs:/opt/youtrack/logs
      - ./volumes/youtrack_backups:/opt/youtrack/backups
      - ./volumes/youtrack_temp:/opt/youtrack/temp
      - ./volumes/youtrack_diagnostics:/diagnostics
      - "./configs/youtrack/youtrack.8g.monitoring.profiling.jvmoptions:/opt/youtrack/conf/youtrack.jvmoptions:ro"
      - "./tools/perfana/jfr-exporter/jfr-exporter-0.5.0.jar:/tools/perfana/jfr-exporter/jfr-exporter-0.5.0.jar:ro"
    networks:
      - youtrack_net

  nginx:
    image: nginx:1.26.1
    hostname: nginx
    cpu_count: 1
    cpuset: "5-7"
    mem_reservation: 100m
    mem_limit: 300m
    ports:
      - "8080:8080"
      - "443:443"
    volumes:
      - "./configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./configs/nginx/localhost.crt:/etc/nginx/ssl/server.crt:ro"
      - "./configs/nginx/localhost.key:/etc/nginx/ssl/server.key:ro"
      - ./volumes/nginx_client_temp:/spool/nginx/client_temp
      - ./volumes/nginx_cache_tmp:/var/cache/tmp
      - ./volumes/nginx_cache_cdn:/var/cache/cdn
      - ./volumes/nginx_log:/var/log/nginx/
    healthcheck:
      test: ["CMD-SHELL", "curl -S -s -k -XGET https://localhost:443/health"]
      interval: 60s
      timeout: 1s
      retries: 1
      start_period: 1s
    networks:
      - youtrack_net
    restart: "unless-stopped"

  rabbitmq:
    image: rabbitmq:3.13.7-management-alpine
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_DEFAULT_VHOST: rabbitmq
      RABBITMQ_LOG_BASE: "/var/log/rabbitmq"
      RABBITMQ_MNESIA_BASE: "/var/lib/rabbitmq/mnesia/"
    ports:
      - "5672:5672"
      - "15672:15672"

  telegraf_highload:
    image: telegraf:1.31.3
    hostname: telegraf
    cpu_count: 1
    cpuset: "5-7"
    mem_reservation: 300m
    mem_limit: 500m
    user: telegraf:135
    depends_on:
      influxdb_v2:
        condition: service_healthy
    environment:
      GOMEMLIMIT: 300MiB
      GOGC: 10
      GITHUB_EVENT_NAME: "${GITHUB_EVENT_NAME}"
      GITHUB_JOB: "${GITHUB_JOB}"
      GITHUB_RUN_ID: "${GITHUB_RUN_ID}"
      GITHUB_RUN_URL: "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
      GITHUB_WORKFLOW: ${GITHUB_WORKFLOW}
      TEST_NAME: ${TEST_NAME}
      NGINX_ADDRESS: "https://nginx/status"
      GRAFANA_ADDRESS: "http://grafana:3000/metrics"
      YOUTRACK_ADDRESS: ""
      INFLUX_HOST: "http://influxdb_v2:8086"
      INFLUX_TOKEN: ${INFLUX_TOKEN:-F1qh_md8H07Fvo9uxtb_3D7ggAXYXFqy-N1G-TpbARKc0IFYW5WZ0ipE4UUrLP4MR87kPcjkDWO6KQtvwtY8Nw==}
      INFLUX_ORG: "youtrack"
    volumes:
      - "./configs/telegraf_highload_input/telegraf.conf:/etc/telegraf/telegraf.conf:ro"
      - "./configs/telegraf_highload_input/telegraf.d:/etc/telegraf/telegraf.d:ro"
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8088:8088"
      - "8089:8089"
    healthcheck:
      test: ["CMD-SHELL", "curl -S -s -XGET localhost:8080"]
      interval: 30s
      timeout: 1s
      retries: 1
      start_period: 15s
    networks:
      - youtrack_net
    restart: "no"

  influxdb_v2:
    # influx setup --username "$DOCKER_INFLUXDB_INIT_USERNAME" --password "$DOCKER_INFLUXDB_INIT_PASSWORD" --token "$INFLUX_TOKEN" --org "$DOCKER_INFLUXDB_INIT_ORG" --bucket "$DOCKER_INFLUXDB_INIT_BUCKET" --retention 0 --force --host "http://influxdb_v2:8086"
    image: influxdb:2.7.10
    hostname: influxdb_v2
    cpu_count: 1
    cpuset: "5-7"
    mem_reservation: 1500m
    mem_limit: 1500m
    environment:
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUX_TOKEN:-F1qh_md8H07Fvo9uxtb_3D7ggAXYXFqy-N1G-TpbARKc0IFYW5WZ0ipE4UUrLP4MR87kPcjkDWO6KQtvwtY8Nw==}
      DOCKER_INFLUXDB_INIT_BUCKET: "gatling"
      DOCKER_INFLUXDB_INIT_MODE: "setup"
      DOCKER_INFLUXDB_INIT_ORG: "youtrack"
      DOCKER_INFLUXDB_INIT_PASSWORD: "password"
      DOCKER_INFLUXDB_INIT_RETENTION: "72h0m0s"
      DOCKER_INFLUXDB_INIT_USERNAME: "admin"
      GOGC: 10
      GOMEMLIMIT: 1000MiB
      INFLUXD_BOLT_PATH: "/var/lib/influxdb2/influxd.bolt"
      INFLUXD_ENGINE_PATH: "/var/lib/influxdb2/engine"
      INFLUXD_FLUX_LOG_ENABLED: "false"
      INFLUXD_HTTP_BIND_ADDRESS: ":8086"
      INFLUXD_LOG_LEVEL: "info"
      INFLUXD_QUERY_CONCURRENCY: 1
      INFLUXD_QUERY_INITIAL_MEMORY_BYTES: 100000
      INFLUXD_QUERY_MEMORY_BYTES: 100000
      INFLUXD_QUERY_QUEUE_SIZE: 100
      INFLUXD_REPORTING_DISABLED: "true"
      INFLUXD_STORAGE_CACHE_MAX_MEMORY_SIZE: 300000000
      INFLUXD_STORAGE_CACHE_SNAPSHOT_MEMORY_SIZE: 100000000
      INFLUXD_STORAGE_COMPACT_THROUGHPUT_BURST: 80388608
      INFLUXD_STORAGE_MAX_CONCURRENT_COMPACTIONS: 1
      INFLUXD_STORAGE_SERIES_FILE_MAX_CONCURRENT_SNAPSHOT_COMPACTIONS: 1
      INFLUXD_STORAGE_SERIES_ID_SET_CACHE_SIZE: 0
      INFLUXD_STORAGE_WAL_MAX_CONCURRENT_WRITES: 1
      INFLUXD_STORAGE_WAL_MAX_WRITE_DELAY: 10m
      INFLUXD_STORAGE_WRITE_TIMEOUT: 10s
      INFLUX_HOST: "http://influxdb_v2:8086"
      INFLUX_TOKEN: ${INFLUX_TOKEN:-F1qh_md8H07Fvo9uxtb_3D7ggAXYXFqy-N1G-TpbARKc0IFYW5WZ0ipE4UUrLP4MR87kPcjkDWO6KQtvwtY8Nw==}
      INFLUX_ORG: "youtrack"
    ports:
      - "8086:8086"
    volumes:
      - "./volumes/influx-v2-data:/var/lib/influxdb2/"
      - "./configs/influxdb_v2/user_script:/docker-entrypoint-initdb.d"
    healthcheck:
      test: ["CMD-SHELL", "curl -S -s -XGET localhost:8086/health"]
      interval: 60s
      timeout: 1s
      retries: 1
      start_period: 10s
    networks:
      - youtrack_net
    restart: "no"

  sjk:
    image: maven:3.9.9-amazoncorretto-21-debian
    cpu_count: 1
    cpuset: "5-7"
    mem_reservation: 200m
    mem_limit: 300m
    environment:
      OUTPUT_FOLDER: "/tmp/report"
    depends_on:
      gatling-issue-generation:
        condition: service_started
      youtrack:
        condition: service_healthy
    volumes:
      - "./tools/aragozin/jvm-tools:/tmp/jvm-tools"
      - "./volumes/sjk/repository:/root/.m2/repository"
      - "./volumes/sjk/report:/tmp/report"
    tmpfs:
      - /tmp
    working_dir: /tmp/jvm-tools
    restart: "no"
    command: bash -c "
      mvn org.apache.maven.plugins:maven-dependency-plugin:3.8.0:get
        -Dartifact=org.gridkit.jvmtool:sjk-plus:0.23 &
      mvn dependency:copy &&
      chmod +x ./sjk.sh &&
      ./sjk.sh &&
      ./sjk.sh &&
      ./sjk.sh &&
      ./sjk.sh &&
      ./sjk.sh &&
      ./sjk.sh &&
      ./sjk.sh &&
      ./sjk.sh &&
      ./sjk.sh &&
      ./sjk.sh &&
      echo Done
      "
    networks:
      - youtrack_net

  gatling-issue-generation:
    image: maven:3.9.9-amazoncorretto-21-debian
    cpu_count: 2
    cpuset: "5-7"
    mem_reservation: 2000m
    mem_limit: 3000m
    depends_on:
      telegraf_highload:
        condition: service_healthy
      influxdb_v2:
        condition: service_healthy
      youtrack:
        condition: service_healthy
      nginx:
        condition: service_healthy
    volumes:
      - "./src:/tmp/gatling/src:ro"
      - "./pom.xml:/tmp/gatling/pom.xml:ro"
      - "./volumes/gatling/repository:/root/.m2/repository"
      - "./tools/perfana:/tools/perfana:ro"
      - "./volumes/gatling/io.netty.native.workdir:/io.netty.native.workdir"
      - "./volumes/gatling/jansi.tmpdir:/jansi.tmpdir"
      - "./volumes/gatling/issue-generation:/tmp/gatling/target/load-test-results"
      - "./volumes/gatling/big.dataset:/big.dataset:ro"
      - "./datasources:/datasources:ro"
    tmpfs:
      - /tmp
    working_dir: /tmp/gatling
    restart: "no"
    command: bash -x -c "
      echo 'Starting g2i in detached mode, saving PID in variable' &&
      export G2IPID=$$(/tools/perfana/gatling-to-influxdb/g2i-linux-amd64
      ./target/load-test-results --address http://nginx:8089
      --system-under-test issue_generation --test-environment local --stop-timeout 90
      --database g2i_gatling --password password --username g2i_gatling
      --log /tmp/g2i.log -d | awk '{print $$2}')
      &&
      echo 'Build and execute test' &&
      mvn test -P issue-generation-40-rps
      &&
      echo 'Waiting for parser to safely finish all its work' &&
      sleep 30
      &&
      cat /tmp/g2i.log &&
      echo 'Sending interrupt signal to g2i process' &&
      kill -INT $$G2IPID
      &&
      echo 'Waiting for process to stop safely' &&
      sleep 30
      &&
      echo 'Exiting'
      "
    networks:
      - youtrack_net

networks:
  youtrack_net: