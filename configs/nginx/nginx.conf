#user  nobody
worker_processes auto;
worker_rlimit_nofile 4096;
events {
    worker_connections 2048;
    multi_accept on;
}


# https://nginx.org/ru/docs/http/ngx_http_core_module.html
http {
    # https://nginx.org/ru/docs/http/ngx_http_core_module.html#client_body_buffer_size
    client_body_buffer_size 16k;
    # https://nginx.org/ru/docs/http/ngx_http_core_module.html#client_body_temp_path
    client_body_temp_path /spool/nginx/client_temp 1 2;

    # 408 (Request Time-out)
    client_body_timeout 60s;

    client_header_buffer_size 1k;
    # 414 (Request-URI Too Large) - URL Size
    # 400 (Bad Request) - Header Size
    large_client_header_buffers 4 8k;

    # 408 (Request Time-out)
    client_header_timeout 60s;

    # 413 (Request Entity Too Large)
    client_max_body_size 10m;

    default_type text/plain;

    keepalive_requests 1000;
    keepalive_time 1h;
    keepalive_timeout 75s;

    limit_rate 0;

    lingering_close on;

    postpone_output 1460;

    send_timeout 60s;
    sendfile off;
    sendfile_max_chunk 2m;

    tcp_nodelay on;

    access_log off;
    error_log /var/log/nginx/error.log;

    # Compression.
    # https://nginx.org/ru/docs/http/ngx_http_gzip_module.html
    gzip on;
    gzip_buffers 16 8k;
    gzip_comp_level 6;
    gzip_disable "msie6";
    gzip_http_version 1.1;
    gzip_min_length 20;
    gzip_proxied any;
    gzip_vary on;
    gzip_types text/plain application/javascript text/javascript text/css application/json application/xml text/xml application/rss+xml;

    proxy_temp_path    /var/cache/tmp;
    proxy_cache_path /var/cache/cdn keys_zone=cdn:64m max_size=1g inactive=14d;
    proxy_cache_bypass $http_x_update;
    limit_conn_zone $server_name zone=perserver:10m;


    # https://nginx.org/ru/docs/http/ngx_http_v2_module.html
    http2 on;
    http2_body_preread_size 64k;
    http2_chunk_size 8k;
    http2_max_concurrent_streams 128;
    http2_recv_buffer_size 256k;

    upstream youtrack {
        server youtrack:8080;
        keepalive 5000;
    }

    upstream telegraf_8086_jfr_youtrack {
        server telegraf:8086;
        keepalive 5000;
    }
    upstream telegraf_8087_jfr_gatling {
        server telegraf:8087;
        keepalive 5000;
    }
    upstream telegraf_8088_x2i_gatling {
        server telegraf:8088;
        keepalive 5000;
    }
    upstream telegraf_8089_g2i_gatling {
        server telegraf:8089;
        keepalive 5000;
    }
    upstream influxdb {
        server influxdb_v2:8086;
        keepalive 5000;
    }
    server {
        listen 443 ssl;

        #access_log /var/log/nginx/youtrack_access.log main buffer=16k;
        error_log /var/log/nginx/youtrack_error.log;

        server_name localhost;
        add_header Strict-Transport-Security max-age=31536000;

        # https://nginx.org/ru/docs/http/ngx_http_ssl_module.html
        ssl_session_cache shared:SSL:10m;
        ssl_buffer_size 16k;
        ssl_certificate "/etc/nginx/ssl/server.crt";
        ssl_certificate_key "/etc/nginx/ssl/server.key";
        ssl_session_timeout 5m;
        ssl_ciphers TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE:HIGH:!aNULL:!MD5:!COMPLEMENTOFDEFAULT;
        add_header Strict-Transport-Security "max-age=31536000";
        ssl_prefer_server_ciphers off;

        #client_max_body_size 10m;
        #client_body_buffer_size 128k;
        #client_header_buffer_size 5m;
        #large_client_header_buffers 16 5m;

        # https://nginx.org/ru/docs/http/ngx_http_stub_status_module.html
        location = /status {
            stub_status;
        }
        location = /health {
            default_type application/json;
            #add_header 'Content-Type' 'application/json';
            #proxy_set_header 'Content-Type' 	'application/json';
            return 200 '{"status":"UP", "nginx_version":"$nginx_version", "time_iso8601":"$time_iso8601", "remote_addr":"$remote_addr", "pid":"$pid", "ssl_alpn_protocol":"$ssl_alpn_protocol", "ssl_cipher":"$ssl_cipher", "ssl_ciphers":"$ssl_ciphers", "ssl_protocol":"$ssl_protocol", "ssl_session_id":"$ssl_session_id", "ssl_session_reused":"$ssl_session_reused", "gzip_ratio":"$gzip_ratio"}';
        }



        location / {
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_cache off;
            proxy_buffers 8 64k;
            proxy_busy_buffers_size 128k;
            proxy_buffer_size 64k;

            client_max_body_size 10m;

            proxy_http_version 1.1;
            proxy_pass http://youtrack;
        }
        location /api/eventSourceBus {
            proxy_cache off;
            proxy_buffering off;
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
            proxy_set_header Connection '';
            chunked_transfer_encoding off;

            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_pass http://youtrack/api/eventSourceBus;
        }
        location /debug {
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;

            # to proxy WebSockets in nginx

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_pass http://youtrack/debug;
            proxy_pass_header Sec-Websocket-Extensions;
        }
    }
    server {
        listen 8086;
        location /ping {
            default_type application/json;
            add_header 'Content-Type' 'application/json';
            add_header 'X-Influxdb-Build' 'OSS';
            add_header 'X-Influxdb-Version' '1.8.10';
            return 204;
        }
        location /write {
            proxy_pass http://telegraf_8086_jfr_youtrack;
        }
        location /query {
            proxy_pass http://influxdb;
        }
    }
    server {
        listen 8087;
        location /ping {
            default_type application/json;
            add_header 'Content-Type' 'application/json';
            add_header 'X-Influxdb-Build' 'OSS';
            add_header 'X-Influxdb-Version' '1.8.10';
            return 204;
        }
        location /write {
            proxy_pass http://telegraf_8087_jfr_gatling;
        }
        location /query {
            proxy_pass http://influxdb;
        }
    }
    server {
        listen 8088;
        location /ping {
            default_type application/json;
            add_header 'Content-Type' 'application/json';
            add_header 'X-Influxdb-Build' 'OSS';
            add_header 'X-Influxdb-Version' '1.8.10';
            return 204;
        }
        location /write {
            proxy_pass http://telegraf_8088_x2i_gatling;
        }
        location /query {
            proxy_pass http://influxdb;
        }
    }
    server {
        listen 8089;
        location /ping {
            default_type application/json;
            add_header 'Content-Type' 'application/json';
            add_header 'X-Influxdb-Build' 'OSS';
            add_header 'X-Influxdb-Version' '1.8.10';
            return 204;
        }
        location /write {
            proxy_pass http://telegraf_8089_g2i_gatling;
        }
        location /query {
            proxy_pass http://influxdb;
        }
    }

#     server {
#         listen 8080;
#         client_max_body_size 20m;
#         location /query {
#             proxy_cache mycache;
#             proxy_cache_key "$host$request_uri";
#             proxy_cache_min_uses 1;
#             proxy_cache_methods GET;
#             proxy_cache_valid 200 302 10m;
#             proxy_cache_valid 404      1m;
#
#             proxy_cache_background_update on;
#             proxy_cache_revalidate on;
#             proxy_cache_lock on;
#             add_header X-Cache-Status $upstream_cache_status;
#             proxy_ignore_headers Cache-Control;
#             proxy_hide_header 'Access-Control-Allow-Origin';
#             if ($http_origin = ''){
#                 set $http_origin "*";
#             }
#
#             if ($request_method = 'OPTIONS') {
#                 #proxy_hide_header 'Access-Control-Allow-Origin';
#                 add_header 'Access-Control-Allow-Origin' $http_origin;
#                 add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
#                 #
#                 # Custom headers and headers various browsers *should* be OK with but aren't
#                 #
#                 add_header 'Access-Control-Allow-Headers' 'Pragma,Accept,Authorization,Content-Type,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
#                 #
#                 # Tell client that this pre-flight info is valid for 20 days
#                 #
#                 add_header 'Access-Control-Max-Age' 1728000;
#                 add_header 'Content-Type' 'text/plain charset=UTF-8';
#                 add_header 'Content-Length' 0;
#                 add_header 'Access-Control-Allow-Credentials' 'true';
#                 return 204;
#             }
#             if ($request_method = 'GET') {
#                 add_header 'Access-Control-Allow-Origin' $http_origin;
#                 add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
#                 add_header 'Access-Control-Allow-Credentials' 'true';
#                 add_header 'Access-Control-Allow-Headers' 'Pragma,Accept,Authorization,Content-Type,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
#                 proxy_pass http://youtrack;
#             }
#             if ($request_method = 'POST') {
#                 add_header 'Access-Control-Allow-Origin' $http_origin;
#                 add_header 'Access-Control-Allow-Credentials' 'true';
#                 add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
#                 add_header 'Access-Control-Allow-Headers' 'Pragma,Accept,Authorization,Content-Type,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
#                 proxy_pass http://youtrack;
#             }
#         }
#
#         location / {
#             proxy_pass http://youtrack;
#         }
#     }
}
